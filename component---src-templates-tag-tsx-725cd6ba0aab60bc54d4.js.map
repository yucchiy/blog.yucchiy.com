{"version":3,"file":"component---src-templates-tag-tsx-725cd6ba0aab60bc54d4.js","mappings":"gLAWe,SAASA,EAAT,GAAuD,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YACtC,OACEC,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,+BACbF,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,gCAAgCH,EAAYI,IAA1D,SACCL,EAAKM,kBAAkBC,MAAMC,KAAI,YAAa,IAAD,EAAVC,EAAU,EAAVA,KAClC,GAAmB,MAAfA,EAAKC,QAAuC,OAArB,UAAAD,EAAKC,cAAL,eAAaC,OAChB,MAApBF,EAAKG,aAAgD,MAAzBH,EAAKG,YAAYC,MAA0C,MAA1BJ,EAAKG,YAAYE,MAChF,OACEZ,EAAAA,cAAAA,MAAAA,MAIJ,IAAMa,EAAON,EAAKG,YAAYG,MAAQ,GAEtC,OACEb,EAAAA,cAACc,EAAAA,EAAD,CACEF,MAAOL,EAAKG,YAAYE,MACxBH,KAAMF,EAAKC,OAAOC,KAClBM,YAAaR,EAAKG,YAAYK,YAC9BC,UAAWT,EAAKG,YAAYC,KAC5BE,KAAMA","sources":["webpack://blog/./src/templates/tag.tsx"],"sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport { TagPageQuery } from \"../../graphql-types\";\nimport Layout from \"../components/Layout\";\nimport PostListElement from \"../components/PostListElement\";\n\ntype TagPageProps = {\n  data: TagPageQuery,\n  pageContext: any,\n}\n\nexport default function Template({data, pageContext}: TagPageProps ) {\n  return (\n    <Layout>\n      <div className=\"container mx-auto max-w-3xl\">\n        <h1 className=\"text-2xl font-bold mb-4 mx-6\">{pageContext.tag}の記事一覧</h1>\n        {data.allMarkdownRemark.edges.map(({node}) => {\n          if (node.fields == null || node.fields?.slug == null ||\n              node.frontmatter == null || node.frontmatter.date == null || node.frontmatter.title == null) {\n            return(\n              <div/>\n            )\n          }\n\n          const tags = node.frontmatter.tags || []\n\n          return (\n            <PostListElement\n              title={node.frontmatter.title}\n              slug={node.fields.slug}\n              description={node.frontmatter.description}\n              published={node.frontmatter.date}\n              tags={tags}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String!) {\n    allMarkdownRemark(\n      sort: {fields: frontmatter___date, order: DESC}\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Template","data","pageContext","React","Layout","className","tag","allMarkdownRemark","edges","map","node","fields","slug","frontmatter","date","title","tags","PostListElement","description","published"],"sourceRoot":""}