{"componentChunkName":"component---src-templates-post-tsx","path":"/2014/10/14/ruby-batch-parallel/","result":{"data":{"markdownRemark":{"html":"<p>研究のプログラムで, さくっと結果出したいけど, パラメータのチューニングも面倒なので,\n適当に指定したパラメータの組み合わせを与えて, プログラムを回したいことは結構多いと思う.</p>\n<p>その時に同じプログラムに異なるパラメータを投げて, そのバッチ実行を並列化したい, ということをRubyだと簡単にできるので紹介.\nちなみに動作環境は, Mac OS X Mavericksで, Rubyは2.1.3を利用している.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#!/usr/bin/env ruby</span>\n\n<span class=\"token keyword\">require</span> <span class=\"token string-literal\"><span class=\"token string\">'rubygems'</span></span>\n<span class=\"token keyword\">require</span> <span class=\"token string-literal\"><span class=\"token string\">'parallel'</span></span>\n\nnum_process <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n\n\nps1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nps2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nps3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\nParallel<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span><span class=\"token punctuation\">(</span>ps1<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span>ps2<span class=\"token punctuation\">,</span> ps3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:in_processes</span> <span class=\"token operator\">=></span> num_thread<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>e<span class=\"token operator\">|</span>\n  p1 <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n  p2 <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  p3 <span class=\"token operator\">=</span> e<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n  cmd <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"./hoge </span><span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span><span class=\"token content\">p1</span><span class=\"token delimiter punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span><span class=\"token content\">p2</span><span class=\"token delimiter punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span><span class=\"token content\">p3</span><span class=\"token delimiter punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n  system cmd\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>ポイントは, <code>Parallel#each</code>に渡す配列を<code>Array#product</code>メソッドを用いて組み合わせを生成しているところで, こうすると, <code>ps1</code>, <code>ps2</code>, <code>ps3</code>のパラメータの組み合わせを簡単に列挙できる.</p>","excerpt":"研究のプログラムで, さくっと結果出したいけど, パラメータのチューニングも面倒なので,\n適当に指定したパラメータの組み合わせを与えて, プログラムを回したいことは結構多いと思う. その時に同じプログラムに異なるパラメータを投げて, そのバッチ実行を並列化したい, ということをRubyだと簡単にできるので紹介.\nちなみに動作環境は, Mac OS X Mavericksで, Rubyは2.1.3を利用している. ポイントは, Parallel#eachに渡す配列をArray#product…","fields":{"slug":"/2014/10/14/ruby-batch-parallel/"},"frontmatter":{"date":"October 14, 2014","type":null,"tags":null,"title":"Rubyで簡単にバッチ処理の並列化を行う","description":null,"eyecatch":null}}},"pageContext":{"id":"f7aaf9f9-2e07-5362-9336-03d994d34a6f"}},"staticQueryHashes":["1480509143","3159585216"]}