{"componentChunkName":"component---src-templates-post-tsx","path":"/2014/07/17/tutorial-hubot-slack-heroku/","result":{"data":{"markdownRemark":{"html":"<p>業務関係で少しHubotを触ったので, 備忘録代わりにブログに書いてみた.</p>\n<h2 id=\"インストール\" style=\"position:relative;\"><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"インストール permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>インストール</h2>\n<p>以下の環境が必要になるので予めインストールする.</p>\n<ul>\n<li>Node.js, npm</li>\n<li>CoffeeScript</li>\n<li>Redis(データ永続化に必要. 必要に応じてインストールする)</li>\n</ul>\n<p>Macの場合は, HomeBrewでインストールするのが楽.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install node redis-server</code></pre></div>\n<p><code>Hubot</code>は, npmからインストールできる.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g coffee-script hubot</code></pre></div>\n<h2 id=\"botを作成してみる\" style=\"position:relative;\"><a href=\"#bot%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\" aria-label=\"botを作成してみる permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Botを作成してみる</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">hubot --create mybot\ncd mybot\nnpm install --save</code></pre></div>\n<h3 id=\"gitでバージョン管理\" style=\"position:relative;\"><a href=\"#git%E3%81%A7%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%AE%A1%E7%90%86\" aria-label=\"gitでバージョン管理 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gitでバージョン管理</h3>\n<p>はじめから<code>.gitignore</code>が用意されているので, おもむろにInitial commit.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd mybot\ngit init\ngit add .\ngit commit -m \"Initial commit.\"</code></pre></div>\n<h3 id=\"動作確認\" style=\"position:relative;\"><a href=\"#%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D\" aria-label=\"動作確認 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>動作確認</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">./bin/hubot\nHubot> hubot hi\nHubot> hi\nHubot> exit</code></pre></div>\n<h2 id=\"自作スクリプトを書く\" style=\"position:relative;\"><a href=\"#%E8%87%AA%E4%BD%9C%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E6%9B%B8%E3%81%8F\" aria-label=\"自作スクリプトを書く permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自作スクリプトを書く</h2>\n<p><code>scripts</code>ディレクトリ以下にスクリプトを設置する.</p>\n<h3 id=\"特定の文字列に反応してつぶやく\" style=\"position:relative;\"><a href=\"#%E7%89%B9%E5%AE%9A%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%81%AB%E5%8F%8D%E5%BF%9C%E3%81%97%E3%81%A6%E3%81%A4%E3%81%B6%E3%82%84%E3%81%8F\" aria-label=\"特定の文字列に反応してつぶやく permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>特定の文字列に反応してつぶやく</h3>\n<p><code>robot.hear</code>を用いる. 第1引数に正規表現を, 第2引数に行いたい処理を関数で渡す.\nこの時関数に, <code>msg</code>オブジェクトが渡ってくるので, <code>msg.send</code>でBotを喋らせることができる.</p>\n<p>以下, <code>hoge</code>とつぶやいたら<code>piyo</code>とつぶやくBotの例.</p>\n<div class=\"gatsby-highlight\" data-language=\"coffee\"><pre class=\"language-coffee\"><code class=\"language-coffee\">util <span class=\"token operator\">=</span> require <span class=\"token string\">'util'</span>↲\n↲\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>robot<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>↲\n  robot<span class=\"token punctuation\">.</span>hear <span class=\"token operator\">/</span>hoge<span class=\"token operator\">/</span>i<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>↲\n    msg<span class=\"token punctuation\">.</span>send <span class=\"token string\">'piyo'</span></code></pre></div>\n<h3 id=\"特定の時間につぶやくcron\" style=\"position:relative;\"><a href=\"#%E7%89%B9%E5%AE%9A%E3%81%AE%E6%99%82%E9%96%93%E3%81%AB%E3%81%A4%E3%81%B6%E3%82%84%E3%81%8Fcron\" aria-label=\"特定の時間につぶやくcron permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>特定の時間につぶやく(Cron)</h3>\n<p>node-cronモジュールを用いると, 簡単に定期実行処理をHubotに行わせることができる.\nnode-cronはnpmからインストールできる.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install cron --save</code></pre></div>\n<p>以下, 日本時間の8時に, <code>おはよう朝だYo</code>とつぶやくスクリプト例.</p>\n<div class=\"gatsby-highlight\" data-language=\"coffee\"><pre class=\"language-coffee\"><code class=\"language-coffee\">cron <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cron'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>CronJob\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>robot<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">cron</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0 0 8 * * *'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    robot<span class=\"token punctuation\">.</span>messageRoom <span class=\"token string\">\"#general\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"おはよう朝だYo\"</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Asia/Tokyo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"環境変数の受け取り方\" style=\"position:relative;\"><a href=\"#%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0%E3%81%AE%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8A%E6%96%B9\" aria-label=\"環境変数の受け取り方 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>環境変数の受け取り方</h3>\n<p><code>process.env</code>を使う</p>\n<h2 id=\"botをherokuで運用する\" style=\"position:relative;\"><a href=\"#bot%E3%82%92heroku%E3%81%A7%E9%81%8B%E7%94%A8%E3%81%99%E3%82%8B\" aria-label=\"botをherokuで運用する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BotをHerokuで運用する</h2>\n<p>Hubotは普通, そこまでサーバーのスペックを要求しないので(?)運用するには\nHerokuが気軽で良いと判断し, Herokuをホスティングサーバーとしてみた.</p>\n<p>まずHerokuを利用するの必要なツールをbrewインストールする.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install heroku-toolbelt</code></pre></div>\n<h4 id=\"herokuにhubotをデプロイ\" style=\"position:relative;\"><a href=\"#heroku%E3%81%ABhubot%E3%82%92%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4\" aria-label=\"herokuにhubotをデプロイ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HerokuにHubotをデプロイ</h4>\n<p><code>git push</code>でデプロイを行う.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku create --stack cedar\ngit push heroku master\nheroku addons:add rediscloud # Heroku上でVerifyしていないとエラー\nheroku ps:scale web=1</code></pre></div>\n<h4 id=\"herokuで運用してるhubotとslackを連携\" style=\"position:relative;\"><a href=\"#heroku%E3%81%A7%E9%81%8B%E7%94%A8%E3%81%97%E3%81%A6%E3%82%8Bhubot%E3%81%A8slack%E3%82%92%E9%80%A3%E6%90%BA\" aria-label=\"herokuで運用してるhubotとslackを連携 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Herokuで運用してるHubotとSlackを連携</h4>\n<p>まず, SlackのIntegrationsからHubot連携して, <code>HUBOT_SLACK_TOKEN</code>を控えておく.\n次に, herokuコマンドで設定.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku config:add HUBOT_SLACK_TOKEN=xxxx\nheroku config:add HUBOT_SLACK_TEAM=yucchiy\nheroku config:add HUBOT_SLACK_BOTNAME=yucchiy-bot\nheroku config:add HEROKU_URL=http://yucchiy.herokuapp.com/</code></pre></div>\n<p>他にも, 監視チャンネルを制御する設定もある.</p>\n<ul>\n<li><code>HUBOT_SLACK_CHANNELMODE</code>\n<ul>\n<li>後述する, <code>HUBOT_SLACK_CHANNELS</code>と併用する. <code>whitelist</code>と<code>blacklist</code>が選択できる.</li>\n</ul>\n</li>\n<li><code>HUBOT_SLACK_CHANNELMODE</code>\n<ul>\n<li>カンマ区切りでチャンネル名を指定する.</li>\n<li><code>HUBOT_SLACK_CHANNELS</code>に<code>whiltelist</code>と指定すると, 指定したチャンネルのみを監視し, <code>blacklist</code>を指定すると, 指定したチャンネルは監視しないようになる</li>\n</ul>\n</li>\n</ul>\n<p>詳細は<a href=\"https://github.com/tinyspeck/hubot-slack\">https://github.com/tinyspeck/hubot-slack</a>より確認できる.</p>\n<p>次に, <code>Procfile</code>をslackのアダプタをロードするように変更する.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">web: bin/hubot --adapter slack</code></pre></div>\n<p>上記を設定の上, herokuのmasterブランチにデプロイすることで, slack連携が行われるようになる.</p>\n<h2 id=\"参考url\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83url\" aria-label=\"参考url permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考URL</h2>\n<ul>\n<li><a href=\"http://hilott.hateblo.jp/entry/2012/07/09/004115\">node.jsで環境変数を受け取る。herokuでの設定方法。</a></li>\n<li><a href=\"http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/\">Hubotを使ったirc-bot作成メモ</a></li>\n<li><a href=\"http://d.hatena.ne.jp/anatoo/20120204/1328368042\">github社製ボットフレームワーク、hubotをIRCボットとして導入した話(修正あり</a></li>\n<li><a href=\"http://nanapi.co.jp/blog/2014/06/04/slack_with_hubot/\">Slack上のボットをHubotで作ってHerokuにデプロイしてみた</a></li>\n</ul>","excerpt":"業務関係で少しHubotを触ったので, 備忘録代わりにブログに書いてみた. インストール 以下の環境が必要になるので予めインストールする. Node.js, npm CoffeeScript Redis(データ永続化に必要. 必要に応じてインストールする) Macの場合は, HomeBrewでインストールするのが楽. Hubotは, npmからインストールできる. Botを作成してみる Gitでバージョン管理 はじめから.gitignoreが用意されているので, おもむろにInitial…","fields":{"slug":"/2014/07/17/tutorial-hubot-slack-heroku/"},"frontmatter":{"date":"July 17, 2014","type":null,"tags":null,"title":"Hubot+Herokuでbot入門+Slack連携","description":null,"eyecatch":null}}},"pageContext":{"id":"acd88afc-cbeb-569d-8aeb-9180ce88f461"}},"staticQueryHashes":["1480509143","3159585216"]}