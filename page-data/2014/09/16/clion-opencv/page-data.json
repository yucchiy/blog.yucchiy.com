{"componentChunkName":"component---src-templates-post-tsx","path":"/2014/09/16/clion-opencv/","result":{"data":{"markdownRemark":{"html":"<p>JetBrainsが最近C/C++用のIDEである<a href=\"http://www.jetbrains.com/clion/\">CLion</a>をリリースしてて, いままでMac&#x26;C++(主に研究でOpenCVを使う都合)の環境に困ってた僕に朗報だったので早速導入した.\n今回は, CLionでOpenCVを動かしてみたのでそのメモを備忘録代わりにブログに書いてみた.</p>\n<p>ちなみに動作環境は, Mac OS X Mavericks.</p>\n<h2 id=\"インストール\" style=\"position:relative;\"><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"インストール permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>インストール</h2>\n<h3 id=\"opencvのインストール\" style=\"position:relative;\"><a href=\"#opencv%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"opencvのインストール permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OpenCVのインストール</h3>\n<p>OpenCVは, ビルドにCMakeを要するので, Homebrewとかでインストールしておく. 最近だと3.0.xが入るっぽい.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install cmake</code></pre></div>\n<p>次にOpenCVをインストールする.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir tmp\ngit clone git@github.com:Itseez/opencv.git\ncd opencv\ngit checkout 2.4.9\nmkdir release\ncd release\ncmake  ../\nmake\nmake install</code></pre></div>\n<h2 id=\"clionからopencvを利用する\" style=\"position:relative;\"><a href=\"#clion%E3%81%8B%E3%82%89opencv%E3%82%92%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B\" aria-label=\"clionからopencvを利用する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CLionからOpenCVを利用する</h2>\n<p>まずおもむろにCLionからNew Projectを作成する. すると, <code>CMakeLists.txt</code>と<code>main.cpp</code>が作成される. OpenCVを上記の通りにビルドしている場合は,\n<code>CMakeLists.txt</code>で, <code>find_package(OpenCV)</code>を呼び出し, <code>target_link_libraries</code>で, OpenCVのライブラリを読み込むことで利用できる.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cmake_minimum_required(VERSION 3.0.0)\nproject(sample_clion_opencv)\n\nfind_package(OpenCV REQUIRED)\n\nset(SOURCE_FILES main.cpp)\nadd_executable(sample_clion_opencv ${SOURCE_FILES})\ntarget_link_libraries(sample_clion_opencv ${OpenCV_LIBS})</code></pre></div>\n<p>試しに, SURF特徴を抽出して表示するサンプルを書いてみた.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/opencv.hpp></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/nonfree/nonfree.hpp></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    cv<span class=\"token double-colon punctuation\">::</span>Mat image <span class=\"token operator\">=</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lena.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>image<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"No image data\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">initModule_features2d</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    cv<span class=\"token double-colon punctuation\">::</span>Ptr<span class=\"token operator\">&lt;</span>cv<span class=\"token double-colon punctuation\">::</span>FeatureDetector<span class=\"token operator\">></span> detector <span class=\"token operator\">=</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">FeatureDetector</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SURF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cv<span class=\"token double-colon punctuation\">::</span>Ptr<span class=\"token operator\">&lt;</span>cv<span class=\"token double-colon punctuation\">::</span>DescriptorExtractor<span class=\"token operator\">></span> extractor <span class=\"token operator\">=</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">DescriptorExtractor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SURF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    vector<span class=\"token operator\">&lt;</span>cv<span class=\"token double-colon punctuation\">::</span>KeyPoint<span class=\"token operator\">></span> keypoints<span class=\"token punctuation\">;</span>\n    cv<span class=\"token double-colon punctuation\">::</span>Mat descriptor<span class=\"token punctuation\">;</span>\n\n    detector<span class=\"token operator\">-></span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> keypoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    extractor<span class=\"token operator\">-></span><span class=\"token function\">compute</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> keypoints<span class=\"token punctuation\">,</span> descriptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    cv<span class=\"token double-colon punctuation\">::</span>Mat output<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">drawKeypoints</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> keypoints<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">imwrite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output.png\"</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","excerpt":"JetBrainsが最近C/C++用のIDEであるCLionをリリースしてて, いままでMac&C++(主に研究でOpenCVを使う都合)の環境に困ってた僕に朗報だったので早速導入した.\n今回は, CLionでOpenCVを動かしてみたのでそのメモを備忘録代わりにブログに書いてみた. ちなみに動作環境は, Mac OS X Mavericks. インストール OpenCVのインストール OpenCVは, ビルドにCMakeを要するので, Homebrewとかでインストールしておく. 最近だと…","fields":{"slug":"/2014/09/16/clion-opencv/"},"frontmatter":{"date":"September 15, 2014","type":null,"tags":null,"title":"CLionでOpenCV","description":null,"eyecatch":null}}},"pageContext":{"id":"ea71c542-9e8a-5f7e-af4c-ff13df136700"}},"staticQueryHashes":["1480509143","3159585216"]}