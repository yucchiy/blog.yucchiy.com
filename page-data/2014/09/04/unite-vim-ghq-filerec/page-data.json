{"componentChunkName":"component---src-templates-post-tsx","path":"/2014/09/04/unite-vim-ghq-filerec/","result":{"data":{"markdownRemark":{"html":"<p>レポジトリの管理とか自分の中ではうまい解決がなくて, 昔はプロジェクトにジャンプするzsh関数書いてたりした.</p>\n<p>最近ではghqとpecoを使って便利ってなってたところに, たまたまTL上で<a href=\"https://github.com/sorah/unite-ghq\">unite-ghq</a>の存在を知って, 使ってみたらしっくりきたのでブログ書いた.</p>\n<p>.vimrcに以下のように記述する. ただし<a href=\"https://github.com/motemen/ghq\">ghq</a>のインストールは予め済ませておき, .vimrcに<a href=\"https://github.com/sorah/unite-ghq/issues/1\">ghqへのパスを通す必要がある</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\">NeoBundle <span class=\"token string\">'sorah/unite-ghq'</span>\n\n<span class=\"token builtin\">noremap</span> <span class=\"token punctuation\">[</span>unite<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>Nop<span class=\"token operator\">></span>\nmap     <span class=\"token operator\">&lt;</span>Leader<span class=\"token operator\">></span><span class=\"token keyword\">u</span> <span class=\"token punctuation\">[</span>unite<span class=\"token punctuation\">]</span>\n\nnnoremap <span class=\"token operator\">&lt;</span><span class=\"token keyword\">silent</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span>unite<span class=\"token punctuation\">]</span><span class=\"token keyword\">p</span>         <span class=\"token punctuation\">:</span><span class=\"token operator\">&lt;</span>C<span class=\"token operator\">-</span><span class=\"token keyword\">u</span><span class=\"token operator\">></span>Unite file_rec<span class=\"token operator\">/</span>async<span class=\"token operator\">&lt;</span>CR<span class=\"token operator\">></span>\nnnoremap <span class=\"token operator\">&lt;</span><span class=\"token keyword\">silent</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span>unite<span class=\"token punctuation\">]</span>g         <span class=\"token punctuation\">:</span><span class=\"token operator\">&lt;</span>C<span class=\"token operator\">-</span><span class=\"token keyword\">u</span><span class=\"token operator\">></span>Unite ghq<span class=\"token operator\">&lt;</span>CR<span class=\"token operator\">></span></code></pre></div>\n<p>プロジェクトディレクトリ移動は<code>,ug</code>で行って, プロジェクト内でのファイル検索は<code>,up</code>で行う. 便利.</p>\n<p>今までは<a href=\"https://github.com/yucchiy/dotfiles/blob/master/zsh/zsh/sources/peco/src.zsh\">ghqとpecoを組み合わせて</a>プロジェクトディレクトリに移動し, そこでvimを開くみたいな感じだったが, これだとすべてvimで完結してよいと思った.</p>","excerpt":"レポジトリの管理とか自分の中ではうまい解決がなくて, 昔はプロジェクトにジャンプするzsh関数書いてたりした. 最近ではghqとpecoを使って便利ってなってたところに, たまたまTL上でunite-ghqの存在を知って, 使ってみたらしっくりきたのでブログ書いた. .vimrcに以下のように記述する. ただしghqのインストールは予め済ませておき, .vimrcにghqへのパスを通す必要がある. プロジェクトディレクトリ移動は,ugで行って, プロジェクト内でのファイル検索は,up…","fields":{"slug":"/2014/09/04/unite-vim-ghq-filerec/"},"frontmatter":{"date":"September 03, 2014","type":null,"tags":null,"title":"unite-ghqとfile_recが便利","description":null,"eyecatch":null}}},"pageContext":{"id":"0221fb93-0643-585a-9294-20d62fd52f98"}},"staticQueryHashes":["1480509143","3159585216"]}