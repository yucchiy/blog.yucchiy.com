{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2014/10/18/install-opencv3-with-contrib/","result":{"data":{"markdownRemark":{"html":"<p>OpenCV3-alphaが公開されて, せっかくだしアップデートして使ってみようと思ったらSIFT/SURFなどの局所特徴のモジュールが入っておらず,\nどうやらopencvのレポジトリとは別に<a href=\"https://github.com/Itseez/opencv_contrib\">opencv_contrib</a>というレポジトリで管理されていたので,\nOpenCV3にopencv_contribモジュールを取り込んでインストールし, SURFを使うところまでを備忘録がわりにブログに書いた.</p>\n<p>検証環境はUbuntu14.04でgcc4.8.</p>\n<h2 id=\"インストール\" style=\"position:relative;\"><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"インストール permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>インストール</h2>\n<p>まずはOpenCVをコンパイルする. OpenCV3のコンパイルにはCMakeの2.8.8以降が必要. Ubuntu14.04 だとデフォルトで2.8.8以降をaptでインストールできる.</p>\n<p>徐ろにgithubから<a href=\"https://github.com/Itseez/opencv/\">Itseez/opencv</a>と<a href=\"https://github.com/Itseez/opencv_contrib/\">Itseez/opencv_contrib</a>をダウンロードしてくる.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir tmp\ncd tmp\ngit clone https://github.com/Itseez/opencv.git\ngit clone https://github.com/Itseez/opencv_contrib.git</code></pre></div>\n<p>次にCMakeを使ってMakefileを生成, コンパイルしてインストール.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd opencv\nmkdir release &amp;&amp; cd release\ncmake -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules -DWITH_TBB=YES -DWITH_EIGEN=YES ../\nmake -j5\nsudo make install</code></pre></div>\n<p>ポイントは<code>OPENCV_EXTRA_MODULES_PATH</code>に<code>opencv_contrib/modules</code>を指定しているところで, これで勝手にopencv_contribも取り込んでくれる. 便利.\nあとお好みに合わせてオプションを指定する. 上記だと, Intel TBBとEigenを利用できるようにしてる.</p>\n<h2 id=\"利用する\" style=\"position:relative;\"><a href=\"#%E5%88%A9%E7%94%A8%E3%81%99%E3%82%8B\" aria-label=\"利用する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>利用する</h2>\n<p>これでSIFTやSURFなどの局所特徴が利用できる. 注意点として, OpenCVにある<code>opencv2/features2d.hpp</code>をインクルードするだけではSIFTやSURFを利用できず,\n<code>opencv2/xfeatures2d/nonfree.hpp</code>をインクルードする必要がある. また, <code>cv::nonfree::initModule_xfeatures2d</code>を(<code>cv::initModule_features2d</code>ではなく)\nよんでやらないと, <code>cv::FeatureDetector::create</code>の呼び出しが失敗し, nullが返ってくるので注意.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/core.hpp></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/imgcodecs.hpp></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv2/xfeatures2d.hpp></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    cv<span class=\"token double-colon punctuation\">::</span>Mat image <span class=\"token operator\">=</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lena.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>image<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"No image data\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    cv<span class=\"token double-colon punctuation\">::</span>xfeatures2d<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">initModule_xfeatures2d</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    cv<span class=\"token double-colon punctuation\">::</span>Ptr<span class=\"token operator\">&lt;</span>cv<span class=\"token double-colon punctuation\">::</span>FeatureDetector<span class=\"token operator\">></span> detector <span class=\"token operator\">=</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">FeatureDetector</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SURF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>↲\n    cv<span class=\"token double-colon punctuation\">::</span>Ptr<span class=\"token operator\">&lt;</span>cv<span class=\"token double-colon punctuation\">::</span>DescriptorExtractor<span class=\"token operator\">></span> extractor <span class=\"token operator\">=</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">DescriptorExtractor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SURF\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>↲\n\n    std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>cv<span class=\"token double-colon punctuation\">::</span>KeyPoint<span class=\"token operator\">></span> keypoints<span class=\"token punctuation\">;</span>\n    cv<span class=\"token double-colon punctuation\">::</span>Mat descriptor<span class=\"token punctuation\">;</span>\n\n    detector<span class=\"token operator\">-></span><span class=\"token function\">detect</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> keypoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    extractor<span class=\"token operator\">-></span><span class=\"token function\">compute</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> keypoints<span class=\"token punctuation\">,</span> descriptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    cv<span class=\"token double-colon punctuation\">::</span>Mat output<span class=\"token punctuation\">;</span>\n    cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">drawKeypoints</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> keypoints<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">imwrite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output.png\"</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","excerpt":"OpenCV3-alphaが公開されて, せっかくだしアップデートして使ってみようと思ったらSIFT/SURFなどの局所特徴のモジュールが入っておらず,\nどうやらopencvのレポジトリとは別にopencv_contribというレポジトリで管理されていたので,\nOpenCV3にopencv_contribモジュールを取り込んでインストールし, SURFを使うところまでを備忘録がわりにブログに書いた. 検証環境はUbuntu14.04でgcc4.8. インストール まずはOpenCV…","fields":{"slug":"/articles/2014/10/18/install-opencv3-with-contrib/"},"frontmatter":{"date":"October 18, 2014","type":null,"tags":null,"title":"OpenCV3をSIFT・SURFを使えるようにインストールして使ってみる","description":null,"eyecatch":null}}},"pageContext":{"id":"8dca7ee3-abf8-5852-8bca-2ea333153668"}},"staticQueryHashes":["1480509143","3159585216"]}