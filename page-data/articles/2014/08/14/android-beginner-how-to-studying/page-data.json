{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2014/08/14/android-beginner-how-to-studying/","result":{"data":{"markdownRemark":{"html":"<p>3,4年ウェッブエンジニアだった僕が, Androidエンジニアにジョブチェンして1週間経った(もちろん今まで通りウェブエンジニアは続けるけど). そんな僕がどういうふうにAndroidについて学習してるか記事にしてみた.</p>\n<p>まだAndroidエンジニアになってから間もないので, この記事を見た方で, これは間違ってるよとか, このやり方が良いよって意見がある方は, ぜひコメントとか<a href=\"https://twitter.com/yucchiy_\">@yucchiy_</a>までリプライとかしてもらえると嬉しいです.</p>\n<h2 id=\"開発環境\" style=\"position:relative;\"><a href=\"#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83\" aria-label=\"開発環境 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>開発環境</h2>\n<p>まず学習法とかの前に環境どうしてるかについて. 結論は<strong>Android Studio</strong>をベースとして開発環境を整えるのがしっくりきてる.</p>\n<h3 id=\"eclipse-vs-android-studio\" style=\"position:relative;\"><a href=\"#eclipse-vs-android-studio\" aria-label=\"eclipse vs android studio permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Eclipse vs Android Studio</h3>\n<p>Eclipse vs Android Studioだけど, 普段からWebStormとかPHPStormを使うことが多かったのでInteliJ PlatformなAndroid Studioを開発環境として選択した.</p>\n<h4 id=\"android-studioのインストール\" style=\"position:relative;\"><a href=\"#android-studio%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" aria-label=\"android studioのインストール permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Android Studioのインストール</h4>\n<p>Android Studioは, Caskからコマンド一つでインストールできる.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew cask install android-studio</code></pre></div>\n<p>またAndroid SDKは, Android Studioに入ってるものもあるが, スタンドアロンなSDKを用意しておく方が検証が楽そう. Homebrewを使ってる場合は, 以下のコマンドでインストールできる.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install android-studio</code></pre></div>\n<p>Android StudioからスタンドアロンなSDKにパスを通すには<code>Project Structure</code>(多分<code>Cmd + </code>で立ち上がるやつ)から,SDK Location > Android SDK Locationで設定できる. BrewでインストールしたSDKは<code>/user/local/Cellar/android-studio</code>に配置されている.</p>\n<h4 id=\"android-studioの便利なショートカット\" style=\"position:relative;\"><a href=\"#android-studio%E3%81%AE%E4%BE%BF%E5%88%A9%E3%81%AA%E3%82%B7%E3%83%A7%E3%83%BC%E3%83%88%E3%82%AB%E3%83%83%E3%83%88\" aria-label=\"android studioの便利なショートカット permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Android Studioの便利なショートカット</h4>\n<p>多分Eclipseにもあるんだろうけど<strong>便利なショートカットが豊富</strong>で, <code>Cmd + b</code>でクラスの定義元に飛んだり, Can't resolve errorが出てて, importするだけで解決するような場合は, 該当行に移動して<code>Alt + Shift</code>すると勝手にimportを行ってくれたり, クラスとかゲッター・セッターを自動で定義したかったら<code>Cmd + n</code>でいい感じにやってくれる. 多分他にもいろんな便利ショートカットが存在すると思うのでどんどん調べていきたい.</p>\n<h3 id=\"動作確認\" style=\"position:relative;\"><a href=\"#%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D\" aria-label=\"動作確認 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>動作確認</h3>\n<p>手元に端末があったら, 特にこだわりがない限りは実機に転送して検証した方が良い. Androidデフォルトの端末は重たいし, 起動に時間がかかってストレスフルだった.</p>\n<p>複数端末検証でエミュレータ使うなら<a href=\"http://www.genymotion.com/\">Genymotion</a>一択だと思う. しかし手元の環境ではまだ動かせてない.</p>\n<h2 id=\"学習法\" style=\"position:relative;\"><a href=\"#%E5%AD%A6%E7%BF%92%E6%B3%95\" aria-label=\"学習法 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>学習法</h2>\n<p>前提として僕はJavaのコーディング経験が半年弱くらい(?)有り, 主に<a href=\"https://gist.github.com/yucchiy/2885090\">プログラミングコンテストでJavaを利用していた</a>. なので, Javaの基本的なコーティングとCollectionの使い方はなんとなく分かる. このへんの基本的な文法をしっかり抑えておかないと, Android開発は難しいと思うので, まず先にその辺をおさえておくのが良さそう.</p>\n<h3 id=\"mixiのandroidtrainingの基礎編を流し読み\" style=\"position:relative;\"><a href=\"#mixi%E3%81%AEandroidtraining%E3%81%AE%E5%9F%BA%E7%A4%8E%E7%B7%A8%E3%82%92%E6%B5%81%E3%81%97%E8%AA%AD%E3%81%BF\" aria-label=\"mixiのandroidtrainingの基礎編を流し読み permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MixiのAndroidTrainingの基礎編を流し読み</h3>\n<p>何もわからない状態だと簡単な画面遷移さえもままならないので, 軽く参考資料を流し読みした. ウェブの資料では, Mixiの<a href=\"https://github.com/mixi-inc/AndroidTraining\">Androidのテキスト</a>が情報がまとまっていてよかった. ただし<strong>全部理解しようとするのではなく</strong>, どんなことをするのにこういうものを使えばいい, くらいを抑えておくので十分そう. ActivityとFragmentがどうなってるとか, Intent使うと画面遷移できるとか, Viewの作り方とかどうするかとか, その辺を抑えるだけでも十分だと思う.</p>\n<p>特にAndroidは覚えることが多そうで, それらをちゃんと把握しきるのは大変なので, 作りながら<strong>困ったときやリファクタリング時に</strong>はじめて詳しく調べるのが効率が良さそう.</p>\n<h3 id=\"作りたいものを決めてgithubを漁る\" style=\"position:relative;\"><a href=\"#%E4%BD%9C%E3%82%8A%E3%81%9F%E3%81%84%E3%82%82%E3%81%AE%E3%82%92%E6%B1%BA%E3%82%81%E3%81%A6github%E3%82%92%E6%BC%81%E3%82%8B\" aria-label=\"作りたいものを決めてgithubを漁る permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>作りたいものを決めてGithubを漁る</h3>\n<p>僕がAndroidアプリで作ろうものは, とあるウェブサービスからOAuth連携して, APIからデータを引っ張ってきてデータを表示するビュワーアプリである. まずやったこととして, 「android oauth」でGithubで調べて, なんとなく<strong>スターが多いライブラリ</strong>を見つけてその<strong>サンプルのソースを写経</strong>することをした.</p>\n<p>具体的には, <a href=\"https://github.com/wuman/android-oauth-client\">wuman/android-oauth-client</a>というライブラリがあって, その<a href=\"https://github.com/wuman/android-oauth-client/tree/master/samples\">サンプル</a>がかなり充実していたので, それを写経したり, さらにサンプルをいじって遊んだした.</p>\n<p>この時<strong>動作検証のサイクルをこまめに行なう</strong>ということを注意して行った.</p>\n<p>というのも, まだ慣れてない状態でまとめて写経して検証を行うと, 写経をミスっていたり, そのサンプルを更にいじったりするときに, 問題の切り分けが難しくなる. そのため, こまめに動作検証を行なったほうが学習効率が良い. 細かく動作検証を行うには, そのサンプルがどの順番で動くかをちゃんと把握しないといけないので, <strong>Androidのライフサイクルの理解が深まったり</strong>とか一石二鳥だと思う.</p>\n<p>このように学習することで, APIの連携にはどういうライブラリを使えばいいとか, <a href=\"https://github.com/wuman/android-oauth-client/blob/master/samples/src/main/java/com/wuman/oauth/samples/twitter/api/model/Tweet.java\">APIとクラスのインスタンスの紐付け</a>をどうするとか, AsyncTaskLoaderは<a href=\"https://github.com/wuman/android-oauth-client/blob/master/samples/src/main/java/com/wuman/oauth/samples/twitter/TwitterActivity.java#L137\">独自のローダを定義しておく</a>と何かと便利そうだとか, ListViewへアダプタ渡すときは<a href=\"https://github.com/wuman/android-oauth-client/blob/master/samples/src/main/java/com/wuman/oauth/samples/twitter/TwitterActivity.java#L206\">Decoratorパターン用意してアダプタとローダをセットで渡す</a>とスッキリかけて良いし再利用しやすそうだとか, 様々な知見が得られるし, アプリを作る上で必要な知見を効率よく学習できると思う.</p>\n<h3 id=\"復習として作ったあとに情報整理\" style=\"position:relative;\"><a href=\"#%E5%BE%A9%E7%BF%92%E3%81%A8%E3%81%97%E3%81%A6%E4%BD%9C%E3%81%A3%E3%81%9F%E3%81%82%E3%81%A8%E3%81%AB%E6%83%85%E5%A0%B1%E6%95%B4%E7%90%86\" aria-label=\"復習として作ったあとに情報整理 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>復習として作ったあとに情報整理</h3>\n<p>作りたいものがある程度作れたら, 使ったクラスを詳しく調べなおしたり, Mixiのテキストで使った箇所を詳しく読んでみたり, 冗長になってしまった箇所をリファクタリングしてみたりすると, やったことを深く理解できると思うし忘れにくい知識が身につくと思う.</p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>ざっくり, Androidエンジニアになって1週間の僕の実践している学習法について書いてみた. まとめると, Githubとかで先人の知恵を得ることと, 必要になったクラスとか機能を学ぶことで, 効率的に実践的なコーディングができるんではということを長々と書いた.</p>\n<p>冒頭にも書いたけどもっと良いやり方があるとか, これはおかしいと思うことがアレば, コメントとか<a href=\"https://twitter.com/yucchiy_\">@yucchiy_</a>へどうぞ.</p>","excerpt":"3,4年ウェッブエンジニアだった僕が, Androidエンジニアにジョブチェンして1週間経った(もちろん今まで通りウェブエンジニアは続けるけど). そんな僕がどういうふうにAndroidについて学習してるか記事にしてみた. まだAndroidエンジニアになってから間もないので, この記事を見た方で, これは間違ってるよとか, このやり方が良いよって意見がある方は, ぜひコメントとか@yucchiy…","fields":{"slug":"/articles/2014/08/14/android-beginner-how-to-studying/"},"frontmatter":{"date":"August 14, 2014","type":null,"tags":["android"],"title":"Androidエンジニアになった僕の開発環境と学習法","description":null,"eyecatch":null}}},"pageContext":{"id":"238067f8-8d83-55d3-a6cd-0758efbda247"}},"staticQueryHashes":["1480509143","3159585216"]}