{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/project/unity-weekly/069/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"unity-official\" style=\"position:relative;\"><a href=\"#unity-official\" aria-label=\"unity official permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Official</h1>\n<h2 id=\"unity-と-net今後の取り組みについて\" style=\"position:relative;\"><a href=\"#unity-%E3%81%A8-net%E4%BB%8A%E5%BE%8C%E3%81%AE%E5%8F%96%E3%82%8A%E7%B5%84%E3%81%BF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\" aria-label=\"unity と net今後の取り組みについて permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity と .NET：今後の取り組みについて</h2>\n<p><a href=\"https://blog.unity.com/ja/technology/unity-and-net-whats-next\">Unity と .NET：今後の取り組みについて | Unity Blog</a></p>\n<p>Unityの.NET統合の今後の取り組みについて紹介しています。</p>\n<ul>\n<li>C#開発ワークフローの改善\n<ul>\n<li>イテレーション時間の改善</li>\n<li>MSBuildへの移行</li>\n<li>Burst使用時のC# IDEデバッグ体験の改善</li>\n</ul>\n</li>\n<li>.NET ランタイム近代化（.NET Core CLRランタイムへの移行）\n<ul>\n<li>初段にデスクトッププラットフォームのスタンドアロンプレイヤーを対象に、.NET CoreCLR のサポート</li>\n<li>次段にUnity エディターを .NET CoreCLR に移植</li>\n</ul>\n</li>\n<li>Unity ランタイムの近代化\n<ul>\n<li>async/await プログラミングモデルの改善</li>\n<li>Span活用によるメモリ割り当て・コピーの削減</li>\n</ul>\n</li>\n</ul>\n<p>この記事で紹介する内容は、GDC 2022の「<a href=\"https://www.youtube.com/watch?v=3SBP2Gpm97k\">Unity and .NET, what’s next?</a>」というセッションでも発表されています。</p>\n<h2 id=\"oscって何unityビジュアルスクリプティングでosc通信してみよう\" style=\"position:relative;\"><a href=\"#osc%E3%81%A3%E3%81%A6%E4%BD%95unity%E3%83%93%E3%82%B8%E3%83%A5%E3%82%A2%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%A7osc%E9%80%9A%E4%BF%A1%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\" aria-label=\"oscって何unityビジュアルスクリプティングでosc通信してみよう permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OSCって何？UnityビジュアルスクリプティングでOSC通信してみよう！</h2>\n<p><a href=\"https://learning.unity3d.jp/8322/\">OSCって何？UnityビジュアルスクリプティングでOSC通信してみよう！ | Unity Learning Materials</a></p>\n<p>ビジュアルスクリプティングを用いて、Unityと外部のデバイスがOpen Sound Countrol（OSC）を介して双方向に通信する方法について紹介しています。</p>\n<p><a href=\"https://github.com/keijiro/OscJack\">OscJack</a>というパッケージを用いて<a href=\"https://hexler.net/touchosc\">TouchOSC</a>というアプリからのOSCを受信し、Unityエディター内のGameObjectのTransformの操作や、UnityエディターからOSCを送信してM5StickC PLUSを操作を、ビジュアルスクリプティングのみで実装する方法についてそれぞれ解説しています。</p>\n<h2 id=\"kで瞬間検索unity-searchを使いこなそう\" style=\"position:relative;\"><a href=\"#k%E3%81%A7%E7%9E%AC%E9%96%93%E6%A4%9C%E7%B4%A2unity-search%E3%82%92%E4%BD%BF%E3%81%84%E3%81%93%E3%81%AA%E3%81%9D%E3%81%86\" aria-label=\"kで瞬間検索unity searchを使いこなそう permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⌘Kで瞬間検索！Unity Searchを使いこなそう！</h2>\n<p><a href=\"https://learning.unity3d.jp/8321/\">⌘Kで瞬間検索！Unity Searchを使いこなそう！ | Unity Learning Materials</a></p>\n<p>Unity 2021 LTSからエディターの標準機能として使える Unity Searchの基本的な利用方法からサーチ拡張まで紹介しています。</p>\n<p>Unity Searchのショートカット呼び出しからアセット検索や検索画面内蔵のインスペクターでアセットを直接調整する方法、高度な機能の紹介として関数を用いた特定アセットの特定のプロパティでのソート方法（動画ではプロジェクト内のテクスチャアセットをサイズでソートする方法などの紹介）や特定の条件を満たすアセット一覧の抽出方法（動画ではHealthが一定以上のキャラクターデータの抽出方法の紹介）、標準のObjectPickerをUnity Searchに切り替えるプロジェクト設定の紹介やObjectPickerを開いたときのサーチウインドウにデフォルトで入る文字列をカスタマイズする方法、Unity Searchのクエリサンプルなどの参考資料についてそれぞれ解説しています。</p>\n<h1 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h1>\n<h2 id=\"iosネイティブプラグイン開発を完全に理解する---サンプルコードをswiftだけで完結出来るように置き換える\" style=\"position:relative;\"><a href=\"#ios%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E9%96%8B%E7%99%BA%E3%82%92%E5%AE%8C%E5%85%A8%E3%81%AB%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B---%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92swift%E3%81%A0%E3%81%91%E3%81%A7%E5%AE%8C%E7%B5%90%E5%87%BA%E6%9D%A5%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E7%BD%AE%E3%81%8D%E6%8F%9B%E3%81%88%E3%82%8B\" aria-label=\"iosネイティブプラグイン開発を完全に理解する   サンプルコードをswiftだけで完結出来るように置き換える permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>iOSネイティブプラグイン開発を完全に理解する - サンプルコードをSwiftだけで完結出来るように置き換える</h2>\n<p><a href=\"https://qiita.com/mao_/items/07466e169d08cbeff221\">【Unity】iOSネイティブプラグイン開発を完全に理解する - サンプルコードをSwiftだけで完結出来るように置き換える - Qiita</a></p>\n<p>この記事の著者が以前執筆した「<a href=\"https://qiita.com/mao_/items/07466e169d08cbeff221\">iOSネイティブプラグイン開発を完全に理解する</a>」の、UnityのiOSネイティブプラグインの開発を、Swiftのソースコードのみで完結させる方法について紹介しています。</p>\n<p>Swiftの <code>@_cdecl</code> を用いてSwift上からC互換な関数を定義し、これをC#のメソッド呼び出しにマップして呼び出すことで、SwiftのみでiOSネイティブプラグインを実装する方法と、この方法で<a href=\"https://qiita.com/mao_/items/07466e169d08cbeff221\">前述の記事</a>の実装をObj-CからSwift実装に置き換える方法を解説しています。</p>\n<h2 id=\"finite-state-machine-for-ai-enemy-controller-in-2d\" style=\"position:relative;\"><a href=\"#finite-state-machine-for-ai-enemy-controller-in-2d\" aria-label=\"finite state machine for ai enemy controller in 2d permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Finite State Machine for AI Enemy Controller in 2D</h2>\n<p><a href=\"https://pavcreations.com/finite-state-machine-for-ai-enemy-controller-in-2d/\">Finite State Machine for AI Enemy Controller in 2D - Pav Creations</a></p>\n<p>Finite State Machine（FSM）によって敵AIをモデリングする方法と、ScriptableObjectベースなステートや遷移などがアセット化可能なFSMの実装方法、実装したFSMによって2Dプラットフォームなゲームの敵AIを実装する方法についてそれぞれ解説しています。</p>\n<h2 id=\"unity上で外部デバイスとの同期処理を行うための考察\" style=\"position:relative;\"><a href=\"#unity%E4%B8%8A%E3%81%A7%E5%A4%96%E9%83%A8%E3%83%87%E3%83%90%E3%82%A4%E3%82%B9%E3%81%A8%E3%81%AE%E5%90%8C%E6%9C%9F%E5%87%A6%E7%90%86%E3%82%92%E8%A1%8C%E3%81%86%E3%81%9F%E3%82%81%E3%81%AE%E8%80%83%E5%AF%9F\" aria-label=\"unity上で外部デバイスとの同期処理を行うための考察 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity上で外部デバイスとの同期処理を行うための考察</h2>\n<p><a href=\"https://synamon.hatenablog.com/entry/2022/04/27/183000\">Unity上で外部デバイスとの同期処理を行うための考察(デバイスセットアップ編) - Synamon’s Engineer blog</a></p>\n<p><a href=\"https://synamon.hatenablog.com/entry/2022/05/18/000000\">Unity上で外部デバイスとの同期処理を行うための考察(タイムコード読み取り編) - Synamon’s Engineer blog</a></p>\n<p>デバイス間での同期処理を行うためのタイムコードについての紹介と、Unity上でマイク入力を受け付け、タイムコードをデコードすることで、外部デバイス（記事内ではTimeCode Generatorというアプリ）の時間とUnityエディターで動くアプリケーションの時間を同期する方法についてそれぞれ解説しています。</p>\n<h2 id=\"urpで出来るだけシンプルなコードでpostprocessswapbuffer編\" style=\"position:relative;\"><a href=\"#urp%E3%81%A7%E5%87%BA%E6%9D%A5%E3%82%8B%E3%81%A0%E3%81%91%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AA%E3%82%B3%E3%83%BC%E3%83%89%E3%81%A7postprocessswapbuffer%E7%B7%A8\" aria-label=\"urpで出来るだけシンプルなコードでpostprocessswapbuffer編 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URPで出来るだけシンプルなコードでPostProcess【SwapBuffer編】</h2>\n<p><a href=\"https://qiita.com/ScreenPocket/items/b45100d6262c9b005a14\">URPで出来るだけシンプルなコードでPostProcess【SwapBuffer編】 - Qiita</a></p>\n<p>Universal Render Pipeline（URP） 12で実装されたSwapBufferによって、画面全体の描画結果を格納したレンダーテクスチャの管理やポストプロセッシングが簡単にかけるようになった件についての言及と、この機能を用いた画面全体のモノクロ化処理の実装方法について解説しています。</p>\n<h2 id=\"効率的なスクロールビューを実装するためのossloop-scroll-rect使い方まとめ\" style=\"position:relative;\"><a href=\"#%E5%8A%B9%E7%8E%87%E7%9A%84%E3%81%AA%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%83%93%E3%83%A5%E3%83%BC%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AEossloop-scroll-rect%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"効率的なスクロールビューを実装するためのossloop scroll rect使い方まとめ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>効率的なスクロールビューを実装するためのOSS『Loop Scroll Rect』使い方まとめ</h2>\n<p><a href=\"https://light11.hatenadiary.com/entry/2022/05/16/201949\">効率的なスクロールビューを実装するためのOSS『Loop Scroll Rect』使い方まとめ - LIGHT11</a></p>\n<p>Scroll Rectの再利用などの実装によって、大量の要素があっても効率的なスクロールビューの実装をサポートする「<a href=\"https://github.com/qiankanglai/LoopScrollRect\">Loop Scroll Rect</a>」の紹介とこの使い方についてまとめています。</p>\n<h2 id=\"unity-as-a-library-のハマりポイント集\" style=\"position:relative;\"><a href=\"#unity-as-a-library-%E3%81%AE%E3%83%8F%E3%83%9E%E3%82%8A%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E9%9B%86\" aria-label=\"unity as a library のハマりポイント集 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity as a Library のハマりポイント集</h2>\n<p><a href=\"https://qiita.com/warapuri/items/1353c60eb615b4974e88\">Unity as a Library のハマりポイント集 - Qiita</a></p>\n<p>iOSアプリ開発で、Unity as a LibraryによってUnityが出力したライブラリを使う際（この記事では Unity + SwiftUIによるアプリ開発）のハマりポイントについてQ&#x26;A方式で紹介しています。</p>\n<h2 id=\"urp対応の2dプロジェクトを作成する方法と既存2dプロジェクトをuprに移行する方法unityurp\" style=\"position:relative;\"><a href=\"#urp%E5%AF%BE%E5%BF%9C%E3%81%AE2d%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95%E3%81%A8%E6%97%A2%E5%AD%982d%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92upr%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95unityurp\" aria-label=\"urp対応の2dプロジェクトを作成する方法と既存2dプロジェクトをuprに移行する方法unityurp permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URP対応の2Dプロジェクトを作成する方法と既存2DプロジェクトをUPRに移行する方法【Unity】【URP】</h2>\n<p><a href=\"https://kan-kikuchi.hatenablog.com/entry/URP_2D?utm_source=feed\">URP対応の2Dプロジェクトを作成する方法と既存2DプロジェクトをUPRに移行する方法【Unity】【URP】 - (:3[kanのメモ帳]</a></p>\n<p>新規で作成した2DプロジェクトのレンダリングパイプラインをURPに設定する方法と、既存の（ビルトインレンダーパイプラインで実装された）2DプロジェクトをURPに移行するための「Convert Built-in to 2D（URP）」というツールの使い方についてそれぞれ紹介しています。</p>","excerpt":"Unity Official Unity と .NET：今後の取り組みについて Unity と .NET：今後の取り組みについて | Unity Blog Unityの.NET統合の今後の取り組みについて紹介しています。 C#開発ワークフローの改善 イテレーション時間の改善 MSBuildへの移行 Burst使用時のC# IDEデバッグ体験の改善 .NET ランタイム近代化（.NET Core CLR…","fields":{"slug":"/articles/project/unity-weekly/069/"},"frontmatter":{"date":"May 22, 2022","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"Unity and .NET, what’s next? - Unity Weekly #069","description":null,"eyecatch":null}}},"pageContext":{"id":"2583126f-f2eb-5788-9419-898bbc9a6b36"}},"staticQueryHashes":["1480509143","3159585216"]}