{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2015/11/10/hello-opengl-with-golang/","result":{"data":{"markdownRemark":{"html":"<p>普段は業務でゲームのプロジェクトでサーバーサイドエンジニアとしてJavaを書いているのだけれど,\nプロジェクトのネイティブエンジニアがワイワイ楽しそうに話しているのを聞いていて楽しそう,\nというのと少しUnityを触る機会ができたので, 自分もCGとかやってワイワイやろうと思って, 暇な時にOpenGLを触りだした.</p>\n<p>しかし, ただCとかで書いても面白く無い(?)かなと思って, 最近ハマっているGolangで書き始めた.</p>\n<h2 id=\"gl\" style=\"position:relative;\"><a href=\"#gl\" aria-label=\"gl permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GL</h2>\n<p>Golangには, <a href=\"https://github.com/go-gl/gl\">GL</a>という, OpenGLのバインディングライブラリが存在していて,\nこれを使うとわりと簡単にOpenGLを触ることができる.</p>\n<p>最近のMacだとはじめからOpenGLが入っているので, インストールは簡単で<code>go get</code>でインストールするだけ.\n下記のコマンドで, v3.2 ~ 4.5あたりのバインディングがまとめてインストールされる. 便利.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">go get github.com/go-gl/gl/v{3.2,3.3,4.1,4.4,4.5}-{core,compatibility}/gl</code></pre></div>\n<p>あわせて<a href=\"http://www.glfw.org/\">GLFW</a>の<a href=\"https://github.com/go-gl/glfw\">バインディング</a>もインストールしておくと更に便利.</p>\n<p>GLFWの詳細は<a href=\"http://marina.sys.wakayama-u.ac.jp/~tokoi/?date=20120906\">この辺</a>がとても参考になる.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"runtime\"</span>\n\t<span class=\"token string\">\"strings\"</span>\n\n\t<span class=\"token string\">\"github.com/go-gl/gl/v3.3-core/gl\"</span>\n\t<span class=\"token string\">\"github.com/go-gl/glfw/v3.1/glfw\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> windowWidth <span class=\"token operator\">=</span> <span class=\"token number\">800</span>\n<span class=\"token keyword\">const</span> windowHeight <span class=\"token operator\">=</span> <span class=\"token number\">600</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// This is needed to arrange that main() runs on main thread.</span>\n\t<span class=\"token comment\">// See documentation for functions that are only allowed to be called from the main thread.</span>\n\truntime<span class=\"token punctuation\">.</span><span class=\"token function\">LockOSThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// init glfw</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> glfw<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">defer</span> glfw<span class=\"token punctuation\">.</span><span class=\"token function\">Terminate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>Resizable<span class=\"token punctuation\">,</span> glfw<span class=\"token punctuation\">.</span>False<span class=\"token punctuation\">)</span>\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>ContextVersionMajor<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>ContextVersionMinor<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>OpenGLProfile<span class=\"token punctuation\">,</span> glfw<span class=\"token punctuation\">.</span>OpenGLCoreProfile<span class=\"token punctuation\">)</span>\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>OpenGLForwardCompatible<span class=\"token punctuation\">,</span> glfw<span class=\"token punctuation\">.</span>True<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// make an application window</span>\n\twindow<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> glfw<span class=\"token punctuation\">.</span><span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span>windowWidth<span class=\"token punctuation\">,</span> windowHeight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\twindow<span class=\"token punctuation\">.</span><span class=\"token function\">MakeContextCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// init gl</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OpenGL version\"</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">GoStr</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>VERSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">ClearColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">ShouldClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>COLOR_BUFFER_BIT <span class=\"token operator\">|</span> gl<span class=\"token punctuation\">.</span>DEPTH_BUFFER_BIT<span class=\"token punctuation\">)</span>\n\n\t\twindow<span class=\"token punctuation\">.</span><span class=\"token function\">SwapBuffers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">PollEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上のコードを実行すると, 800x600のウインドウが作成できる.</p>\n<p><a href=\"https://github.com/go-gl/gl\">GL</a>では, <code>gl</code>パッケージ以下に, 関数の場合は徐ろにglを,\n定数はGLを除いた感じの命名規則で定義されているので, OpenGLを知っている人はそんなに困ることははさそう.</p>\n<p>試しにシェーダを利用して, 簡単な図形のxy平面への直行投影図を書くプログラムを書いてみた.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"runtime\"</span>\n\t<span class=\"token string\">\"strings\"</span>\n\n\t<span class=\"token string\">\"github.com/go-gl/gl/v3.3-core/gl\"</span>\n\t<span class=\"token string\">\"github.com/go-gl/glfw/v3.1/glfw\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> windowWidth <span class=\"token operator\">=</span> <span class=\"token number\">800</span>\n<span class=\"token keyword\">const</span> windowHeight <span class=\"token operator\">=</span> <span class=\"token number\">600</span>\n\n<span class=\"token keyword\">var</span> vertexShader <span class=\"token operator\">=</span> <span class=\"token string\">`\n#version 330\n\nin vec3 pv;\n\nvoid main() {\n\tgl_Position = vec4(pv, 1);\n}\n`</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x00\"</span>\n\n<span class=\"token keyword\">var</span> fragmentShader <span class=\"token operator\">=</span> <span class=\"token string\">`\n#version 330\n\nout vec4 fc;\n\nvoid main() {\n\tfc = vec4(1.0, 0.0, 0.0, 1.0);\n}\n`</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x00\"</span>\n\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// This is needed to arrange that main() runs on main thread.</span>\n\t<span class=\"token comment\">// See documentation for functions that are only allowed to be called from the main thread.</span>\n\truntime<span class=\"token punctuation\">.</span><span class=\"token function\">LockOSThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// init glfw</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> glfw<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">defer</span> glfw<span class=\"token punctuation\">.</span><span class=\"token function\">Terminate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>Resizable<span class=\"token punctuation\">,</span> glfw<span class=\"token punctuation\">.</span>False<span class=\"token punctuation\">)</span>\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>ContextVersionMajor<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>ContextVersionMinor<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>OpenGLProfile<span class=\"token punctuation\">,</span> glfw<span class=\"token punctuation\">.</span>OpenGLCoreProfile<span class=\"token punctuation\">)</span>\n\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">WindowHint</span><span class=\"token punctuation\">(</span>glfw<span class=\"token punctuation\">.</span>OpenGLForwardCompatible<span class=\"token punctuation\">,</span> glfw<span class=\"token punctuation\">.</span>True<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// make an application window</span>\n\twindow<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> glfw<span class=\"token punctuation\">.</span><span class=\"token function\">CreateWindow</span><span class=\"token punctuation\">(</span>windowWidth<span class=\"token punctuation\">,</span> windowHeight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\twindow<span class=\"token punctuation\">.</span><span class=\"token function\">MakeContextCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// init gl</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OpenGL version\"</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">GoStr</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">GetString</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>VERSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// create vertex &amp; fragment shader</span>\n\tprogram<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">newProgram</span><span class=\"token punctuation\">(</span>vertexShader<span class=\"token punctuation\">,</span> fragmentShader<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">UseProgram</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span>\n\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">BindFragDataLocation</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">Str</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fc\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tpoints <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">float32</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tvertices <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">uint32</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// configure the vertex data</span>\n\t<span class=\"token keyword\">var</span> vao <span class=\"token builtin\">uint32</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">GenVertexArrays</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vao<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">BindVertexArray</span><span class=\"token punctuation\">(</span>vao<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">defer</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">BindVertexArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> vbo <span class=\"token builtin\">uint32</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">GenBuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vbo<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">BindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>ARRAY_BUFFER<span class=\"token punctuation\">,</span> vbo<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">BufferData</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>ARRAY_BUFFER<span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">Ptr</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>STATIC_DRAW<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> ibo <span class=\"token builtin\">uint32</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">GenBuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ibo<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">BindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>ELEMENT_ARRAY_BUFFER<span class=\"token punctuation\">,</span> ibo<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">BufferData</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>ELEMENT_ARRAY_BUFFER<span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>vertices<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">Ptr</span><span class=\"token punctuation\">(</span>vertices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>STATIC_DRAW<span class=\"token punctuation\">)</span>\n\n\tvertAttrib <span class=\"token operator\">:=</span> <span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">GetAttribLocation</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">Str</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pv\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">EnableVertexAttribArray</span><span class=\"token punctuation\">(</span>vertAttrib<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">VertexAttribPointer</span><span class=\"token punctuation\">(</span>vertAttrib<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>FLOAT<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">PtrOffset</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// global settings</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">Enable</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>DEPTH_TEST<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">DepthFunc</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>LESS<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">ClearColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">ShouldClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>COLOR_BUFFER_BIT <span class=\"token operator\">|</span> gl<span class=\"token punctuation\">.</span>DEPTH_BUFFER_BIT<span class=\"token punctuation\">)</span>\n\n\t\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">UseProgram</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span>\n\n\t\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">BindVertexArray</span><span class=\"token punctuation\">(</span>vao<span class=\"token punctuation\">)</span>\n\n\t\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">DrawElements</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>LINE_LOOP<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>UNSIGNED_INT<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">PtrOffset</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\twindow<span class=\"token punctuation\">.</span><span class=\"token function\">SwapBuffers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\tglfw<span class=\"token punctuation\">.</span><span class=\"token function\">PollEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">newProgram</span><span class=\"token punctuation\">(</span>vertexShaderSource<span class=\"token punctuation\">,</span> fragmentShaderSource <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint32</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tvertexShader<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">compileShader</span><span class=\"token punctuation\">(</span>vertexShaderSource<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>VERTEX_SHADER<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n\t<span class=\"token punctuation\">}</span>\n\n\tfragmentShader<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">compileShader</span><span class=\"token punctuation\">(</span>fragmentShaderSource<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>FRAGMENT_SHADER<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> err\n\t<span class=\"token punctuation\">}</span>\n\n\tprogram <span class=\"token operator\">:=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">CreateProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">AttachShader</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> vertexShader<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">AttachShader</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> fragmentShader<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">LinkProgram</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> status <span class=\"token builtin\">int32</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">GetProgramiv</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>LINK_STATUS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>status<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> status <span class=\"token operator\">==</span> gl<span class=\"token punctuation\">.</span>FALSE <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">var</span> logLength <span class=\"token builtin\">int32</span>\n\t\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">GetProgramiv</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>INFO_LOG_LENGTH<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>logLength<span class=\"token punctuation\">)</span>\n\n\t\tlog <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Repeat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x00\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>logLength<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">GetProgramInfoLog</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> logLength<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">Str</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to link program: %v\"</span><span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteShader</span><span class=\"token punctuation\">(</span>vertexShader<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteShader</span><span class=\"token punctuation\">(</span>fragmentShader<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">return</span> program<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">compileShader</span><span class=\"token punctuation\">(</span>source <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> shaderType <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint32</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tshader <span class=\"token operator\">:=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">CreateShader</span><span class=\"token punctuation\">(</span>shaderType<span class=\"token punctuation\">)</span>\n\n\tcsource <span class=\"token operator\">:=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">Str</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">ShaderSource</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>csource<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">CompileShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> status <span class=\"token builtin\">int32</span>\n\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">GetShaderiv</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>COMPILE_STATUS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>status<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> status <span class=\"token operator\">==</span> gl<span class=\"token punctuation\">.</span>FALSE <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">var</span> logLength <span class=\"token builtin\">int32</span>\n\t\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">GetShaderiv</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>INFO_LOG_LENGTH<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>logLength<span class=\"token punctuation\">)</span>\n\n\t\tlog <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Repeat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x00\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>logLength<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tgl<span class=\"token punctuation\">.</span><span class=\"token function\">GetShaderInfoLog</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">,</span> logLength<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">Str</span><span class=\"token punctuation\">(</span>log<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to compile %v: %v\"</span><span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">,</span> log<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> shader<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>サンプルの概要としては, 頂点情報を頂点配列でGPUに送って, 頂点インデックスオブジェクトで描画を制御し,\n特に何もしないバーテックスシェーダと, 図形の線を赤く塗るフラグメントシェーダで表示する単純なものになる.</p>\n<p>単純なものだったが, シェーダのコンパイル方法とか, 頂点の転送方法とか図形の描画とか調べてたら結構時間がかかったが, 良い学びになった.</p>\n<p>学部時代にOpenGL使った演習は受けたことはあったが, シェーダとか書いたことなかったので, 参考資料として大学時代にお世話になった<a href=\"https://github.com/tokoik/ggsample02\">先生の資料</a>を漁って書いてた.\n(とはいってもほとんどコピペになってしまったが.)</p>\n<p>これからもう少し<a href=\"http://www.wakayama-u.ac.jp/~tokoi/lecture/gg/\">この資料を読んで</a>勉強したい.</p>","excerpt":"普段は業務でゲームのプロジェクトでサーバーサイドエンジニアとしてJavaを書いているのだけれど,\nプロジェクトのネイティブエンジニアがワイワイ楽しそうに話しているのを聞いていて楽しそう,\nというのと少しUnityを触る機会ができたので, 自分もCGとかやってワイワイやろうと思って, 暇な時にOpenGLを触りだした. しかし, ただCとかで書いても面白く無い(?)かなと思って, 最近ハマっているGolangで書き始めた. GL Golangには, GLという, OpenGL…","fields":{"slug":"/articles/2015/11/10/hello-opengl-with-golang/"},"frontmatter":{"date":"November 10, 2015","type":null,"tags":["OpenGL","CG","Golang"],"title":"GolangでOpenGLで工作はじめた","description":"普段はサーバーサイドエンジニアをしているが, 工作と題してOpenGLをGolangでさわりだした","eyecatch":null}}},"pageContext":{"id":"992234e9-555a-592e-b6be-16654a9b659e"}},"staticQueryHashes":["1480509143","3159585216"]}