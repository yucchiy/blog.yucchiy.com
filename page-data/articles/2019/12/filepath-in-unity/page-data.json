{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2019/12/filepath-in-unity/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"tldr\" style=\"position:relative;\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h2>\n<p>Unityでファイルパスを扱う場合は、そのファイルパスがAssetDatabaseのファイルパスなのか、OS依存なファイルパスなのか意識するとよい。</p>\n<h2 id=\"unityでのアセットのファイルパスについて\" style=\"position:relative;\"><a href=\"#unity%E3%81%A7%E3%81%AE%E3%82%A2%E3%82%BB%E3%83%83%E3%83%88%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%83%91%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\" aria-label=\"unityでのアセットのファイルパスについて permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unityでのアセットのファイルパスについて</h2>\n<p>Unityでは、エディタ拡張などでアセットを操作する場合、データをバイナリやテキストで直接読み込んだり、加工することは少なく、\n<a href=\"https://docs.unity3d.com/ScriptReference/AssetDatabase.html\">AssetDatabase</a>を用いてデータを処理することが多いです。</p>\n<p>ちなみに<a href=\"https://docs.unity3d.com/ScriptReference/AssetDatabase.html\">AssetDatabase</a>のファイルパスは<strong>OSに依存しない</strong>設計になっていて、\n<code>Assets</code>ファルダを起点とした相対パスで表現されます(ex: <code>Assets/Scene/SampleScene.unity</code>)。</p>\n<p>ただし、例えば独自フォーマットのファイルを読み込みたい場合などは、<code>System.IO</code>系のメソッドを利用する必要がありますが、こちらのファイルパスは、<strong>OSに依存しています</strong>。</p>\n<p>具体的には、Macではディレクトリセパレータは<code>/</code>で表されますし(ex: <code>~/Document/hoge.dat</code>)、Windowsでは同じフォルダはディレクトリセパレータは<code>\\</code>で表されます。</p>\n<p>なので、AssetDatabaseで取得できるファイルパスは、Windowsではそのまま利用できず、以下の処理を用いてファイルパスをOS依存のものに変換してやる必要があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// これは本来やらないほうがいい（後述）</span>\n\n<span class=\"token comment\">// AssetDatabaseのディレクトリセパレータ</span>\n<span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> kAssetDatabaseDirectorySeparatorChar <span class=\"token operator\">=</span> <span class=\"token char\">'/'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// .datとつくファイルをAssets/Settingsから取得する</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> guids <span class=\"token operator\">=</span> UnityEditor<span class=\"token punctuation\">.</span>AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token function\">FindAssets</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".dat\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"Assets/Settings\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> guid <span class=\"token keyword\">in</span> guids<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ここで取得できるfilepathは、AssetDatabaseでのファイルパス</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> filepath <span class=\"token operator\">=</span> UnityEditor<span class=\"token punctuation\">.</span>AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token function\">GUIDToAssetPath</span><span class=\"token punctuation\">(</span>guid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// OS依存なファイルパスに変換する</span>\n    filepath <span class=\"token operator\">=</span> filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Replace</span><span class=\"token punctuation\">(</span>\n        kAssetDatabaseDirectorySeparatorChar<span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// https://docs.unity3d.com/ScriptReference/Path.DirectorySeparatorChar.html</span>\n        <span class=\"token comment\">// OSのディレクトリセパレータを返してくれる</span>\n        System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">.</span>DirectorySeparatorChar\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// .dat拡張子ファイル以外は無視する</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">.</span><span class=\"token function\">GetExtension</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\".dat\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>FileStream</span><span class=\"token punctuation\">(</span>\n            filepath<span class=\"token punctuation\">,</span>\n            System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>FileMode<span class=\"token punctuation\">.</span>Create\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ここで読み込んだファイルの処理をする</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ただし、個人的には上記に示したコードサンプルはあまり良い実装ではなく、<code>AssetDatabase</code>で取得したパスは<code>AssetDatabase</code>のAPIのみで利用し、\n<code>System.IO</code>で取得できるパスは<code>System.IO</code>のみで利用するのが望ましいです。つまり、<strong>2つのファイルパスが混ざるような実装はできればしない方が良いです</strong>。</p>\n<p>例えば、上記の実装は下記の実装に置き換えてもいいかもしれません。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// .datとつくファイルをAssets/Settingsから取得するが、</span>\n<span class=\"token comment\">// System.IO.Directory.GetFilesメソッドでそもそも取得する。</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> filepaths <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>Directory<span class=\"token punctuation\">.</span><span class=\"token function\">GetFiles</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Assets/Settings\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*.dat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span> <span class=\"token class-name\">filepathin</span> filepaths<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// .dat拡張子ファイル以外は無視する</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">.</span><span class=\"token function\">GetExtension</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\".dat\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>FileStream</span><span class=\"token punctuation\">(</span>\n            filepath<span class=\"token punctuation\">,</span>\n            System<span class=\"token punctuation\">.</span>IO<span class=\"token punctuation\">.</span>FileMode<span class=\"token punctuation\">.</span>Create\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ここで読み込んだファイルの処理をする</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"うまく行かないケース\" style=\"position:relative;\"><a href=\"#%E3%81%86%E3%81%BE%E3%81%8F%E8%A1%8C%E3%81%8B%E3%81%AA%E3%81%84%E3%82%B1%E3%83%BC%E3%82%B9\" aria-label=\"うまく行かないケース permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>うまく行かないケース</h2>\n<p>例えば、エディタ拡張でプロジェクトビューで選択したファイルに対して、右クリックでファイルフォーマットチェックをする機能を実装したい場合などです。</p>\n<p>選択中のファイルを取得するには、<a href=\"https://docs.unity3d.com/ScriptReference/Selection-assetGUIDs.html\">UnityEditor.Selection.assetGUIDs</a>を用いますが、\n取得できる値がGUIDなため、ファイルパスを取得するにはやはり<a href=\"https://docs.unity3d.com/ScriptReference/AssetDatabase.GUIDToAssetPath.html\">UnityEditor.AssetDatabase.GUIDToAssetPath</a>メソッドを用いてAssetDatabaseのファイルパスを取得し、\nそこからOS依存なファイルパスに変換が必要になります。</p>\n<p>なのでUnityでファイルパスを扱う場合は、常に<strong>AssetDatabaseのファイルパス</strong>なのか、<strong>OS依存なファイルパス</strong>なのかを意識できると、ミスが少なくなるのかなと思います。</p>","excerpt":"TL;DR Unityでファイルパスを扱う場合は、そのファイルパスがAssetDatabaseのファイルパスなのか、OS依存なファイルパスなのか意識するとよい。 Unityでのアセットのファイルパスについて Unityでは、エディタ拡張などでアセットを操作する場合、データをバイナリやテキストで直接読み込んだり、加工することは少なく、\nAssetDatabaseを用いてデータを処理することが多いです。 ちなみにAssetDatabaseのファイルパスはOS…","fields":{"slug":"/articles/2019/12/filepath-in-unity/"},"frontmatter":{"date":"December 26, 2019","type":null,"tags":["Tips","C#","Unity"],"title":"Unityでファイルパスを扱う上での注意点","description":null,"eyecatch":null}}},"pageContext":{"id":"76d3fc2a-6332-5da9-8db6-04b9cff2894c"}},"staticQueryHashes":["1480509143","3159585216"]}