{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2019/01/02/sandbox-implementation-of-cloth-simulation/","result":{"data":{"markdownRemark":{"html":"<p>あけましておめでとうございます。今年もよろしくおねがいします。</p>\n<p>最近、揺れモノとか演出に関わる技術に興味があって、そのへんの仕組みをまず知っておこうかなと思い、正月で時間もあるし、Cloth Simulationを実装しています。</p>\n<p>まだ実装途中なのですが、今年はやっていることをちゃんとアウトプットしていこうと決意したので、やっていることを少しでも多くアウトプットできればと思っています。</p>\n<p>まず、進捗がこちら。</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">前々から興味あった揺れもの系の勉強しようかなぁと思って、新年早々ClothSimulationを勉強しようと思って、Mass-spring model をベルレ法で実装してみてるんだけど、なんか左端がうまくいってなさそう  <a href=\"https://t.co/vKV8hoFG5r\">https://t.co/vKV8hoFG5r</a></p>&mdash; ゆっち〜 (@yucchiy_) <a href=\"https://twitter.com/yucchiy_/status/1080138922384973824?ref_src=twsrc%5Etfw\">2019年1月1日</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>なんとなく動いてそうだけど、まだバグがありそう。特に布の端がギザギザしているのは...。</p>\n<p>ウェブをあさっていると、Mass-spring model(日本語だと質点バネモデル?)が有名そうで、そちらを実装してみました。</p>\n<p>ざっくりいうと、布の形状にあわせて質点を均一に(だいたい格子状に)配置して、その質点に対して与えた力と、質点同士が相互に干渉し合う力を計算することで、布の近似計算を行う手法とのこと。このへんは後日落ち着いたら記事を書く。</p>\n<p>ちなみに、海外の記事だと、質点をパーティクルと表現していることが多そう(?)。\n日本の記事だと、この<a href=\"https://qiita.com/yunta_robo/items/0b468b65f3412554400a\">WebGLでの実装の記事</a>がわかりやすかった。</p>\n<p>実装のアウトラインは以下の通り。</p>\n<ol>\n<li>布の初期化 (<code>Start</code>)\n<ol>\n<li>Meshの生成</li>\n<li>布の質点の生成</li>\n<li>布の制約の生成</li>\n</ol>\n</li>\n<li>布のシミューレーションの定期更新 (<code>FixedUpdate</code>)\n<ol>\n<li>積分フェーズ (外力などの力を各質点に適用)</li>\n<li>制約充足フェーズ (バネによる制約の適用)</li>\n<li>衝突判定フェーズ (球との衝突判定と質点の押し出し)</li>\n</ol>\n</li>\n</ol>\n<p>2.1と2.2のフェーズは、どちらもベルレ積分により求めている。その兼ね合いで2.3の計算は、球にめり込んでいる場合は、球の外側まで押し出せば問題ないらしい。\nこれの理由はまだあまりわかっていないので、あとでちゃんと調べる。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">RequireComponent</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">MeshFilter</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">MeshRenderer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClothSimulationController</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 質点を表す構造体</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Point</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> MeshVertexIndex<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector3</span> Position<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector3</span> PreviousPosition<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> Weight<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 制約を表す構造体</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Constraint</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PointIndex1<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 制約の2点</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> PointIndex2<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 制約の2点</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> EquilibriumLength<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 自然長</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">ConstraintType</span> Type<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 制約の種類</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">ConstraintType</span>\n    <span class=\"token punctuation\">{</span>\n        Structural<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Structural spring</span>\n        Shear<span class=\"token punctuation\">,</span>      <span class=\"token comment\">// Shear spring</span>\n        Bending<span class=\"token punctuation\">,</span>    <span class=\"token comment\">// Bending spring</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> VerticalDevide<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> HorizontalDevide<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector3</span> WindVelocity<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> Resistance <span class=\"token operator\">=</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 抵抗</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> Mass <span class=\"token operator\">=</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// 質点の質量</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> RelaxationCount <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Relaxationの反復回数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> SpringConstant <span class=\"token operator\">=</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// バネ定数</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> StructuralShrink<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Structural springの縮み定数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> StructuralStretch<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Structural springの伸び定数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> ShearShrink<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// Shear springの縮み定数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> ShearStretch<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// Shear springの伸び定数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> BendingShrink<span class=\"token punctuation\">;</span>     <span class=\"token comment\">// Bending springの縮み定数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> BendingStretch<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Bending springの伸び定数</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Vector3</span> CollisionOrigin<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> CollisionRadius<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Vector3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> _vertices<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Point<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> _points<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Constraint<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> _constraints<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Mesh</span> _mesh<span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">GenerateClothMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mesh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> filter <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshFilter<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        mesh<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> vertices <span class=\"token operator\">=</span>\n            <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>VerticalDevide <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>HorizontalDevide <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> uv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>VerticalDevide <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>HorizontalDevide <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> verticalStep <span class=\"token operator\">=</span> <span class=\"token number\">1f</span> <span class=\"token operator\">/</span> VerticalDevide<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> horizontalStep <span class=\"token operator\">=</span> <span class=\"token number\">1f</span> <span class=\"token operator\">/</span> HorizontalDevide<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> offsetX <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1f</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> offsetY <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1f</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> VerticalDevide <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>y<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> HorizontalDevide <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> cursor <span class=\"token operator\">=</span> <span class=\"token function\">GetIndex</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    vertices<span class=\"token punctuation\">[</span>cursor<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>\n                        x <span class=\"token operator\">*</span> horizontalStep <span class=\"token operator\">+</span> offsetX<span class=\"token punctuation\">,</span>\n                        <span class=\"token number\">0f</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token comment\">// TODO: 実験のため</span>\n                        y <span class=\"token operator\">*</span> verticalStep <span class=\"token operator\">+</span> offsetY\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    uv<span class=\"token punctuation\">[</span>cursor<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token number\">1f</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>x <span class=\"token operator\">/</span> HorizontalDevide<span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>y <span class=\"token operator\">/</span> VerticalDevide\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        mesh<span class=\"token punctuation\">.</span>vertices <span class=\"token operator\">=</span> vertices<span class=\"token punctuation\">;</span>\n        mesh<span class=\"token punctuation\">.</span>uv <span class=\"token operator\">=</span> uv<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> triangles <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">int</span></span><span class=\"token punctuation\">[</span>VerticalDevide <span class=\"token operator\">*</span> HorizontalDevide <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> VerticalDevide<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>y<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> HorizontalDevide<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> cursor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>VerticalDevide <span class=\"token operator\">*</span> y <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> leftTop <span class=\"token operator\">=</span> <span class=\"token function\">GetIndex</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> leftBottom <span class=\"token operator\">=</span> <span class=\"token function\">GetIndex</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> rightTop <span class=\"token operator\">=</span> <span class=\"token function\">GetIndex</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> rightBottom <span class=\"token operator\">=</span> <span class=\"token function\">GetIndex</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    triangles<span class=\"token punctuation\">[</span>cursor <span class=\"token operator\">+</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> leftTop<span class=\"token punctuation\">;</span>\n                    triangles<span class=\"token punctuation\">[</span>cursor <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rightBottom<span class=\"token punctuation\">;</span>\n                    triangles<span class=\"token punctuation\">[</span>cursor <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> leftBottom<span class=\"token punctuation\">;</span>\n                    triangles<span class=\"token punctuation\">[</span>cursor <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rightBottom<span class=\"token punctuation\">;</span>\n                    triangles<span class=\"token punctuation\">[</span>cursor <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> leftTop<span class=\"token punctuation\">;</span>\n                    triangles<span class=\"token punctuation\">[</span>cursor <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rightTop<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        mesh<span class=\"token punctuation\">.</span>triangles <span class=\"token operator\">=</span> triangles<span class=\"token punctuation\">;</span>\n        mesh<span class=\"token punctuation\">.</span><span class=\"token function\">RecalculateNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        filter<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n        _mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n        _vertices <span class=\"token operator\">=</span> vertices<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SetupClothPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        _points <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">[</span>_mesh<span class=\"token punctuation\">.</span>vertices<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> vertexIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> vertexIndex <span class=\"token operator\">&lt;</span> _mesh<span class=\"token punctuation\">.</span>vertices<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">++</span>vertexIndex<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            _points<span class=\"token punctuation\">[</span>vertexIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            _points<span class=\"token punctuation\">[</span>vertexIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>MeshVertexIndex <span class=\"token operator\">=</span> vertexIndex<span class=\"token punctuation\">;</span>\n            _points<span class=\"token punctuation\">[</span>vertexIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position <span class=\"token operator\">=</span> _mesh<span class=\"token punctuation\">.</span>vertices<span class=\"token punctuation\">[</span>vertexIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            _points<span class=\"token punctuation\">[</span>vertexIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PreviousPosition <span class=\"token operator\">=</span> _mesh<span class=\"token punctuation\">.</span>vertices<span class=\"token punctuation\">[</span>vertexIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// TODO: 端を固定しているので、パラメータで指定できるようにする</span>\n            _points<span class=\"token punctuation\">[</span>vertexIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Weight <span class=\"token operator\">=</span>\n                <span class=\"token punctuation\">(</span>vertexIndex <span class=\"token operator\">>=</span> VerticalDevide <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>HorizontalDevide <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">?</span>\n                <span class=\"token comment\">// (vertexIndex % HorizontalDevide == 0) ?</span>\n                <span class=\"token number\">0f</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SetupClothConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> constraints <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Constraint<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> VerticalDevide<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>y<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> HorizontalDevide<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">AddConstraint</span><span class=\"token punctuation\">(</span>\n                    x<span class=\"token punctuation\">,</span>\n                    y<span class=\"token punctuation\">,</span>\n                    x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                    y<span class=\"token punctuation\">,</span>\n                    ConstraintType<span class=\"token punctuation\">.</span>Structural<span class=\"token punctuation\">,</span>\n                    constraints\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">AddConstraint</span><span class=\"token punctuation\">(</span>\n                    x<span class=\"token punctuation\">,</span>\n                    y<span class=\"token punctuation\">,</span>\n                    x<span class=\"token punctuation\">,</span>\n                    y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                    ConstraintType<span class=\"token punctuation\">.</span>Structural<span class=\"token punctuation\">,</span>\n                    constraints\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token function\">AddConstraint</span><span class=\"token punctuation\">(</span>\n                    x<span class=\"token punctuation\">,</span>\n                    y<span class=\"token punctuation\">,</span>\n                    x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                    y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                    ConstraintType<span class=\"token punctuation\">.</span>Shear<span class=\"token punctuation\">,</span>\n                    constraints\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">AddConstraint</span><span class=\"token punctuation\">(</span>\n                    x<span class=\"token punctuation\">,</span>\n                    y<span class=\"token punctuation\">,</span>\n                    x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                    y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                    ConstraintType<span class=\"token punctuation\">.</span>Shear<span class=\"token punctuation\">,</span>\n                    constraints\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token function\">AddConstraint</span><span class=\"token punctuation\">(</span>\n                    x<span class=\"token punctuation\">,</span>\n                    y<span class=\"token punctuation\">,</span>\n                    x <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                    y<span class=\"token punctuation\">,</span>\n                    ConstraintType<span class=\"token punctuation\">.</span>Bending<span class=\"token punctuation\">,</span>\n                    constraints\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">AddConstraint</span><span class=\"token punctuation\">(</span>\n                    x<span class=\"token punctuation\">,</span>\n                    y<span class=\"token punctuation\">,</span>\n                    x<span class=\"token punctuation\">,</span>\n                    y <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                    ConstraintType<span class=\"token punctuation\">.</span>Bending<span class=\"token punctuation\">,</span>\n                    constraints\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        _constraints <span class=\"token operator\">=</span> constraints<span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">GetIndex</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>VerticalDevide <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> y <span class=\"token operator\">+</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">AddConstraint</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x1<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y1<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x2<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y2<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">ConstraintType</span> type<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Constraint<span class=\"token punctuation\">></span></span> constraints<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IsInField</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">IsInField</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index1 <span class=\"token operator\">=</span> <span class=\"token function\">GetIndex</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index2 <span class=\"token operator\">=</span> <span class=\"token function\">GetIndex</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            constraints<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Constraint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span>\n                    PointIndex1 <span class=\"token operator\">=</span> index1<span class=\"token punctuation\">,</span>\n                    PointIndex2 <span class=\"token operator\">=</span> index2<span class=\"token punctuation\">,</span>\n                    Type <span class=\"token operator\">=</span> type<span class=\"token punctuation\">,</span>\n                    EquilibriumLength <span class=\"token operator\">=</span> \n                        <span class=\"token punctuation\">(</span>_points<span class=\"token punctuation\">[</span>index1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position <span class=\"token operator\">-</span> _points<span class=\"token punctuation\">[</span>index2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position<span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">.</span>magnitude<span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsInField</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> y<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            x <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;=</span> HorizontalDevide <span class=\"token operator\">&amp;&amp;</span>\n            y <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;=</span> VerticalDevide\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ProcessIntegrationPhase</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> deltaTime<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> force <span class=\"token operator\">=</span> Vector3<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">;</span>\n        force <span class=\"token operator\">+=</span> Physics<span class=\"token punctuation\">.</span>gravity<span class=\"token punctuation\">;</span>\n        force <span class=\"token operator\">+=</span> WindVelocity<span class=\"token punctuation\">;</span>\n        force <span class=\"token operator\">*=</span> deltaTime <span class=\"token operator\">*</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> acceleration <span class=\"token operator\">=</span> force <span class=\"token operator\">/</span> Mass<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> pointIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> pointIndex <span class=\"token operator\">&lt;</span> _points<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>pointIndex<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> velocity <span class=\"token operator\">=</span>\n                _points<span class=\"token punctuation\">[</span>pointIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position\n                <span class=\"token operator\">-</span> _points<span class=\"token punctuation\">[</span>pointIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PreviousPosition<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> displacement <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>velocity <span class=\"token operator\">+</span> acceleration<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Resistance<span class=\"token punctuation\">;</span>\n\n            _points<span class=\"token punctuation\">[</span>pointIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PreviousPosition <span class=\"token operator\">=</span> _points<span class=\"token punctuation\">[</span>pointIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position<span class=\"token punctuation\">;</span>\n            _points<span class=\"token punctuation\">[</span>pointIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position <span class=\"token operator\">+=</span>\n                displacement <span class=\"token operator\">*</span> _points<span class=\"token punctuation\">[</span>pointIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Weight<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ProcessConstraintPhase</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> deltaTime<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> constraintIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> constraintIndex <span class=\"token operator\">&lt;</span> _constraints<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span>\n            <span class=\"token operator\">++</span>constraintIndex<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> constraint <span class=\"token operator\">=</span> _constraints<span class=\"token punctuation\">[</span>constraintIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> point1 <span class=\"token operator\">=</span> _points<span class=\"token punctuation\">[</span>constraint<span class=\"token punctuation\">.</span>PointIndex1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> point2 <span class=\"token operator\">=</span> _points<span class=\"token punctuation\">[</span>constraint<span class=\"token punctuation\">.</span>PointIndex2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> kEpsillon <span class=\"token operator\">=</span> <span class=\"token number\">1e-6f</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>point1<span class=\"token punctuation\">.</span>Weight <span class=\"token operator\">+</span> point2<span class=\"token punctuation\">.</span>Weight<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> kEpsillon<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> shrink <span class=\"token operator\">=</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> stretch <span class=\"token operator\">=</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>constraint<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">case</span> ConstraintType<span class=\"token punctuation\">.</span>Structural<span class=\"token punctuation\">:</span>\n                    shrink <span class=\"token operator\">=</span> StructuralShrink<span class=\"token punctuation\">;</span>\n                    stretch <span class=\"token operator\">=</span> StructuralStretch<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">case</span> ConstraintType<span class=\"token punctuation\">.</span>Shear<span class=\"token punctuation\">:</span>\n                    shrink <span class=\"token operator\">=</span> ShearShrink<span class=\"token punctuation\">;</span>\n                    stretch <span class=\"token operator\">=</span> ShearStretch<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">case</span> ConstraintType<span class=\"token punctuation\">.</span>Bending<span class=\"token punctuation\">:</span>\n                    shrink <span class=\"token operator\">=</span> BendingShrink<span class=\"token punctuation\">;</span>\n                    stretch <span class=\"token operator\">=</span> BendingStretch<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> distance <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>point1<span class=\"token punctuation\">.</span>Position <span class=\"token operator\">-</span> point2<span class=\"token punctuation\">.</span>Position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>magnitude<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> force <span class=\"token operator\">=</span>\n                <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">-</span> constraint<span class=\"token punctuation\">.</span>EquilibriumLength<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> SpringConstant<span class=\"token punctuation\">;</span>\n\n            force <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>force <span class=\"token operator\">></span> <span class=\"token number\">0f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">?</span> force <span class=\"token operator\">*</span> shrink <span class=\"token punctuation\">:</span> force <span class=\"token operator\">*</span> stretch<span class=\"token punctuation\">;</span>\n            force <span class=\"token operator\">*=</span> deltaTime <span class=\"token operator\">*</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> acceleration <span class=\"token operator\">=</span> force <span class=\"token operator\">/</span> Mass<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> direction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>point2<span class=\"token punctuation\">.</span>Position <span class=\"token operator\">-</span> point1<span class=\"token punctuation\">.</span>Position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>normalized<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> displacement <span class=\"token operator\">=</span> acceleration <span class=\"token operator\">*</span> direction<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> totalWeight <span class=\"token operator\">=</span> point1<span class=\"token punctuation\">.</span>Weight <span class=\"token operator\">+</span> point2<span class=\"token punctuation\">.</span>Weight<span class=\"token punctuation\">;</span>\n            _points<span class=\"token punctuation\">[</span>constraint<span class=\"token punctuation\">.</span>PointIndex1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position <span class=\"token operator\">+=</span>\n                displacement <span class=\"token operator\">*</span> point1<span class=\"token punctuation\">.</span>Weight <span class=\"token operator\">/</span> totalWeight<span class=\"token punctuation\">;</span>\n            _points<span class=\"token punctuation\">[</span>constraint<span class=\"token punctuation\">.</span>PointIndex2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position <span class=\"token operator\">-=</span>\n                displacement <span class=\"token operator\">*</span> point2<span class=\"token punctuation\">.</span>Weight <span class=\"token operator\">/</span> totalWeight<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ProcessCollisionPhase</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> deltaTime<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> pointIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> pointIndex <span class=\"token operator\">&lt;</span> _points<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>pointIndex<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> sphereOriginToPoint <span class=\"token operator\">=</span>\n                _points<span class=\"token punctuation\">[</span>pointIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position <span class=\"token operator\">-</span> CollisionOrigin<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> distance <span class=\"token operator\">=</span> sphereOriginToPoint<span class=\"token punctuation\">.</span>magnitude<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">&lt;</span> CollisionRadius<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> kEpsillon <span class=\"token operator\">=</span> <span class=\"token number\">1e-6f</span><span class=\"token punctuation\">;</span>\n                _points<span class=\"token punctuation\">[</span>pointIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Position <span class=\"token operator\">=</span> CollisionOrigin\n                    <span class=\"token operator\">+</span> sphereOriginToPoint<span class=\"token punctuation\">.</span>normalized <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>CollisionRadius <span class=\"token operator\">+</span> kEpsillon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">GenerateClothMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">SetupClothPoints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">SetupClothConstraints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">FixedUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> deltaTime <span class=\"token operator\">=</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">ProcessIntegrationPhase</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> iteration <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> iteration <span class=\"token operator\">&lt;</span> RelaxationCount<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>iteration<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ProcessConstraintPhase</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">ProcessCollisionPhase</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">LateUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> point <span class=\"token keyword\">in</span> _points<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            _vertices<span class=\"token punctuation\">[</span>point<span class=\"token punctuation\">.</span>MeshVertexIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> point<span class=\"token punctuation\">.</span>Position<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        _mesh<span class=\"token punctuation\">.</span>vertices <span class=\"token operator\">=</span> _vertices<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>次回は、この計算をGPUで並列計算したいのと、これ以外のアルゴリズムについてもいろいろ調べる。</p>","excerpt":"あけましておめでとうございます。今年もよろしくおねがいします。 最近、揺れモノとか演出に関わる技術に興味があって、そのへんの仕組みをまず知っておこうかなと思い、正月で時間もあるし、Cloth Simulation…","fields":{"slug":"/articles/2019/01/02/sandbox-implementation-of-cloth-simulation/"},"frontmatter":{"date":"January 01, 2019","type":null,"tags":["Diary","Unity","C#"],"title":"2019/01/02 進捗 (Cloth Simulation)","description":null,"eyecatch":null}}},"pageContext":{"id":"180de296-4430-504a-9544-00617ed3dde5"}},"staticQueryHashes":["1480509143","3159585216"]}