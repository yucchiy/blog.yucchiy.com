{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2019/11/how-to-access-clip-timing-in-playablebehaviour-with-unitytimeline/","result":{"data":{"markdownRemark":{"html":"<p>Unityのタイムラインのカスタムトラックを実装する際に、<code>PlayableBehaviour</code>内(特にTrackMixer内)でクリップの開始時間や終了時間を取得したくなったが、\n簡単に取得できなかったので、メモがてらにブログに残すことにします。</p>\n<h2 id=\"playablebehaviour内でクリップタイミングを取得する\" style=\"position:relative;\"><a href=\"#playablebehaviour%E5%86%85%E3%81%A7%E3%82%AF%E3%83%AA%E3%83%83%E3%83%97%E3%82%BF%E3%82%A4%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B\" aria-label=\"playablebehaviour内でクリップタイミングを取得する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>PlayableBehaviour</code>内でクリップタイミングを取得する</h2>\n<p>こちらのフォーラムの情報を参考にしました。</p>\n<p><a href=\"https://forum.unity.com/threads/how-to-access-the-clip-timing-start-end-time-in-playablebehaviour-functions.494344/\">https://forum.unity.com/threads/how-to-access-the-clip-timing-start-end-time-in-playablebehaviour-functions.494344/</a></p>\n<p>まず、お目当てのクリップのタイミングは、<code>TimelineClip</code>のプロパティより取得できます。</p>\n<p><a href=\"https://docs.unity3d.com/Packages/com.unity.timeline@1.0/api/UnityEngine.Timeline.TimelineClip.html\">https://docs.unity3d.com/Packages/com.unity.timeline@1.0/api/UnityEngine.Timeline.TimelineClip.html</a></p>\n<p>具体的には、あるクリップの開始フレームが取得したければ、<a href=\"https://docs.unity3d.com/Packages/com.unity.timeline@1.0/api/UnityEngine.Timeline.TimelineClip.html#UnityEngine_Timeline_TimelineClip_start\"><code>start</code>プロパティ</a>から取得できます。</p>\n<p>今回実現したいことへの課題は、TrackMixerから<code>TimelineClip</code>を参照できない点です。</p>\n<p>ですが、TrackMixerを作成する際に通る<code>TrackAsset.CreateTrackMixer</code>内で<code>GetClips</code>メソッドを利用することで、\n各クリップの<code>TimelineClip</code>インスタンスを取得できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// https://forum.unity.com/threads/how-to-access-the-clip-timing-start-end-time-in-playablebehaviour-functions.494344/</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoopTrack</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">TrackAsset</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Playable</span> <span class=\"token function\">CreateTrackMixer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PlayableGraph</span> graph<span class=\"token punctuation\">,</span> <span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> inputCount<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> clips <span class=\"token operator\">=</span> <span class=\"token function\">GetClips</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> clip <span class=\"token keyword\">in</span> clips<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// clipがお目当てのインスタンス</span>\n        <span class=\"token punctuation\">}</span>\n \n        <span class=\"token keyword\">return</span> ScriptPlayable<span class=\"token operator\">&lt;</span>LoopMixer<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> inputCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>TrackMixer内(この例では<code>LoopMixer</code>)で触ることができるのは各クリップの<code>PlayableBehaviour</code>なので、\n下記の<code>LoopData</code>に示すように、<code>Clip</code>を定義します。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// https://forum.unity.com/threads/how-to-access-the-clip-timing-start-end-time-in-playablebehaviour-functions.494344/</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoopData</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">PlayableBehaviour</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// PlayableBehaviour内にクリップ情報を保持する変数を定義しておく</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">NonSerialized</span></span><span class=\"token punctuation\">]</span><span class=\"token keyword\">public</span> <span class=\"token class-name\">TimelineClip</span> Clip<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>では、<code>CreateTrackMixer</code>メソッド内で取得した<code>TimelineClip</code>をどうやって渡すかというと、\n下記に示すように、クリップアセットである<code>PlayableAsset</code>(この例では<code>LoopClip</code>)に一度<code>TimelineClip</code>を渡してやり、\nその後、クリップアセットから<code>PlayableBehaviour</code>を生成する<code>PlayableAsset.CreatePlayable</code>メソッド内で、\n保持していた<code>TimelineClip</code>を渡すことで実現できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// https://forum.unity.com/threads/how-to-access-the-clip-timing-start-end-time-in-playablebehaviour-functions.494344/</span>\n<span class=\"token punctuation\">[</span>Serializable<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoopClip</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">PlayableAsset</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ITimelineClipAsset</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">NonSerialized</span></span><span class=\"token punctuation\">]</span><span class=\"token keyword\">public</span> <span class=\"token class-name\">TimelineClip</span> clipPassthrough <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">LoopData</span> template <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LoopData</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">ClipCaps</span> clipCaps\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> ClipCaps<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Playable</span> <span class=\"token function\">CreatePlayable</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PlayableGraph</span> graph<span class=\"token punctuation\">,</span> <span class=\"token class-name\">GameObject</span> owner<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 保持しているTimelineClipをPlayableBehaviourに渡す</span>\n        template<span class=\"token punctuation\">.</span>Clip <span class=\"token operator\">=</span> clipPassthrough<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> playable <span class=\"token operator\">=</span> ScriptPlayable<span class=\"token operator\">&lt;</span>LoopData<span class=\"token operator\">></span><span class=\"token punctuation\">.</span>Create <span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> template<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   \n        <span class=\"token keyword\">return</span> playable<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoopTrack</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">TrackAsset</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Playable</span> <span class=\"token function\">CreateTrackMixer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PlayableGraph</span> graph<span class=\"token punctuation\">,</span> <span class=\"token class-name\">GameObject</span> go<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> inputCount<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> clips <span class=\"token operator\">=</span> <span class=\"token function\">GetClips</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> clip <span class=\"token keyword\">in</span> clips<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// CreateTrackMixer内で、各クリップの自身のTimelineClipをPlayableAssetに渡す</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> loopClip <span class=\"token operator\">=</span> clip<span class=\"token punctuation\">.</span>asset <span class=\"token keyword\">as</span> <span class=\"token class-name\">LoopClip</span><span class=\"token punctuation\">;</span>\n            loopClip<span class=\"token punctuation\">.</span>clipPassthrough <span class=\"token operator\">=</span> clip<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n \n        <span class=\"token keyword\">return</span> ScriptPlayable<span class=\"token operator\">&lt;</span>LoopMixer<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> inputCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>こうすることで各々のクリップの<code>TimelineClip</code>に、トラックの<code>PlayableBehaviour</code>からアクセスすることができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token comment\">// https://forum.unity.com/threads/how-to-access-the-clip-timing-start-end-time-in-playablebehaviour-functions.494344/</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoopMixer</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ProcessFrame</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Playable</span> playable<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FrameData</span> info<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> playerData<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> selectedPlayable <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ScriptPlayable<span class=\"token operator\">&lt;</span>LoopData<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>playable<span class=\"token punctuation\">.</span><span class=\"token function\">GetInput</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">LoopData</span> selectedPlayer <span class=\"token operator\">=</span> selectedPlayable<span class=\"token punctuation\">.</span><span class=\"token function\">GetBehaviour</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// indexが0のクリップのクリップタイミングを取得している</span>\n        <span class=\"token comment\">// 先程定義したClipプロパティにTimelineClipが渡っている</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Clip Start: \"</span> <span class=\"token operator\">+</span> selectedPlayer<span class=\"token punctuation\">.</span>Clip<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<ul>\n<li><code>PlayableBehaviour</code>内では<code>TimelineClip</code>インスタンスを取得できないため、クリップの開始や終了タイミングを取得することができない</li>\n<li><code>TrackAsset</code>内で<code>GetClips</code>メソッドにより<code>TimelineClip</code>が取得できるので、取得したクリップを<code>PlayableBehaviour</code>にわたすことで実現ができる</li>\n</ul>","excerpt":"Unityのタイムラインのカスタムトラックを実装する際に、PlayableBehaviour内(特にTrackMixer内)でクリップの開始時間や終了時間を取得したくなったが、\n簡単に取得できなかったので、メモがてらにブログに残すことにします。 PlayableBehaviour内でクリップタイミングを取得する こちらのフォーラムの情報を参考にしました。 https://forum.unity.com/threads/how-to-access-the-clip-timing-start-end…","fields":{"slug":"/articles/2019/11/how-to-access-clip-timing-in-playablebehaviour-with-unitytimeline/"},"frontmatter":{"date":"November 30, 2019","type":null,"tags":["Tips","Unity","Timeline","C#"],"title":"UnityのタイムラインでPlayableBehaviour内でクリップタイミングを取得する方法","description":null,"eyecatch":null}}},"pageContext":{"id":"969bf315-0d91-597a-bf58-8b1ee6996f04"}},"staticQueryHashes":["1480509143","3159585216"]}