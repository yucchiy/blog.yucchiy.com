{"componentChunkName":"component---src-templates-post-tsx","path":"/2022/06/temporary-path-for-unity/","result":{"data":{"markdownRemark":{"html":"<p>Unityで、例えばファイルの生成が絡むようなテストを行いたいとき、一時的な作業用のディレクトリを作成して、その中でファイルの操作を行って終わったら削除、とすると何かとスッキリします。</p>\n<p>Unityでは <code>FileUtil.GetUniqueTempPathInProject</code> というメソッドを利用して、一時的なパスを生成できます。</p>\n<p><a href=\"https://docs.unity3d.com/ScriptReference/FileUtil.GetUniqueTempPathInProject.html\">https://docs.unity3d.com/ScriptReference/FileUtil.GetUniqueTempPathInProject.html</a></p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> FileUtil<span class=\"token punctuation\">.</span><span class=\"token function\">GetUniqueTempPathInProject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>このメソッドはUnityのプロジェクトルートを起点として、 <code>Temp/UnityTempFile-{uniqueID}</code>  というパスを返却します。 <code>{uniqueID}</code> は、そのプロジェクトでユニークな値が返却されます。</p>\n<p>返却されるのは単にパスなので、そのパスに拡張子をつけて作業用のファイル名にしたり、そのパスでディレクトリを掘って作業用ディレクトリとする、などはユーザー側に委ねられています。</p>\n<p>（あくまでもパスを返すだけで、ディレクトリを作成するなどはしません。）</p>\n<p>このメソッドを使って、記事冒頭であげた例のような一時的な作業用ディレクトリを作成は、下記コードで実装できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// 受け取ったパスを、そのまま作業用ディレクトリのパスとして利用する</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> workDirectoryPath <span class=\"token operator\">=</span> FileUtil<span class=\"token punctuation\">.</span><span class=\"token function\">GetUniqueTempPathInProject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 作業用ディレクトリ作成</span>\nDirectory<span class=\"token punctuation\">.</span><span class=\"token function\">CreateDirectory</span><span class=\"token punctuation\">(</span>workDirectoryPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ここでなにか作業する</span>\n<span class=\"token comment\">// 〜</span>\n<span class=\"token comment\">// 作業終了</span>\n\n<span class=\"token comment\">// 諸々作業が終わったら、作業用ディレクトリを削除しておく</span>\nDirectory<span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>workDirectoryPath<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>作成したパスはUnityが管理しているわけではないので、作業後に掃除等も自動では行われません。そのため、作ったら削除しておきます。</p>","excerpt":"Unityで、例えばファイルの生成が絡むようなテストを行いたいとき、一時的な作業用のディレクトリを作成して、その中でファイルの操作を行って終わったら削除、とすると何かとスッキリします。 Unityでは FileUtil.GetUniqueTempPathInProject というメソッドを利用して、一時的なパスを生成できます。 https://docs.unity3d.com/ScriptReference/FileUtil.GetUniqueTempPathInProject.html…","fields":{"slug":"/2022/06/temporary-path-for-unity/"},"frontmatter":{"date":"June 14, 2022","type":"tech","tags":["Unity"],"title":"Unityで一時的な作業用パスを作成する","description":"Unityで一時的なファイル作業を行う際などに利用できる、一時的なパスを生成する　FileUtil.GetUniqueTempPathInProject について紹介します。","eyecatch":null}}},"pageContext":{"id":"44d83b6b-3079-54db-94fe-2326f765c7d4"}},"staticQueryHashes":["1480509143","3159585216"]}