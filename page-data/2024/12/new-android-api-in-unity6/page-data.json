{"componentChunkName":"component---src-templates-post-tsx","path":"/2024/12/new-android-api-in-unity6/","result":{"data":{"markdownRemark":{"html":"<p>この記事は、<a href=\"https://qiita.com/advent-calendar/2024/unity\">Unity Advent Calendar 2024</a>の9日目の記事となります。</p>\n<p>先週、<a href=\"https://blog.yucchiy.com/2024/12/androidjni-method-call-optimization/\">AndroidJNIクラスとstackallocを用いたAndroidメソッド呼び出しのGC.Alloc削減について | Yucchiy's Note</a>という記事を書いた際に、Unity 6から<a href=\"https://docs.unity3d.com/ScriptReference/Android.AndroidApplication.html\">AndroidApplication</a>というクラスが追加されていることに気づき、ふとUnity 6でAndroidに関するAPIについてどのようなクラスやメンバーが増えたのかが気になりました。</p>\n<p>そこでこの記事では、Unity 6で追加されたAndroidで利用できるAPIについて紹介します。</p>\n<h2 id=\"unity-6で増えたandroidに関するapi\" style=\"position:relative;\"><a href=\"#unity-6%E3%81%A7%E5%A2%97%E3%81%88%E3%81%9Fandroid%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8Bapi\" aria-label=\"unity 6で増えたandroidに関するapi permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity 6で増えたAndroidに関するAPI</h2>\n<p>Unity 6ではUnityEngine名前空間配下、つまりランタイムで利用できるクラスとして下記が追加されています。</p>\n<ul>\n<li><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication.html\">UnityEngine.Android.AndroidApplication</a></li>\n<li><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidConfiguration.html\">UnityEngine.Android.AndroidConfiguration</a></li>\n<li><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidGame.html\">UnityEngine.Android.AndroidGame</a></li>\n<li><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidLocale.html\">UnityEngine.Android.AndroidLocale</a></li>\n<li><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplicationExitInfoProvider.html\">UnityEngine.Android.ApplicationExitInfoProvider</a></li>\n</ul>\n<p>それぞれのAPIについてかんたんに説明します。</p>\n<h2 id=\"androidapplication\" style=\"position:relative;\"><a href=\"#androidapplication\" aria-label=\"androidapplication permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AndroidApplication</h2>\n<p><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication.html\">Unity - Scripting API: AndroidApplication</a></p>\n<p>AndroidApplicationは、Androidアプリケーションにランタイム中にデータにアクセスできるクラスで、Unityアプリケーションを構築するAndroidのActivityやContextにアクセスするためのAPIや、AndroidのUIスレッド上で処理を実行するためのAPIなどが提供されます。</p>\n<p>これらのAPIはAndroidのネイティブプラグインを実装する際にほぼ必須でアクセスすることになるインスタンスやメソッドなので、Androidのネイティブプラグインの開発者からすると「やっと標準で用意されたか」という感じかもしれません。</p>\n<p>追加されたAPIの中からいくつか紹介します。</p>\n<h3 id=\"currentactivity\" style=\"position:relative;\"><a href=\"#currentactivity\" aria-label=\"currentactivity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>currentActivity</h3>\n<p><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication-currentActivity.html\">Unity - Scripting API: Android.AndroidApplication.currentActivity</a></p>\n<p>UnityのAndroidアプリケーションは原則として1つのActivity上で実装されています。\n<code>AndroidApplication.currentActivity</code> ではこのUnityが用意したActivityを取得するためのプロパティです。</p>\n<p>Androidのネイティブプラグインを開発する際には下記のようなコードをほぼ必ずと言っていいほど実装することになるのですが、これが標準で用意されたかたちとなります。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> unityPlayerClass <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AndroidJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.unity3d.player.UnityPlayer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> currentActivity <span class=\"token operator\">=</span> UnityPlayer<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetStatic</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AndroidJavaObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"currentActivity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Activityの用途はさまざまですが、その用途の1つはIntentの呼び出しです。</p>\n<p>たとえばアプリチューザーを用いてテキストを別アプリへシェアする機能は、下記のように実装できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NativeShare</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ShareText</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> shareDialogBoxText<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AndroidJavaObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.content.Intent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        intent<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Call</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AndroidJavaObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setAction\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"android.intent.action.SEND\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        intent<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Call</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AndroidJavaObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setType\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        intent<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Call</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AndroidJavaObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"putExtra\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"android.intent.extra.TEXT\"</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> shareIntent <span class=\"token operator\">=</span> intent<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">CallStatic</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AndroidJavaObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"createChooser\"</span><span class=\"token punctuation\">,</span> intent<span class=\"token punctuation\">,</span> shareDialogBoxText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        AndroidApplication<span class=\"token punctuation\">.</span>currentActivity<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"startActivity\"</span><span class=\"token punctuation\">,</span> shareIntent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 呼び出し方</span>\nNativeShare<span class=\"token punctuation\">.</span><span class=\"token function\">ShareText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共有するテキスト\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"共有するアプリを選択してください\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Intentの生成については詳細を割愛しますが、Intentを送信するためにはActivityが必要になるため、\n上記の例では <code>AndroidApplication.currentActivity</code> 経由でUnityが所持するActivityを取得し、それを利用して下記のようにIntentを送信しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">AndroidApplication<span class=\"token punctuation\">.</span>currentActivity<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"startActivity\"</span><span class=\"token punctuation\">,</span> shareIntent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>注意点として <code>AndroidApplication.currentActivity</code> は<code>AndroidJavaObject</code> ですがUnityが管理するオブジェクトのため、<code>System.IDisposable.Dispose</code> を呼んではいけません。\n（これは以後紹介する <code>AndroidApplication.currentContext</code> なども同様です。）</p>\n<h3 id=\"currentcontext\" style=\"position:relative;\"><a href=\"#currentcontext\" aria-label=\"currentcontext permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>currentContext</h3>\n<p><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication-currentContext.html\">Unity - Scripting API: Android.AndroidApplication.currentContext</a></p>\n<p><code>AndroidApplication.currentContext</code> はUnityのAndroidアプリケーション上の <a href=\"https://developer.android.com/reference/android/content/Context\">Context</a> クラスを取得するためのプロパティです。</p>\n<p>Contextの <code>getSystemService</code> メソッドからOSが管理する各サービスにアクセスできるため、<code>AndroidApplication.currentActivity</code> と同様にネイティブプラグインの開発ではほぼ必須のプロパティです。</p>\n<p>たとえば、Androidのシステムサービスである <a href=\"https://developer.android.com/reference/android/os/Vibrator\">Vibrator</a> を利用する場合は下記のように実装できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VibratorPlayer</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Vibrate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">long</span></span> milliseconds<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 簡単のために Vibrator クラスを扱いますが、</span>\n        <span class=\"token comment\">// Vibratorは API Level 31 から非推奨のため、</span>\n        <span class=\"token comment\">// 実用では VibratorManager クラスを使ってください</span>\n        <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> vibrator <span class=\"token operator\">=</span> AndroidApplication\n          <span class=\"token comment\">// Contextがプロパティで取得できるので、ここからgetSystemServiceを呼び出す</span>\n          <span class=\"token punctuation\">.</span>currentContext<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Call</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AndroidJavaObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"getSystemService\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// Context.VIBRATOR_SERVICEの定数値を直接指定しています</span>\n            <span class=\"token string\">\"vibrator\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        vibrator<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"vibrate\"</span><span class=\"token punctuation\">,</span> milliseconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 呼び出し方</span>\nViabratorPlayer<span class=\"token punctuation\">.</span><span class=\"token function\">Vibrate</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>AndroidManifest.xmlに下記のパーミッションを追加します。</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>uses-permission</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>android.permission.VIBRATE<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<h3 id=\"invokeonuithread\" style=\"position:relative;\"><a href=\"#invokeonuithread\" aria-label=\"invokeonuithread permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>InvokeOnUIThread</h3>\n<p><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication.InvokeOnUIThread.html\">Unity - Scripting API: Android.AndroidApplication.InvokeOnUIThread</a></p>\n<p>AndroidのUIスレッド上で処理を実行するためのメソッドが追加されました。</p>\n<p>Androidでは下記に示すビューの追加など、特定の処理を行う場合はUIスレッド上で行う必要があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication.InvokeOnUIThread.html</span>\n<span class=\"token comment\">// のサンプルコードをそのまま抜粋しています。</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaThreads</span><span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// Unityアプリケーション上にAndroidのButtonを追加する例</span>\n          <span class=\"token comment\">// この処理はUIスレッド上じゃないと実行できない</span>\n          <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> button <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AndroidJavaObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.widget.Button\"</span><span class=\"token punctuation\">,</span> AndroidApplication<span class=\"token punctuation\">.</span>currentActivity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          button<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setText\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> layoutParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AndroidJavaObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.widget.LinearLayout$LayoutParams\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          button<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setLayoutParams\"</span><span class=\"token punctuation\">,</span> layoutParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          AndroidApplication<span class=\"token punctuation\">.</span>unityPlayer\n              <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Call</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AndroidJavaObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getFrameLayout\"</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addView\"</span><span class=\"token punctuation\">,</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上記の処理はUnityのメインスレッド上で実行されることになるので、下記のような例外が発生します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">AndroidJavaException: android.view.ViewRootImpl$CalledFromWrongThreadException: Only the original thread that created a view hierarchy can touch its views. Expected: main Calling: Thread-2</code></pre></div>\n<p>これを回避するためには <code>AndroidApplication.InvokeOnUIThread</code> を利用します。\nこのメソッドに渡した <code>System.Action</code> はAndroidのUIスレッド上で実行されます。</p>\n<p>このメソッドを用いて下記のように修正することで、ビューの追加をAndroidのUIスレッドで実行できるため、正しくビューが追加できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">AndroidApplication<span class=\"token punctuation\">.</span><span class=\"token function\">InvokeOnUIThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// AndroidのUIスレッド上で実行される</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> button <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AndroidJavaObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.widget.Button\"</span><span class=\"token punctuation\">,</span> AndroidApplication<span class=\"token punctuation\">.</span>currentActivity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    button<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setText\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> layoutParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AndroidJavaObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.widget.LinearLayout$LayoutParams\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    button<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setLayoutParams\"</span><span class=\"token punctuation\">,</span> layoutParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// unityPlayerがUnityの描画を行うビュークラスなので、</span>\n    <span class=\"token comment\">// そのビューを介して独自のビューを上乗せしている</span>\n    AndroidApplication<span class=\"token punctuation\">.</span>unityPlayer\n        <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Call</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AndroidJavaObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getFrameLayout\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addView\"</span><span class=\"token punctuation\">,</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"invokeonunitymainthread\" style=\"position:relative;\"><a href=\"#invokeonunitymainthread\" aria-label=\"invokeonunitymainthread permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>InvokeOnUnityMainThread</h3>\n<p><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication.InvokeOnUnityMainThread.html\">Unity - Scripting API: Android.AndroidApplication.InvokeOnUnityMainThread</a></p>\n<p>さきほどの <code>InvokeOnUIThread</code> はAndroidのUIスレッド上で処理を実行するためのメソッドでしたが、<code>InvokeOnUnityMainThread</code> はUnityのメインスレッド上で処理を実行するためのメソッドです。</p>\n<p>AndroidのシステムやUIに処理をリクエストしてその戻りをコールバックで受け取る場合、大抵の場合はUnityのメインスレッド以外からそのコールバックが呼び出されます。\nUnityのAPIの多くはUnityのメインスレッド上でしか呼び出せないため、コールバックの処理はUnityのメインスレッド上で実行したいことが大半です。</p>\n<p>そこでコールバックの実行をUnityのメインスレッドに戻してやるために <code>InvokeOnUnityMainThread</code> が利用できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication.InvokeOnUnityMainThread.html</span>\n<span class=\"token comment\">// のサンプルを抜粋しています</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>Android</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaThreads</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">MyButtonListener</span> _listener <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        _listener<span class=\"token punctuation\">.</span>OnClick <span class=\"token operator\">+=</span> OnClickButton<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 先ほどの InvokeOnUIThread のビュー追加に</span>\n        <span class=\"token comment\">// ボタンクリック時の処理を追加する</span>\n        AndroidApplication<span class=\"token punctuation\">.</span><span class=\"token function\">InvokeOnUIThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Button can only be added on UI thread</span>\n            <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> button <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AndroidJavaObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.widget.Button\"</span><span class=\"token punctuation\">,</span> AndroidApplication<span class=\"token punctuation\">.</span>currentActivity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            button<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setText\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> layoutParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AndroidJavaObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.widget.LinearLayout$LayoutParams\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            button<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setLayoutParams\"</span><span class=\"token punctuation\">,</span> layoutParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 追加されたビューをクリックされたときの処理を追加</span>\n            button<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setOnClickListener\"</span><span class=\"token punctuation\">,</span> _listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            AndroidApplication<span class=\"token punctuation\">.</span>unityPlayer\n                <span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Call</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>AndroidJavaObject<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getFrameLayout\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addView\"</span><span class=\"token punctuation\">,</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnClickButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// この呼び出しはUnityのメインスレッド上で実行される</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Native Button Clicked\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_listener <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            _listener<span class=\"token punctuation\">.</span>OnClick <span class=\"token operator\">-=</span> OnClickButton<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ビュークリック時のコールバック</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyButtonListener</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">AndroidJavaProxy</span></span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// onClickを外に伝えるアクション</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Action</span> OnClick<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">MyButtonListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.view.View$OnClickListener\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AndroidJavaObject</span> view<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// このonClickはAndroidのUIスレッド上で実行される</span>\n            AndroidApplication<span class=\"token punctuation\">.</span><span class=\"token function\">InvokeOnUnityMainThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// InvokeOnUnityMainThread でUnityメインスレッドに戻すことができる</span>\n                OnClick<span class=\"token punctuation\">?.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            view<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code>MyButtonListener</code> の <code>onClick</code> はAndroidの <code>View.OnClickListener</code> として直接呼び出されるため、AndroidのUIスレッド上でこのコールバックが呼び出されることになります。\n<code>AndroidApplication.InvokeOnUnityMainThread</code> を利用することでコールバックの実行（<code>MyButtonListener.OnClick</code>）をUnityのメインスレッドに処理を戻しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// ビュークリック時のコールバック</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyButtonListener</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">AndroidJavaProxy</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">MyButtonListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.view.View$OnClickListener\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// onClickを外に伝えるアクション</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Action</span> OnClick<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">onClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AndroidJavaObject</span> view<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// このonClickはAndroidのUIスレッド上で実行される</span>\n        AndroidApplication<span class=\"token punctuation\">.</span><span class=\"token function\">InvokeOnUnityMainThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// InvokeOnUnityMainThread でUnityメインスレッドに戻すことができる</span>\n            OnClick<span class=\"token punctuation\">?.</span><span class=\"token function\">Invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        view<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"onconfigurationchanged--currentconfiguration\" style=\"position:relative;\"><a href=\"#onconfigurationchanged--currentconfiguration\" aria-label=\"onconfigurationchanged  currentconfiguration permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onConfigurationChanged / currentConfiguration</h3>\n<ul>\n<li><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication-onConfigurationChanged.html\">Unity - Scripting API: Android.AndroidApplication.onConfigurationChanged</a></li>\n<li><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication-currentConfiguration.html\">Unity - Scripting API: Android.AndroidApplication.currentConfiguration</a></li>\n</ul>\n<p><code>AndroidApplication.onConfigurationChanged</code> は、Androidの構成が変化されたときに呼び出されるコールバックで、おもに下記が発生した際に呼び出されます。</p>\n<ul>\n<li>画面の回転によりオリエンテーションが変化したとき</li>\n<li>キーボードの表示・非表示が切り替わったとき</li>\n<li>ダークテーマの設定が切り替わったとき</li>\n<li>スクリーンサイズやレイアウトが変更されたとき</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication-onConfigurationChanged.html</span>\n<span class=\"token comment\">// を抜粋しています</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApplication</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">AndroidConfiguration</span> m_PrevConfig<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        m_PrevConfig <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">AndroidConfiguration</span><span class=\"token punctuation\">(</span>AndroidApplication<span class=\"token punctuation\">.</span>currentConfiguration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        AndroidApplication<span class=\"token punctuation\">.</span>onConfigurationChanged <span class=\"token operator\">+=</span> OnConfigurationChanged<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDisable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        AndroidApplication<span class=\"token punctuation\">.</span>onConfigurationChanged <span class=\"token operator\">-=</span> OnConfigurationChanged<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnConfigurationChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AndroidConfiguration</span> newConfig<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 以前の構成と比較して、変更があったものだけ個別にコールバックを呼び出す</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_PrevConfig<span class=\"token punctuation\">.</span>orientation <span class=\"token operator\">!=</span> newConfig<span class=\"token punctuation\">.</span>orientation <span class=\"token operator\">||</span>\n            m_PrevConfig<span class=\"token punctuation\">.</span>screenLayoutSize <span class=\"token operator\">!=</span> newConfig<span class=\"token punctuation\">.</span>screenLayoutSize<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ApplyUIChanges</span><span class=\"token punctuation\">(</span>newConfig<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">,</span> newConfig<span class=\"token punctuation\">.</span>screenLayoutSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_PrevConfig<span class=\"token punctuation\">.</span>uiModeNight <span class=\"token operator\">!=</span> newConfig<span class=\"token punctuation\">.</span>uiModeNight<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ApplyUINightMode</span><span class=\"token punctuation\">(</span>newConfig<span class=\"token punctuation\">.</span>uiModeNight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_PrevConfig<span class=\"token punctuation\">.</span>screenHeightDp <span class=\"token operator\">!=</span> newConfig<span class=\"token punctuation\">.</span>screenHeightDp <span class=\"token operator\">||</span>\n            m_PrevConfig<span class=\"token punctuation\">.</span>screenWidthDp <span class=\"token operator\">!=</span> newConfig<span class=\"token punctuation\">.</span>screenWidthDp<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ApplyScreenSizeChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        m_PrevConfig<span class=\"token punctuation\">.</span><span class=\"token function\">CopyFrom</span><span class=\"token punctuation\">(</span>newConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ApplyUIChanges</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AndroidOrientation</span> orientation<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AndroidScreenLayoutSize</span> layoutSize<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// UIのオリエンテーションかスクリーンレイアウトが変更されたときに呼び出される</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ApplyUINightMode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AndroidUIModeNight</span> nightMode<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ナイトモード（ダークテーマ）の設定が切り替わったときに呼び出される</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ApplyScreenSizeChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// スクリーンサイズが変更されたときに呼び出されます</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>また、現在の構成は <code>AndroidApplication.currentConfiguration</code> から取得できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidApplication-currentConfiguration.html</span>\n<span class=\"token comment\">// から抜粋</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>Android</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShowConfiguration</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> contents <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">.</span>StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> c <span class=\"token operator\">=</span> AndroidApplication<span class=\"token punctuation\">.</span>currentConfiguration<span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* ColorMode, Hdr: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>colorModeHdr</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* ColorMode, Gamut: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>colorModeWideColorGamut</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* DensityDpi: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>densityDpi</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* FontScale: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>fontScale</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* FontWeightAdj: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>fontWeightAdjustment</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* Keyboard: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>keyboard</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* Keyboard Hidden, Hard: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>hardKeyboardHidden</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* Keyboard Hidden, Normal: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>keyboardHidden</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* Mcc: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>mobileCountryCode</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* Mnc: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>mobileNetworkCode</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* Navigation: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>navigation</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* NavigationHidden: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>navigationHidden</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* Orientation: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>orientation</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* ScreenHeightDp: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>screenHeightDp</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* ScreenWidthDp: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>screenWidthDp</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* SmallestScreenWidthDp: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>smallestScreenWidthDp</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* ScreenLayout, Direction: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>screenLayoutDirection</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* ScreenLayout, Size: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>screenLayoutSize</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* ScreenLayout, Long: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>screenLayoutLong</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* ScreenLayout, Round: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>screenLayoutRound</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* TouchScreen: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>touchScreen</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* UiMode, Night: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>uiModeNight</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* UiMode, Type: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>uiModeType</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* Locales (</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">c<span class=\"token punctuation\">.</span>locales<span class=\"token punctuation\">.</span>Length</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">):\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> c<span class=\"token punctuation\">.</span>locales<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> l <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>locales<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            contents<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"* Locale[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">i</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">] </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">l<span class=\"token punctuation\">.</span>country</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">l<span class=\"token punctuation\">.</span>language</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Current Config:\\n</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">contents</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>このプロパティは <code>AndroidConfiguration</code> という型のインスタンスを返しますが、内部的には <code>android.content.res.Configuration</code> のラッパー型となります。</p>\n<p><a href=\"https://developer.android.com/reference/android/content/res/Configuration\">Configuration  |  Android Developers</a></p>\n<h2 id=\"androidlocale\" style=\"position:relative;\"><a href=\"#androidlocale\" aria-label=\"androidlocale permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AndroidLocale</h2>\n<p><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidLocale.html\">UnityEngine.Android.AndroidLocale</a></p>\n<p><code>AndroidLocale</code> は、Android端末の言語設定を参照するためのクラスです。</p>\n<p>端末に設定されている言語情報の一覧は、先ほどの <code>AndroidApplication.currentConfiguration</code> の <code>locales</code> プロパティから参照できます。\n内部的には、Androidの <code>Configuration</code> の <code>getLocales()</code> メソッドの戻り値が取得できます。</p>\n<h2 id=\"androidgame\" style=\"position:relative;\"><a href=\"#androidgame\" aria-label=\"androidgame permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AndroidGame</h2>\n<p><code>AndroidGame</code> は、AndroidゲームAPIへアクセスするためのクラスです。</p>\n<p>このAPIを用いて、ユーザー設定やゲーム固有の構成に基づいてパフォーマンスやバッテリー駆動時間などの特性を優先することでゲームプレイを最適化できます。</p>\n<p><a href=\"https://developer.android.com/games/optimize/adpf/gamemode/about-API-and-interventions\">ゲームモード  |  Android game development  |  Android Developers</a></p>\n<p>現在は、<a href=\"https://developer.android.com/games/optimize/adpf/gamemode/gamemode-api\">Game Mode API</a> のユーザーの設置値を取得するための<a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidGame.GameMode.html\">AndroidGame.GameMode</a>プロパティと、\n<a href=\"https://developer.android.com/games/optimize/adpf/gamemode/gamestate-api\">Game State API</a> でゲームの状態をOS側に設定するための<a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.AndroidGame.SetGameState.html\">AndroidGame.SetGameState</a>をサポートしています。</p>\n<h2 id=\"applicationexitinfoprovider\" style=\"position:relative;\"><a href=\"#applicationexitinfoprovider\" aria-label=\"applicationexitinfoprovider permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ApplicationExitInfoProvider</h2>\n<p><code>ApplicationExitInfoProvider</code> は、Androidのアプリ終了の理由に関する情報を取得するためのクラスです。</p>\n<p>これを用いて、ANRやメモリ不足、アプリクラッシュなどの状況も含めたAndroidのアプリ終了の情報を詳細に取得できます。</p>\n<p><a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.ApplicationExitInfoProvider.GetHistoricalProcessExitInfo.html\">GetHistoricalProcessExitInfo</a> メソッドを利用することで、直近のアプリの終了情報の一覧を取得できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> exitInfos <span class=\"token operator\">=</span> ApplicationExitInfoProvider<span class=\"token punctuation\">.</span><span class=\"token function\">GetHistoricalProcessExitInfo</span><span class=\"token punctuation\">(</span>\n    <span class=\"token comment\">// パッケージ名を渡す必要がある</span>\n    AndroidApplication<span class=\"token punctuation\">.</span>currentContext<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Call</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getPackageName\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> exitInfo <span class=\"token keyword\">in</span> exitInfos<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Description: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">exitInfo<span class=\"token punctuation\">.</span>description</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Importance: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">exitInfo<span class=\"token punctuation\">.</span>importance</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Status: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">exitInfo<span class=\"token punctuation\">.</span>status</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Reason: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">exitInfo<span class=\"token punctuation\">.</span>reason</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Pss: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">exitInfo<span class=\"token punctuation\">.</span>pss</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Rss: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">exitInfo<span class=\"token punctuation\">.</span>rss</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    builder<span class=\"token punctuation\">.</span><span class=\"token function\">AppendLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Trace: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">exitInfo<span class=\"token punctuation\">.</span>traceAsString</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>下記のように、クラッシュするまでメモリを確保するコードを実行すると</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">></span></span> _memory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>IEnumerator</span> <span class=\"token function\">ConsumeMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 10MBづつメモリを確保</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> block <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        _memory<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 適当に初期化</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> block<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            block<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"Allocated </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">_memory<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">*</span> <span class=\"token number\">10</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> MB\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 少し待機して次のメモリ確保</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>下記のようにメモリ不足の旨のログが出力されることが確認できました。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Description: \nImportance: Foreground\nStatus: 0\nReason: LowMemory\nPss: 0\nPss: 5351504\nTrace: </code></pre></div>\n<p>また、<a href=\"https://docs.unity3d.com/6000.0/Documentation/ScriptReference/Android.ApplicationExitInfoProvider.SetProcessStateSummary.html\">ApplicationExitInfoProvider.SetProcessStateSummary</a> を用いることで、Unityアプリ側から<code>ApplicationExitInfo</code> の追加情報を設定できます。</p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>Unity 6で追加されたAPIのうち、Androidに関するものを簡単に紹介しました。</p>\n<p>個人的な印象として、Androidネイティブプラグインを書く際にほぼ必須であった基本的なAPIが提供されたり、GameModeをはじめとするAndroidにおけるゲーム周辺の対応が手厚くなっている印象を感じました。</p>\n<p>Unity 2022LTSがまだ現役なので、たとえば <code>AndroidApplication.currentActivity</code> を使いたくてもライブラリ上は2つコードを混在させないといけない、といったもどかしさはありますが、\n標準でちゃんとこの辺の下回りが対応されたのは個人的には好印象でした。</p>\n<p>またまたニッチな記事となってしまいましたが、なにかのお役に立てると幸いです。</p>","excerpt":"この記事は、Unity Advent Calendar 2024の9日目の記事となります。 先週、AndroidJNIクラスとstackallocを用いたAndroidメソッド呼び出しのGC.Alloc削減について | Yucchiy's Noteという記事を書いた際に、Unity 6からAndroidApplicationというクラスが追加されていることに気づき、ふとUnity 6でAndroidに関するAPI…","fields":{"slug":"/2024/12/new-android-api-in-unity6/"},"frontmatter":{"date":"December 09, 2024","type":"tech","tags":["Unity","Android","Advent Calendar 2024"],"title":"Unity 6から追加されたAndroidに関するAPIの紹介","description":"Unity 6から追加されたAndroidに関するAPIについて紹介しています。","eyecatch":null}}},"pageContext":{"id":"024df31d-9a4f-52c6-9b70-ad1b78baa42e"}},"staticQueryHashes":["1480509143","3159585216"]}