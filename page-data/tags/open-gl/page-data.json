{"componentChunkName":"component---src-templates-tag-tsx","path":"/tags/open-gl/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/2021/01/assimp-for-model-loading-csharp/"},"frontmatter":{"date":"January 28, 2021","title":"AssimpNetを使ったC#でのモデルインポート - Vol1. Assimp概要とモデルロード編","description":null,"tags":["Assimp","OpenGL","OpenTK","C#"]}}},{"node":{"fields":{"slug":"/2021/01/how-to-get-reflect-vector-in-glsl/"},"frontmatter":{"date":"January 20, 2021","title":"GLSLのreflectとその計算方法","description":null,"tags":["OpenGL","Math","GLSL"]}}},{"node":{"fields":{"slug":"/2021/01/imgui-opentk/"},"frontmatter":{"date":"January 13, 2021","title":"OpenTKでImGuiを動かす","description":null,"tags":["OpenTK","ImGui","OpenGL"]}}},{"node":{"fields":{"slug":"/2021/01/structlayout-opengl-csharp/"},"frontmatter":{"date":"January 07, 2021","title":"C#の構造体のメモリレイアウトとインターリーブ配列","description":null,"tags":["C#","OpenGL","OpenTK"]}}},{"node":{"fields":{"slug":"/2020/10/opentk/"},"frontmatter":{"date":"October 29, 2020","title":"OpenTKを用いてOpenGLプログラミングする","description":null,"tags":["OpenTK","C#","OpenGL"]}}},{"node":{"fields":{"slug":"/2015/11/17/glwork-transformation/"},"frontmatter":{"date":"November 17, 2015","title":"GolangでOpenGLで工作 - 変換","description":"前回に引き続いて、OpenGLをGolangで触ってる. 今回はモデルやらを変換して描画する感じのことをやった.","tags":["OpenGL","CG","Golang"]}}},{"node":{"fields":{"slug":"/2015/11/10/hello-opengl-with-golang/"},"frontmatter":{"date":"November 10, 2015","title":"GolangでOpenGLで工作はじめた","description":"普段はサーバーサイドエンジニアをしているが, 工作と題してOpenGLをGolangでさわりだした","tags":["OpenGL","CG","Golang"]}}}]}},"pageContext":{"tag":"OpenGL"}},"staticQueryHashes":["1480509143","3159585216"]}