{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/051/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"unity-合成データを用いた人間中心型のコンピュータービジョン\" style=\"position:relative;\"><a href=\"#unity-%E5%90%88%E6%88%90%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E7%94%A8%E3%81%84%E3%81%9F%E4%BA%BA%E9%96%93%E4%B8%AD%E5%BF%83%E5%9E%8B%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC%E3%83%93%E3%82%B8%E3%83%A7%E3%83%B3\" aria-label=\"unity 合成データを用いた人間中心型のコンピュータービジョン permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity 合成データを用いた人間中心型のコンピュータービジョン</h2>\n<p><a href=\"https://blog.unity.com/ja/technology/human-centric-computer-vision-with-unity-synthetic-data\">Unity 合成データを用いた人間中心型のコンピュータービジョン | Unity Blog</a></p>\n<p>人間中心のコンピュータービジョンにおいて実世界のデータセットは、プライバシーや法律・安全性や倫理面での問題や、データ収集時のバイアスやコンテンツの偏りが生じやすく、モデルに悪影響を与えることがありました。</p>\n<p>この問題を軽減するためにUnityがリリースした人間中心型のデータ生成器である <a href=\"https://github.com/Unity-Technologies/PeopleSansPeople\">PeopleSansPeople</a> について、その機能からドメインランダム化、生成されたデータセットについての統計解析を COCOデータセットと比較して行っています。</p>\n<h2 id=\"unity-とフィードバックをシェアする\" style=\"position:relative;\"><a href=\"#unity-%E3%81%A8%E3%83%95%E3%82%A3%E3%83%BC%E3%83%89%E3%83%90%E3%83%83%E3%82%AF%E3%82%92%E3%82%B7%E3%82%A7%E3%82%A2%E3%81%99%E3%82%8B\" aria-label=\"unity とフィードバックをシェアする permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity とフィードバックをシェアする</h2>\n<p><a href=\"https://blog.unity.com/ja/community/sharing-your-feedback-with-unity\">Unity とフィードバックをシェアする | Unity Blog</a></p>\n<p>Unityのバグ報告や製品に対しての意見など、なにかしらのフィードバックを行いたいときに、どこに、どのように送るのが適切なのかを解説しています。</p>\n<p><a href=\"https://unity.com/ja/unity-pulse\">Unity Pulse</a>と<a href=\"https://forum.unity.com/\">フォーラム</a>、<a href=\"https://unity.com/ja/roadmap\">製品ロードマップ</a>の３つがそれぞれどういうもので、なにができるのか（またはできないのか）、フィードバックをどのように提供するのかについてまとめられています。</p>\n<h2 id=\"シェーダーグラフを語ろうぜ-vol1---unityステーション\" style=\"position:relative;\"><a href=\"#%E3%82%B7%E3%82%A7%E3%83%BC%E3%83%80%E3%83%BC%E3%82%B0%E3%83%A9%E3%83%95%E3%82%92%E8%AA%9E%E3%82%8D%E3%81%86%E3%81%9C-vol1---unity%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3\" aria-label=\"シェーダーグラフを語ろうぜ vol1   unityステーション permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>シェーダーグラフを語ろうぜ！ Vol.1 - Unityステーション</h2>\n<p><a href=\"https://www.youtube.com/watch?v=Jv6GcNYYKeI\">https://www.youtube.com/watch?v=Jv6GcNYYKeI</a></p>\n<p>Unity Technologies Japan（UTJ）配信のUnityステーションのシェーダーグラフ特集回です。配信では前半に Unity 2021.2のシェーダーグラフ新機能を、後半にシェーダーグラフTIPSをそれぞれ紹介しています。</p>\n<ul>\n<li>Unity 2021.2における新機能紹介\n<ul>\n<li>Changelog: <a href=\"https://docs.unity3d.com/Packages/com.unity.shadergraph@12.1/changelog/CHANGELOG.html\">https://docs.unity3d.com/Packages/com.unity.shadergraph@12.1/changelog/CHANGELOG.html</a></li>\n<li><strong>ビルトイン・レンダーパイプライン</strong>に対応（いままではSurfaceShaderのみ利用可能）\n<ul>\n<li>グラフインスペクターの「Target Settings > Active Targets」でBuilt-inを選択すると利用できる</li>\n<li>経緯としてScriptable Render Pipeline（SRP）を「Built-in」と「Universal Render Pipeline（URP）」を機能的に互換であることを保証していくという方針に\n<ul>\n<li>SurfaceShaderをSRPでも利用できるようにする予定</li>\n<li>それよりも先にShaderGraphをBuilt-in、URP、HDRP（High-Definition Render Pipeline）すべてに対応することを先にすすめることに</li>\n</ul>\n</li>\n<li>該当フォーラム: <a href=\"https://forum.unity.com/threads/what-is-next-for-us-at-unity-with-scriptable-render-pipelines.924218/\">https://forum.unity.com/threads/what-is-next-for-us-at-unity-with-scriptable-render-pipelines.924218/</a></li>\n<li>ただし、BuiltinをURPへの移行は引き続き推奨に</li>\n</ul>\n</li>\n<li>UIの改善\n<ul>\n<li>Category</li>\n<li>Vector2・Vector3・Vector4のMaterial Inspectorの改良（どれでも4枠確保されているのが、要素数に適用するようになった）</li>\n</ul>\n</li>\n<li>Custom Interpolator\n<ul>\n<li>VertexからFragmentに受け渡すパラメータを自由に増やせるようになった</li>\n<li>パーリンノイズの計算をFragmentでやっていたのをVertexで行って、それをCustom Interpolator経由で渡す実装を例に</li>\n</ul>\n</li>\n<li>Split Texture Transform Node\n<ul>\n<li>テクスチャプロパティからタイリング設定を抽出するノード</li>\n<li>他のテクスチャのタイリング設定を借りてきて、別のテクスチャに適用する実装を例に</li>\n</ul>\n</li>\n<li>Branch on Input Node\n<ul>\n<li>サブグラフの拡張機能で、サブグラフに入力があればこっちの処理を、なければ別の処理を、という場合分けができるようになった</li>\n<li>サブグラフのデフォルト挙動を実装できる</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>TIPS\n<ul>\n<li>URP Surface Options\n<ul>\n<li>Shader Graphでは通常グラフ単位（つまりシェーダー単位）でパラメーターを設定するが、この機能を使うと、マテリアル単位でパラメーターを設定できる</li>\n<li>Graph Inspectorの「Allow Material Override」をチェックすると、マテリアルをInspectorで開いて「Surface Options」の項目に設定項目の一覧が出てくるように</li>\n</ul>\n</li>\n<li>ある値を、「Power」で値を2乗する vs「Multiply」ノードで同じ値を与えて2乗する\n<ul>\n<li>「Multiply」のほうが高速。また「Power」の場合は、入力にマイナスを与えることができないので、可能な限り「Multiply」を使うほうがいい</li>\n</ul>\n</li>\n<li>「Saturate」 vs 「Clamp」\n<ul>\n<li>どちらでもよいが「Saturate」が使えるならこっちが良い</li>\n<li>「Saturate」は一部のGPUで他の計算のついでに行うのでコストがゼロになる可能性がある</li>\n</ul>\n</li>\n<li>（ハーフランバートなどで）「2で割って0.5足してその結果を2乗」vs 「-1 ~ 1 → 0 ~ 1へのRemap」\n<ul>\n<li>「Remap」はほぼ同じ処理で実装されている（相当する命令はない）ので、気にしなくてもいいかも</li>\n<li>強いていうと2で割るより0.5に掛けるのほうが速いが、最近のコンパイラは乗算に置き換えるので、それさえも同じになりそう</li>\n</ul>\n</li>\n<li>「Swizzle」ノードが意外に便利\n<ul>\n<li>入力したベクトルの順序を入れ替えてくれるノード。実は入力ベクトルを減らすこともできる。</li>\n<li>xyzw → xyだけにしたいとかに使える</li>\n</ul>\n</li>\n<li>「Tile and Offset」ノードが意外に便利\n<ul>\n<li>UVにTilingとScalingを同時に行って計算してくれる</li>\n<li>UVを使いたいケースではよく使うので、このノードを使うとリファクタリングできるはず</li>\n</ul>\n</li>\n<li>Float To Label\n<ul>\n<li><a href=\"https://github.com/keijiro/ShaderGraphAssets\">https://github.com/keijiro/ShaderGraphAssets</a> 内に公開されている</li>\n<li>Shader Graph中の入力を可視化してくれる</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h1>\n<h2 id=\"ライトプローブの影響を受ける雪エフェクトを作ってみた\" style=\"position:relative;\"><a href=\"#%E3%83%A9%E3%82%A4%E3%83%88%E3%83%97%E3%83%AD%E3%83%BC%E3%83%96%E3%81%AE%E5%BD%B1%E9%9F%BF%E3%82%92%E5%8F%97%E3%81%91%E3%82%8B%E9%9B%AA%E3%82%A8%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F\" aria-label=\"ライトプローブの影響を受ける雪エフェクトを作ってみた permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ライトプローブの影響を受ける雪エフェクトを作ってみた</h2>\n<p><a href=\"https://zenn.dev/r_ngtm/articles/particle-system-lightprobe\">【Unity】ライトプローブの影響を受ける雪エフェクトを作ってみた</a></p>\n<p>この記事では、Particle Systemにライトプローブを適用するとParticle Systemがアタッチされているゲームオブジェクトに最も近いライトプローブのみが適用されるため、パーティクル全体に同じような色のライティングが適用される問題について取り上げています。</p>\n<p>また、それを回避する方法として、ライトが届く領域を格子で区切って、その格子ごとにライトプローブからライティング情報をサンプリングしてテクスチャに書き込んでおき、そのテクスチャ情報をライト情報としてパーティクルの色に反映させることで擬似的にライティングを行う方法を紹介しています。</p>\n<h2 id=\"outline-shader\" style=\"position:relative;\"><a href=\"#outline-shader\" aria-label=\"outline shader permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Outline Shader</h2>\n<p><a href=\"https://roystan.net/articles/outline-shader.html\">Unity Outline Shader Tutorial - Roystan</a></p>\n<p>ポストプロセスによるスクリーンスペースでのアウトラインシェーダーについてのチュートリアル記事です。</p>\n<p>法線と深度、またはその双方を用いたRoberts Crossアルゴリズムによるエッジ検出の実装について紹介しています。</p>\n<p>また、この手法だとカメラに対して鋭角な面がエッジとして誤検出されてしまう問題と、この問題を解決するために法線とカメラ方向の角度に対してしきい値を設けて誤検出を防ぐ手法について紹介しています。</p>\n<h2 id=\"アセンブリごとのコンパイル時間を計測可視化し依存関係の確認も出来る-compilation-time-visualizer\" style=\"position:relative;\"><a href=\"#%E3%82%A2%E3%82%BB%E3%83%B3%E3%83%96%E3%83%AA%E3%81%94%E3%81%A8%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E6%99%82%E9%96%93%E3%82%92%E8%A8%88%E6%B8%AC%E5%8F%AF%E8%A6%96%E5%8C%96%E3%81%97%E4%BE%9D%E5%AD%98%E9%96%A2%E4%BF%82%E3%81%AE%E7%A2%BA%E8%AA%8D%E3%82%82%E5%87%BA%E6%9D%A5%E3%82%8B-compilation-time-visualizer\" aria-label=\"アセンブリごとのコンパイル時間を計測可視化し依存関係の確認も出来る compilation time visualizer permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>アセンブリごとのコンパイル時間を計測&#x26;可視化し、依存関係の確認も出来る Compilation Time Visualizer</h2>\n<p><a href=\"https://kan-kikuchi.hatenablog.com/entry/Compilation_Time_Visualizer?utm_source=feed\">アセンブリごとのコンパイル時間を計測&#x26;可視化し、依存関係の確認も出来る Compilation Time Visualizer 【Unity】【最適化】 - (:3[kanのメモ帳]</a></p>\n<p>アセンブリごとのコンパイル時間を可視化と依存関係の確認ができる「<a href=\"https://github.com/needle-tools/compilation-visualizer\">needle-tools/compilation-visualizer</a>」について、そのインストール方法から基本的な利用方法について解説しています。</p>\n<h2 id=\"unity2dプルプルしようぜ軟体\" style=\"position:relative;\"><a href=\"#unity2d%E3%83%97%E3%83%AB%E3%83%97%E3%83%AB%E3%81%97%E3%82%88%E3%81%86%E3%81%9C%E8%BB%9F%E4%BD%93\" aria-label=\"unity2dプルプルしようぜ軟体 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>【Unity,2D】プルプルしようぜ！【軟体】</h2>\n<p><a href=\"https://note.com/iroiro_unity/n/n370e16b4ec14\">【Unity,2D】プルプルしようぜ！【軟体】｜iroiro｜note</a></p>\n<p>2D Physicsに標準で用意されているコンポーネントのみを用いて、ソフトボティを擬似的に実装する方法を紹介しています。</p>\n<p>SprineにBoneを割り振ることでスキニングし、それぞれの骨にRigidbody 2Dを配置して、Spring Joint 2Dによってバネ制約を設定することでソフトボディを再現しています。</p>\n<p>それぞれの設定方法についてスクリーンショット付きで解説しています。</p>\n<h2 id=\"unity2021でvrテンプレートを使ってoculusquest2の開発環境を構築してみる\" style=\"position:relative;\"><a href=\"#unity2021%E3%81%A7vr%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6oculusquest2%E3%81%AE%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\" aria-label=\"unity2021でvrテンプレートを使ってoculusquest2の開発環境を構築してみる permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity2021でVRテンプレートを使ってOculusQuest2の開発環境を構築してみる</h2>\n<p><a href=\"https://synamon.hatenablog.com/entry/quest2_develop_environment\">Unity2021でVRテンプレートを使ってOculusQuest2の開発環境を構築してみる - Synamon’s Engineer blog</a></p>\n<p>Unity2021.2のVRテンプレートプロジェクトを用いて、空プロジェクトからOculus Quest2の開発環境を構築する方法について紹介しています。</p>\n<p>Unity Hubを用いたAndroid SDKなどの必要なモジュールのインストール方法からプロジェクトの作成、VR開発に必要なUnityパッケージのインストール、プロジェクト設定からOculus LinkやQuest2へのビルド方法、コントローラーからの入力のとり方についてそれぞれ紹介しています。</p>\n<h2 id=\"unityunity-20212-でアセットの並列インポートを有効にする方法\" style=\"position:relative;\"><a href=\"#unityunity-20212-%E3%81%A7%E3%82%A2%E3%82%BB%E3%83%83%E3%83%88%E3%81%AE%E4%B8%A6%E5%88%97%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88%E3%82%92%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95\" aria-label=\"unityunity 20212 でアセットの並列インポートを有効にする方法 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>【Unity】Unity 2021.2 でアセットの並列インポートを有効にする方法</h2>\n<p><a href=\"https://baba-s.hatenablog.com/entry/2022/01/11/150000\">【Unity】Unity 2021.2 でアセットの並列インポートを有効にする方法 - コガネブログ</a></p>\n<p>Unity 2021.2で実装されているアセットの並列インポートについて、設定方法と、設定項目の詳細についてそれぞれ解説しています。</p>\n<h2 id=\"meta-avatars-sdk-for-unity\" style=\"position:relative;\"><a href=\"#meta-avatars-sdk-for-unity\" aria-label=\"meta avatars sdk for unity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Meta Avatars SDK for Unity</h2>\n<p><a href=\"https://xrdnk.hateblo.jp/entry/meta_avatars_sdk_for_unity_4\">Meta Avatars SDK for Unity (4)｜ハンドトラッキングでアバターの腕・手・指を動かす - デニッキ！</a></p>\n<p><a href=\"https://xrdnk.hateblo.jp/entry/meta_avatars_sdk_for_unity_5\">Meta Avatars SDK for Unity (5)｜バージョン9.1 のリリースノート確認 - デニッキ！</a></p>\n<p>Meta社が提供するアバターシステム「Meta Avatars SDK for Unity」について、ハンドトラッキングでアバターの腕・手・指を動かす実装の紹介と、ver9.1のリリースノートについてまとめています。</p>\n<p>ハンドトラッキングでは <code>OvrAvatarInputManager</code> を実装して、自前で入力でハンドトラッキングを行う例を紹介しています。</p>","excerpt":"Unity 合成データを用いた人間中心型のコンピュータービジョン Unity 合成データを用いた人間中心型のコンピュータービジョン | Unity Blog 人間中心のコンピュータービジョンにおいて実世界のデータセットは、プライバシーや法律・安全性や倫理面での問題や、データ収集時のバイアスやコンテンツの偏りが生じやすく、モデルに悪影響を与えることがありました。 この問題を軽減するためにUnityがリリースした人間中心型のデータ生成器である PeopleSansPeople…","fields":{"slug":"/project/unity-weekly/051/"},"frontmatter":{"date":"January 17, 2022","type":"unity-weekly","tags":["Unity","Unity Weekly"],"title":"Sharing your feedback with Unity - Unity Weekly #051","description":null,"eyecatch":null}}},"pageContext":{"id":"05d27dcf-0205-5bf5-8f05-7b35d52579a0"}},"staticQueryHashes":["1480509143","3159585216"]}