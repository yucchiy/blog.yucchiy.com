{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/050/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"グラフィックス最適化\" style=\"position:relative;\"><a href=\"#%E3%82%B0%E3%83%A9%E3%83%95%E3%82%A3%E3%83%83%E3%82%AF%E3%82%B9%E6%9C%80%E9%81%A9%E5%8C%96\" aria-label=\"グラフィックス最適化 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>グラフィックス最適化</h2>\n<p><a href=\"https://www.notion.so/02e7fcdecd234cb9acaaaecd8171446e\">グラフィックス最適化</a></p>\n<p>3Dの描画を最適化するための詳細なチェックリストと関連リンクが紹介されています。</p>\n<p>また、パーティクルシステム、UI、アセットについてもそれぞれの最適化方法のリンクがまとめられています。</p>\n<h2 id=\"meta-avatars-sdk-for-unity\" style=\"position:relative;\"><a href=\"#meta-avatars-sdk-for-unity\" aria-label=\"meta avatars sdk for unity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Meta Avatars SDK for Unity</h2>\n<p><a href=\"https://xrdnk.hateblo.jp/entry/2022/01/04/004851\">Meta Avatars SDK for Unity (1)｜インストール・サンプル動作確認などの初期環境構築 - デニッキ！</a></p>\n<p><a href=\"https://xrdnk.hateblo.jp/entry/meta_avatars_sdk_for_unity_2\">Meta Avatars SDK for Unity (2)｜サンプルシーンを動かしてみる - デニッキ！</a></p>\n<p><a href=\"https://xrdnk.hateblo.jp/entry/meta_avatars_sdk_for_unity_3\">Meta Avatars SDK for Unity (3)｜OVRPlayerController 連携の実装方法（コントローラ操作版） - デニッキ！</a></p>\n<p>Meta社が提供するアバターシステム「Meta Avatars SDK for Unity」について、導入方法からSDKに用意されているサンプルシーンの紹介、 <code>OVRPlayerController</code> を用いたアタバーの動作制御まで紹介しています。</p>\n<p>導入については Newtonsoft.Json.dll に関するコンパイルエラーの解決方法や、 <code>OVRPlayerController</code> を用いたアバター制御の実装については、空のシーンからスクラッチでHMDとコントローラーの位置をトラッキングする実装までを行っています。</p>\n<h2 id=\"impossible-geometry-with-stencils-in-unity-urp\" style=\"position:relative;\"><a href=\"#impossible-geometry-with-stencils-in-unity-urp\" aria-label=\"impossible geometry with stencils in unity urp permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Impossible Geometry with Stencils in Unity URP</h2>\n<p><a href=\"https://danielilett.com/2022-01-05-tut5-22-impossible-geom-stencils/\">Impossible Geometry with Stencils in Unity URP</a></p>\n<p><a href=\"https://store.steampowered.com/app/219890/Antichamber/?l=japanese\">Antichamber</a> に登場するような、それぞれの側面を見たときに別々の空間を描画するようなレンダリングテクニックを、StencilとUniversal Render Pipeline（URP）のRenderer Featuresを用いて実装する方法について紹介しています。</p>\n<p>シェーダーにおけるStencilの基本的な使い方と、側面ごとにRenderer Featuresを用意して描画対象をレイヤーマスクによりフィルタとStencil値の上書きすることで、これを実現する方法について解説しています。</p>\n<h2 id=\"audiosourceの音声データをunity上でvisualizeする\" style=\"position:relative;\"><a href=\"#audiosource%E3%81%AE%E9%9F%B3%E5%A3%B0%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92unity%E4%B8%8A%E3%81%A7visualize%E3%81%99%E3%82%8B\" aria-label=\"audiosourceの音声データをunity上でvisualizeする permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AudioSourceの音声データをUnity上でVisualizeする</h2>\n<p><a href=\"https://qiita.com/mattak/items/44180c107ee6554c02cd\">AudioSourceの音声データをUnity上でVisualizeする - Qiita</a></p>\n<p>AudioSourceの音声データと、FFTされたデータを取得して、 <code>LineRenderer</code>を用いて波形を描画する方法について解説しています。</p>\n<h2 id=\"選択項目に吸いつくポインターを実装する\" style=\"position:relative;\"><a href=\"#%E9%81%B8%E6%8A%9E%E9%A0%85%E7%9B%AE%E3%81%AB%E5%90%B8%E3%81%84%E3%81%A4%E3%81%8F%E3%83%9D%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B\" aria-label=\"選択項目に吸いつくポインターを実装する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>選択項目に吸いつくポインターを実装する</h2>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">選択項目に吸いつくポインターの検証🙆‍♂️ <a href=\"https://t.co/uGVOJgQzhf\">pic.twitter.com/uGVOJgQzhf</a></p>&mdash; KENTO⚽️XRエンジニア😎Shader100記事マラソン挑戦中50/100 (@okprogramming) <a href=\"https://twitter.com/okprogramming/status/1475486398195331074?ref_src=twsrc%5Etfw\">December 27, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p><a href=\"https://qiita.com/OKsaiyowa/items/6ecded40fe8926c976d4\">【Unity(C#)】選択項目に吸いつくポインターを実装する - Qiita</a></p>\n<p>上記のような選択項目に吸い付くポインターを実装する方法について解説しています。</p>\n<p>ポインター自身の描画は<code>LineRenderer</code>で行い、吸い付く曲線は、選択項目の直線と実際にポインターが飛ぶ直線の2直線をベジエ曲線を用いて補完する形で制御しています。</p>\n<p>また、この実装を、 <code>OVRInputModule</code> を用いて実装する方法についても触れています。</p>\n<h2 id=\"shadergraphデプスからワールド座標を復元するカスタムノード\" style=\"position:relative;\"><a href=\"#shadergraph%E3%83%87%E3%83%97%E3%82%B9%E3%81%8B%E3%82%89%E3%83%AF%E3%83%BC%E3%83%AB%E3%83%89%E5%BA%A7%E6%A8%99%E3%82%92%E5%BE%A9%E5%85%83%E3%81%99%E3%82%8B%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%8E%E3%83%BC%E3%83%89\" aria-label=\"shadergraphデプスからワールド座標を復元するカスタムノード permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>【ShaderGraph】デプスからワールド座標を復元するカスタムノード</h2>\n<p><a href=\"https://zenn.dev/r_ngtm/articles/shadergraph-reconstruct-wpos-depth\">【ShaderGraph】デプスからワールド座標を復元するカスタムノード</a></p>\n<p>ShaderGraphのSceneDepthノードから得られるデプス値を元にワールド座標を復元する方法について紹介しています。</p>\n<p>このデプス値がクリップ空間のZ座標に相当することから、View Projectionの逆変換を適用することでワールド座標を復元できるため、その計算をおこなうCustom Functionノードを実装し、ワールド座標を復元します。</p>\n<h2 id=\"unityを実行せずにアニメーションを再生する\" style=\"position:relative;\"><a href=\"#unity%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%9B%E3%81%9A%E3%81%AB%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E5%86%8D%E7%94%9F%E3%81%99%E3%82%8B\" aria-label=\"unityを実行せずにアニメーションを再生する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unityを実行せずにアニメーションを再生する</h2>\n<p><a href=\"https://qiita.com/salt-k2t/items/cb2527245dba857fb2fc\">Unityを実行せずにアニメーションを再生する - Qiita</a></p>\n<p>PlayableAPIを用いて、エディター上でPlayModeに入らずにアニメーションを再生する方法を紹介しています。</p>\n<p>シンプルな1アニメーション再生以外に <code>AnimationMixerPlayable</code> を用いて、2アニメーションをブレンドして再生する方法についても触れています。</p>\n<h2 id=\"unity2022でさらに進化したsearch-windowが便利だった\" style=\"position:relative;\"><a href=\"#unity2022%E3%81%A7%E3%81%95%E3%82%89%E3%81%AB%E9%80%B2%E5%8C%96%E3%81%97%E3%81%9Fsearch-window%E3%81%8C%E4%BE%BF%E5%88%A9%E3%81%A0%E3%81%A3%E3%81%9F\" aria-label=\"unity2022でさらに進化したsearch windowが便利だった permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity2022でさらに進化したSearch Windowが便利だった</h2>\n<p><a href=\"https://myudon.hatenablog.com/entry/2022/01/04/000000\">Unity2022でさらに進化したSearch Windowが便利だった - うどんてっくメモ</a></p>\n<p>プロジェクト内のアセットを検索できるSearch Windowに、Unity 2022で進化した「Query Builder Mode」について紹介しています。</p>\n<p>「Query Builder Mode」に Unity 2022で追加されたGUI機能の使い方から、パラメータのフィルタ機能についてそれぞれ解説しています。</p>\n<h2 id=\"vfx-in-unity-getting-started\" style=\"position:relative;\"><a href=\"#vfx-in-unity-getting-started\" aria-label=\"vfx in unity getting started permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VFX in Unity: Getting Started</h2>\n<p><a href=\"https://www.raywenderlich.com/23120977-vfx-in-unity-getting-started\">VFX in Unity: Getting Started | raywenderlich.com</a></p>\n<p>UnityのParticleSystemによるVFX制作の基礎を、銃から弾丸を発射して、対象に着弾する際のそれぞれのパーティクルエフェクトを制作しながら学んでいくチュートリアル記事です。</p>\n<p>パーティクルエフェクトにおいて、サイズ、形状、色、タイミングといった主要なパラメータの説明と、発砲時の銃口効果や着弾時のインパクト効果、弾丸のトレイル効果を実例にあげて、それらのパラメータをどのように調整すると、どのような効果が実現できるかについて解説しています。</p>","excerpt":"グラフィックス最適化 グラフィックス最適化 3Dの描画を最適化するための詳細なチェックリストと関連リンクが紹介されています。 また、パーティクルシステム、UI、アセットについてもそれぞれの最適化方法のリンクがまとめられています。 Meta Avatars SDK for Unity Meta Avatars SDK for Unity (1)｜インストール・サンプル動作確認などの初期環境構築 - デニッキ！ Meta Avatars SDK for Unity (…","fields":{"slug":"/project/unity-weekly/050/"},"frontmatter":{"date":"January 10, 2022","type":"unity-weekly","tags":["Unity","Unity Weekly"],"title":"Unity Weekly #050","description":null,"eyecatch":null}}},"pageContext":{"id":"4b8ddc97-9751-59aa-971c-27bc005d69ad"}},"staticQueryHashes":["1480509143","3159585216"]}