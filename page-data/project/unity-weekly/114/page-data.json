{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/114/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"unity-officials\" style=\"position:relative;\"><a href=\"#unity-officials\" aria-label=\"unity officials permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Officials</h2>\n<h3 id=\"runtime-authoring-in-projects-using-ecs-for-unity\" style=\"position:relative;\"><a href=\"#runtime-authoring-in-projects-using-ecs-for-unity\" aria-label=\"runtime authoring in projects using ecs for unity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Runtime authoring in projects using ECS for Unity</h3>\n<p><a href=\"https://blog.unity.com/engine-platform/runtime-authoring-in-projects-using-ecs\">Runtime authoring in projects using ECS for Unity | Unity Blog</a></p>\n<p><a href=\"https://unity.com/ecs\">ECS for Unity</a> でのオーサリングデータとランタイムデータの二重性を管理するためのData Modesというパターンやエディター環境、ワークフローについて紹介しています。</p>\n<h3 id=\"bringing-the-social-experience-to-your-games-friends--leaderboards\" style=\"position:relative;\"><a href=\"#bringing-the-social-experience-to-your-games-friends--leaderboards\" aria-label=\"bringing the social experience to your games friends  leaderboards permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bringing the social experience to your games: Friends &#x26; Leaderboards</h3>\n<p><a href=\"https://blog.unity.com/engine-platform/introducing-friends-and-leaderboards\">Bringing the social experience to your games: Friends &#x26; Leaderboards | Unity Blog</a></p>\n<p>UGS（Unity Gaming Services）で新しく提供される「Friends」と「Leaderboards」についてその概要や参考となる実装について紹介しています。</p>\n<h3 id=\"memory-profiler-110-exp1-released\" style=\"position:relative;\"><a href=\"#memory-profiler-110-exp1-released\" aria-label=\"memory profiler 110 exp1 released permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Memory Profiler 1.1.0-exp.1 Released</h3>\n<p><a href=\"https://forum.unity.com/threads/memory-profiler-1-1-0-exp-1-released.1415592/\">Official - Memory Profiler 1.1.0-exp.1 Released</a></p>\n<p>Memory Profilerのv1.1.0の実験バージョンが公開されました。このリリースで下記機能が新しく実装されました。</p>\n<ul>\n<li>Resident Memory Information（常駐メモリに関する情報）</li>\n<li>Managed Object Search Improvements\n<ul>\n<li>通常マネージドオブジェクトは <code>No Name</code> が割り当てられて検索しづらかったが、テーブルのDescriptionカラムなども検索に含めるようになった</li>\n<li>マネージドオブジェクトのアドレスやインスタンスIDでも検索ができるようになった</li>\n<li>All Of Memoryテーブルにマネージドオブジェクトのアドレスが表示されるようになった</li>\n<li>Unity ObjectsテーブルのMonoBehaviourとScriptableObjectを継承するスクリプトの型表示が細分化されるようになった。これにより型名や名前空間による検索とフィルタリングが可能になり、さらにネイティブメモリ使用量の影響の分析も簡単に行えるように。</li>\n</ul>\n</li>\n<li>Improved Comparison Mode\n<ul>\n<li>Comparison ModeのAll Of Memoryビューでのマネージドオブジェクト名をそのオブジェクトのアドレスで指定するように変更</li>\n<li>スナップショット比較の各種ビューで、ネイティブオブジェクトのインスタンスIDを個別にリストするようにし、オブジェクトの比較をしやすくなった。</li>\n</ul>\n</li>\n<li>Render Texture Details\n<ul>\n<li>Textureオブジェクト同様に、Render Textureのフォーマットやサイズなどのメタデータを表示するようになった</li>\n<li>Unity 2023.1以降では、resolve surfaceにcolorまたはdepth surfaceかそれを組み合わせて利用しているかどうかも確認できるように</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"principlesのグラフィック技術\" style=\"position:relative;\"><a href=\"#principles%E3%81%AE%E3%82%B0%E3%83%A9%E3%83%95%E3%82%A3%E3%83%83%E3%82%AF%E6%8A%80%E8%A1%93\" aria-label=\"principlesのグラフィック技術 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PRINCIPLESのグラフィック技術</h3>\n<p><a href=\"https://www.youtube.com/watch?v=qKTX5GKKpwM\">PRINCIPLESのグラフィック技術</a></p>\n<p>COLOPL Creatorsによる短編アドベンジャーゲームPRINCIPLESについて、そのグラフィックス表現の技術的側面をインタビュー形式で深ぼっています。</p>\n<p>各種3D表現やVFX Graphによる火花表現、破壊表現、パーティクルのためのシェーダーやMotionVectorによる補間、草木の編集のためのSpeedTreeの活用、タイムライン活用などについて解説しています。</p>\n<h3 id=\"meshクラス入門ラインを描いてみよう\" style=\"position:relative;\"><a href=\"#mesh%E3%82%AF%E3%83%A9%E3%82%B9%E5%85%A5%E9%96%80%E3%83%A9%E3%82%A4%E3%83%B3%E3%82%92%E6%8F%8F%E3%81%84%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\" aria-label=\"meshクラス入門ラインを描いてみよう permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Meshクラス入門・ラインを描いてみよう！</h3>\n<p><a href=\"https://youtu.be/fv5OqLD3lEY\">【Unity】Meshクラス入門・ラインを描いてみよう！</a></p>\n<p>Meshクラスを用いたスクリプトによるメッシュ描画について、三角形の描画を通して頂点バッファーとインデックスバッファーの設定方法とトポロジーの説明、応用として波を打つアニメーションを行うプレーンメッシュを生成する方法について解説しています。</p>\n<h3 id=\"今日からはじめるanime-toolboxプロによる作画アニメーション風の画面作りのコツをみてみよう\" style=\"position:relative;\"><a href=\"#%E4%BB%8A%E6%97%A5%E3%81%8B%E3%82%89%E3%81%AF%E3%81%98%E3%82%81%E3%82%8Banime-toolbox%E3%83%97%E3%83%AD%E3%81%AB%E3%82%88%E3%82%8B%E4%BD%9C%E7%94%BB%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E9%A2%A8%E3%81%AE%E7%94%BB%E9%9D%A2%E4%BD%9C%E3%82%8A%E3%81%AE%E3%82%B3%E3%83%84%E3%82%92%E3%81%BF%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\" aria-label=\"今日からはじめるanime toolboxプロによる作画アニメーション風の画面作りのコツをみてみよう permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>今日からはじめるAnime Toolbox『プロによる作画アニメーション風の画面作りのコツをみてみよう~』</h3>\n<ul>\n<li><a href=\"https://note.com/nyaa_toraneko/n/n7bf182583aef\">今日からはじめるAnime Toolbox第5回『プロによる作画アニメーション風の画面作りのコツをみてみよう<del>その1：MIKONOTE Anime Toolbox Sampleをみてみよう</del>』｜Nobuyuki Kobayashi@nyaa_toraneko｜note</a></li>\n<li><a href=\"https://note.com/nyaa_toraneko/n/n2dccab1b5f4f\">今日からはじめるAnime Toolbox第6回『プロによる作画アニメーション風の画面作りのコツをみてみよう<del>その２：コンポジターグラフの基本構成をみてみよう</del>』｜Nobuyuki Kobayashi@nyaa_toraneko｜note</a></li>\n<li><a href=\"https://note.com/nyaa_toraneko/n/n177e8cfb5d2b\">今日からはじめるAnime Toolbox第7回『プロによる作画アニメーション風の画面作りのコツをみてみよう<del>その３：C105のコンポジションをじっくりみてみよう</del>』｜Nobuyuki Kobayashi@nyaa_toraneko｜note</a></li>\n<li><a href=\"https://note.com/nyaa_toraneko/n/na93da77151ff\">今日からはじめるAnime Toolbox第8回『プロによる作画アニメーション風の画面作りのコツをみてみよう<del>その４：C106のコンポジションをじっくりみてみよう</del>』｜Nobuyuki Kobayashi@nyaa_toraneko｜note</a></li>\n</ul>\n<p>アニメ制作スタジオである<a href=\"http://www.graphinica.com/index.html\">グラフィニカ</a>によって制作された、放送用のアニメ本編で実際に使われるレベルのAnime Toolboxの作例である『<a href=\"https://assetstore.unity.com/packages/templates/tutorials/mikonote-anime-toolbox-sample-237176\">MIKONOTE Anime Toolbox Sample</a>』のコンポジットグラフの構成とそれぞれのコンポジットブロックの構成から、Unity上で表現するためのタイムラインなどの活用方法についてその詳細を4記事にわけて解説しています。</p>\n<h2 id=\"unity-repositories\" style=\"position:relative;\"><a href=\"#unity-repositories\" aria-label=\"unity repositories permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Repositories</h2>\n<h3 id=\"option-to-blend-out-from-snapshot\" style=\"position:relative;\"><a href=\"#option-to-blend-out-from-snapshot\" aria-label=\"option to blend out from snapshot permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>option to blend out from snapshot</h3>\n<p><a href=\"https://github.com/Unity-Technologies/com.unity.cinemachine/pull/841\">https://github.com/Unity-Technologies/com.unity.cinemachine/pull/841</a></p>\n<p>Cinemachineパッケージのカメラのブレンドオプションに「Freeze When Blending Out」が追加された。</p>\n<p>通常カメラのブレンドアウト時に、ブレンドアウトするカメラはライブ状態（つまり定期更新が走る状態）だが、このブレンドオプションを設定するとブレンドアウトカメラのスナップショットをとって、更新を停止した状態でブレンドを行う。</p>\n<h2 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h2>\n<h3 id=\"令和5年になったのでそろそろunityでhttp3通信したい\" style=\"position:relative;\"><a href=\"#%E4%BB%A4%E5%92%8C5%E5%B9%B4%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F%E3%81%AE%E3%81%A7%E3%81%9D%E3%82%8D%E3%81%9D%E3%82%8Dunity%E3%81%A7http3%E9%80%9A%E4%BF%A1%E3%81%97%E3%81%9F%E3%81%84\" aria-label=\"令和5年になったのでそろそろunityでhttp3通信したい permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>令和5年になったのでそろそろUnityでHTTP/3通信したい</h3>\n<p><a href=\"https://zenn.dev/takehara_ryo/articles/0b0eb8126054c1\">令和5年になったのでそろそろUnityでHTTP/3通信したい</a></p>\n<p>UnityでHTTP/3通信を行うためのライブラリ<a href=\"https://github.com/TakeharaR/nhh3\">nhh3</a>の実装の元に、HTTP/3通信をUnityで行うために利用を検討したOSSや実際に利用したquicheのビルド方法や利用方法に関するTips、実装に際して躓いた課題、Unity実装などについてまとめています。</p>\n<h3 id=\"mirrativにおけるunityのwebglを用いたライブゲームの仕組み\" style=\"position:relative;\"><a href=\"#mirrativ%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8Bunity%E3%81%AEwebgl%E3%82%92%E7%94%A8%E3%81%84%E3%81%9F%E3%83%A9%E3%82%A4%E3%83%96%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF\" aria-label=\"mirrativにおけるunityのwebglを用いたライブゲームの仕組み permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MirrativにおけるUnityのWebGLを用いたライブゲームの仕組み</h3>\n<p><a href=\"https://tech.mirrativ.stream/entry/2023/03/24/170651\">MirrativにおけるUnityのWebGLを用いたライブゲームの仕組み - Mirrativ Tech Blog</a></p>\n<p>Mirrativが提供するUnity WebGL製のライフゲーム実装について、WebGLで開発を行った経緯やメリット、MirrativアプリとWebGLアプリの構成やゲームサーバーとMirrativサーバーとのそれぞれの通信方法について紹介しています。</p>\n<h3 id=\"非公式和訳unity---level-up-your-code-with-game-programming-patterns\" style=\"position:relative;\"><a href=\"#%E9%9D%9E%E5%85%AC%E5%BC%8F%E5%92%8C%E8%A8%B3unity---level-up-your-code-with-game-programming-patterns\" aria-label=\"非公式和訳unity   level up your code with game programming patterns permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>非公式和訳）Unity - level up your code with game programming patterns</h3>\n<p><a href=\"https://zenn.dev/twugo/books/21cb3a6515e7b8\">(非公式和訳）Unity - level up your code with game programming patterns</a></p>\n<p>Unity公式のゲーム開発に関するデザインパターンや設計についてまとめたe-book「<a href=\"https://resources.unity.com/games/level-up-your-code-with-game-programming-patterns\">Level up your code with game programming patterns</a>」の、非公式による和訳が公開されています。</p>\n<h3 id=\"outline-post-process-in-unity-shader-graph-urp\" style=\"position:relative;\"><a href=\"#outline-post-process-in-unity-shader-graph-urp\" aria-label=\"outline post process in unity shader graph urp permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Outline Post Process in Unity Shader Graph (URP)</h3>\n<p><a href=\"https://danielilett.com/2023-03-21-tut7-1-fullscreen-outlines/\">Outline Post Process in Unity Shader Graph (URP)</a></p>\n<p>Fullscreen Shader Graphを用いたURPでアウトライン描画をポストエフェクトで行う方法について、カラーと法線ベースでの実装方法を紹介しています。</p>\n<h3 id=\"unityで複数種別のファイルが混在しているフォルダから特定の種別だけ選択する方法\" style=\"position:relative;\"><a href=\"#unity%E3%81%A7%E8%A4%87%E6%95%B0%E7%A8%AE%E5%88%A5%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%8C%E6%B7%B7%E5%9C%A8%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%81%8B%E3%82%89%E7%89%B9%E5%AE%9A%E3%81%AE%E7%A8%AE%E5%88%A5%E3%81%A0%E3%81%91%E9%81%B8%E6%8A%9E%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95\" aria-label=\"unityで複数種別のファイルが混在しているフォルダから特定の種別だけ選択する方法 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unityで複数種別のファイルが混在しているフォルダから特定の種別だけ選択する方法</h3>\n<p><a href=\"http://halcyonsystemblog.jp/blog-entry-962.html\">【ハルシオンブログ】Unityで複数種別のファイルが混在しているフォルダから特定の種別だけ選択する方法</a></p>\n<p>プロジェクトビューで複数種類のファイルをまとめて選択した状態で、特定の種類のファイルだけを選択し直す方法について紹介しています。</p>\n<h3 id=\"unity-c-の各演算の処理コストのまとめ\" style=\"position:relative;\"><a href=\"#unity-c-%E3%81%AE%E5%90%84%E6%BC%94%E7%AE%97%E3%81%AE%E5%87%A6%E7%90%86%E3%82%B3%E3%82%B9%E3%83%88%E3%81%AE%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"unity c の各演算の処理コストのまとめ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity (C#) の各演算の処理コストのまとめ</h3>\n<p><a href=\"https://qiita.com/uminohiyoko/items/1dfeae592402697be025\">Unity (C#) の各演算の処理コストのまとめ - Qiita</a></p>\n<p>C#での各演算がどの程度の処理時間になるかについてまとめています。</p>\n<h3 id=\"unityでandroidのネイティブguiを出したい\" style=\"position:relative;\"><a href=\"#unity%E3%81%A7android%E3%81%AE%E3%83%8D%E3%82%A4%E3%83%86%E3%82%A3%E3%83%96gui%E3%82%92%E5%87%BA%E3%81%97%E3%81%9F%E3%81%84\" aria-label=\"unityでandroidのネイティブguiを出したい permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UnityでAndroidのネイティブGUIを出したい</h3>\n<p><a href=\"https://qiita.com/AtsuAtsu0120/items/c8898c4888610e1271af\">【Unity】UnityでAndroidのネイティブGUIを出したい - Qiita</a></p>\n<p>Unity上でAndroidのネイティブGUI（Android標準のUI）を表示する方法について、TimePickerDialogを題材にkotlinでのUI呼び出しの実装とkotlinとC#の連携方法についてそれぞれ解説しています。</p>\n<h2 id=\"slides\" style=\"position:relative;\"><a href=\"#slides\" aria-label=\"slides permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Slides</h2>\n<h3 id=\"c-と-http2-と-grpc\" style=\"position:relative;\"><a href=\"#c-%E3%81%A8-http2-%E3%81%A8-grpc\" aria-label=\"c と http2 と grpc permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>C# と HTTP/2 と gRPC</h3>\n<p><a href=\"https://speakerdeck.com/nenonaninu/2-to-grpc\">C# と HTTP/2 と gRPC</a></p>\n<p>HTTP/2通信の基本、StreamやFrameType、Application-Layer Protocol Negotiationについてと、C#でHTTP/2を扱うための各種クラスやパラメーター、実装について解説しています。</p>\n<h2 id=\"repositories\" style=\"position:relative;\"><a href=\"#repositories\" aria-label=\"repositories permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repositories</h2>\n<h3 id=\"unity-grass\" style=\"position:relative;\"><a href=\"#unity-grass\" aria-label=\"unity grass permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity-Grass</h3>\n<p><a href=\"https://github.com/cainrademan/Unity-Grass\">cainrademan/Unity-Grass</a></p>\n<p>コンピュートシェーダーとシェーダーを用いたプロシージャルな草の描画システム。「<a href=\"https://www.youtube.com/watch?v=Ibe1JBF5i5Y\">Procedural Grass in ‘Ghost of Tsushima’</a>」を参考に実装されている。</p>\n<p>3次ベジェ曲線による形状制御、風アニメーション、ライト、クランピング、フラスタム・ディスタンスカリングなど、さまざまな機能が実装されている。</p>\n<h3 id=\"chatdollkit\" style=\"position:relative;\"><a href=\"#chatdollkit\" aria-label=\"chatdollkit permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ChatdollKit</h3>\n<p><a href=\"https://github.com/uezo/ChatdollKit\">uezo/ChatdollKit: ChatdollKit enables you to make your 3D model into a chatbot</a></p>\n<p>3Dモデルを使って音声対話可能なチャットボットを作るためのフレームワーク。</p>\n<p>発話とアニメーション同期・フェイシャル制御などのモデル制御、音声認識・テキスト読み上げ・対話のステート管理・ChatGPT対応や感情シミュレーションなどの対話制御、複数プラットフォーム対応などの特徴を持つ。</p>\n<h3 id=\"simple-voronoi-fragmenter\" style=\"position:relative;\"><a href=\"#simple-voronoi-fragmenter\" aria-label=\"simple voronoi fragmenter permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simple Voronoi Fragmenter</h3>\n<p><a href=\"https://github.com/simplestargame/SimpleVoronoiFragmenter\">simplestargame/SimpleVoronoiFragmenter: Unity Voronoi-based Runtime Destruction Asset</a></p>\n<p>ランタイムでのオブジェクトの破壊表現ができるスクリプトアセット。</p>\n<h3 id=\"serializereferencedropdown\" style=\"position:relative;\"><a href=\"#serializereferencedropdown\" aria-label=\"serializereferencedropdown permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SerializeReferenceDropdown</h3>\n<p><a href=\"https://github.com/AlexeyTaranov/SerializeReferenceDropdown\">AlexeyTaranov/SerializeReferenceDropdown: (Unity) Editor dropdown for SerializeReference Attribute with Copy/Paste</a></p>\n<p>SerializeReferenceのついたフィールドのサブクラスの一覧表示するための属性実装。あわせて値のコピー＆ペーストも行うことができる。</p>\n<h3 id=\"unity-screenspacereflections-urp\" style=\"position:relative;\"><a href=\"#unity-screenspacereflections-urp\" aria-label=\"unity screenspacereflections urp permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity-ScreenSpaceReflections-URP</h3>\n<p><a href=\"https://github.com/JoshuaLim007/Unity-ScreenSpaceReflections-URP\">JoshuaLim007/Unity-ScreenSpaceReflections-URP: SSR solution for Unity URP</a></p>\n<p>URPでのSSR（ScreenSpaceReflections）実装。</p>\n<h3 id=\"unity-bounding-volume-heirachy\" style=\"position:relative;\"><a href=\"#unity-bounding-volume-heirachy\" aria-label=\"unity bounding volume heirachy permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Bounding Volume Heirachy</h3>\n<p><a href=\"https://github.com/rossborchers/UnityBoundingVolumeHeirachy\">rossborchers/UnityBoundingVolumeHeirachy: Unity Bounding Volume Heirachy (BVH)</a></p>\n<p>Unityで利用できるBVH（Bounding Volume Heirachy）実装。</p>","excerpt":"Unity Officials Runtime authoring in projects using ECS for Unity Runtime authoring in projects using ECS for Unity | Unity Blog ECS for Unity でのオーサリングデータとランタイムデータの二重性を管理するためのData Modesというパターンやエディター環境、ワークフローについて紹介しています。 Bringing the social experience…","fields":{"slug":"/project/unity-weekly/114/"},"frontmatter":{"date":"March 27, 2023","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"Unity Weekly 114","description":"2023/03/27週のUnity Weeklyです。 ECS、UGS、Memory Profiler、PRINCIPLES、Anime Toolboxなどについてまとめています。","eyecatch":null}}},"pageContext":{"id":"0542685a-4c23-5b3a-a037-7ed7fbe49a39"}},"staticQueryHashes":["1480509143","3159585216"]}