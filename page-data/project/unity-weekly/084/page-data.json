{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/084/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"unity-officials\" style=\"position:relative;\"><a href=\"#unity-officials\" aria-label=\"unity officials permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Officials</h2>\n<h3 id=\"pixyz-202213d-データ処理ワークフロー全体の改善\" style=\"position:relative;\"><a href=\"#pixyz-202213d-%E3%83%87%E3%83%BC%E3%82%BF%E5%87%A6%E7%90%86%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC%E5%85%A8%E4%BD%93%E3%81%AE%E6%94%B9%E5%96%84\" aria-label=\"pixyz 202213d データ処理ワークフロー全体の改善 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pixyz 2022.1：3D データ処理ワークフロー全体の改善</h3>\n<p><a href=\"https://blog.unity.com/ja/manufacturing/pixyz-20221-improvements-across-3d-data-processing-workflows\">Pixyz 2022.1：3D データ処理ワークフロー全体の改善 | Unity Blog</a></p>\n<p>Pixyzの2022.1のアップデートについてまとめています。</p>\n<p>Autodesk Navisworks形式インポートのサポート、PVZ形式のファイルのサポート、Pixyzで処理されたモデルをエディターに取り込む際に3DモデルをUnityプレハブとしてエクスポートするようにする対応、インポートのパフォーマンス改善、Pixyz ReviewとPixyz Studioのアップデートなどについてそれぞれまとめています。</p>\n<h3 id=\"パストレ時間が超短縮デノイザを使ってみよう\" style=\"position:relative;\"><a href=\"#%E3%83%91%E3%82%B9%E3%83%88%E3%83%AC%E6%99%82%E9%96%93%E3%81%8C%E8%B6%85%E7%9F%AD%E7%B8%AE%E3%83%87%E3%83%8E%E3%82%A4%E3%82%B6%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\" aria-label=\"パストレ時間が超短縮デノイザを使ってみよう permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>パストレ時間が超短縮！デノイザを使ってみよう</h3>\n<p><a href=\"https://www.youtube.com/watch?v=qeEBbkLEynM\">【Unity/HDRP】パストレ時間が超短縮！デノイザを使ってみよう - YouTube</a></p>\n<p>Unity 2022.2以降で利用できる、HDRP（High Definition Render Pipeline）のパストレーシングのデノイズフィルターについて紹介しています。</p>\n<p>搭載されてたデノイズフィルターの種類の紹介、パストレーシングのレンダリング画像にデノイザを適用することでどのように見た目が変化するかなどについて解説しています。</p>\n<h3 id=\"rendermesh-api-で大量のオブジェクトを描画してみよう\" style=\"position:relative;\"><a href=\"#rendermesh-api-%E3%81%A7%E5%A4%A7%E9%87%8F%E3%81%AE%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E6%8F%8F%E7%94%BB%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\" aria-label=\"rendermesh api で大量のオブジェクトを描画してみよう permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RenderMesh API で大量のオブジェクトを描画してみよう</h3>\n<p><a href=\"https://www.youtube.com/watch?v=d6i9hvJ-xcM\">【Unity】RenderMesh API で大量のオブジェクトを描画してみよう - YouTube</a></p>\n<p>Unityで大量のオブジェクトを描画する際に利用できる <code>Graphics.RenderMesh</code> メソッドについて紹介しています。</p>\n<p><code>Graphics.RenderMesh</code> の基本的な使い方やインスタンス描画をサポートした <code>Graphics.RenderMeshInstanced</code> の使い方、それぞれの手法でのパフォーマンス比較、 <code>Graphics.RenderMeshInstanced</code> を用いた場合のデメリットとしてカリングの粒度、使い分けの方針について、それぞれまとめています。</p>\n<h2 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h2>\n<h3 id=\"パフォーマンス情報をグラフィカルに可視化できるossgraphy紹介\" style=\"position:relative;\"><a href=\"#%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9%E6%83%85%E5%A0%B1%E3%82%92%E3%82%B0%E3%83%A9%E3%83%95%E3%82%A3%E3%82%AB%E3%83%AB%E3%81%AB%E5%8F%AF%E8%A6%96%E5%8C%96%E3%81%A7%E3%81%8D%E3%82%8Bossgraphy%E7%B4%B9%E4%BB%8B\" aria-label=\"パフォーマンス情報をグラフィカルに可視化できるossgraphy紹介 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>パフォーマンス情報をグラフィカルに可視化できるOSS『Graphy』紹介</h3>\n<p><a href=\"https://light11.hatenadiary.com/entry/2022/09/05/193916\">【Unity】パフォーマンス情報をグラフィカルに可視化できるOSS『Graphy』紹介 - LIGHT11</a></p>\n<p>FPSやメモリ使用量などをランタイムで確認するためのOSS「<a href=\"https://github.com/Tayx94/graphy\">Graphy</a>」の基本的な使い方について紹介しています。</p>\n<h3 id=\"accessing-ibufferelementdata-elements-in-a-job-struct\" style=\"position:relative;\"><a href=\"#accessing-ibufferelementdata-elements-in-a-job-struct\" aria-label=\"accessing ibufferelementdata elements in a job struct permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessing IBufferElementData elements in a job struct</h3>\n<p><a href=\"https://coffeebraingames.wordpress.com/2022/08/30/accessing-ibufferelementdata-elements-in-a-job-struct/\">Accessing IBufferElementData elements in a job struct – COFFEE BRAIN GAMES</a></p>\n<p><code>IBufferElementData</code> を実装するジョブ構造体の扱い方について、 <code>IComponentData</code> との利用方法の違いなどに触れつつ解説しています。</p>\n<h3 id=\"ツカサ式スタック型ステートマシンの紹介ゲーム向きのステートマシン実装\" style=\"position:relative;\"><a href=\"#%E3%83%84%E3%82%AB%E3%82%B5%E5%BC%8F%E3%82%B9%E3%82%BF%E3%83%83%E3%82%AF%E5%9E%8B%E3%82%B9%E3%83%86%E3%83%BC%E3%83%88%E3%83%9E%E3%82%B7%E3%83%B3%E3%81%AE%E7%B4%B9%E4%BB%8B%E3%82%B2%E3%83%BC%E3%83%A0%E5%90%91%E3%81%8D%E3%81%AE%E3%82%B9%E3%83%86%E3%83%BC%E3%83%88%E3%83%9E%E3%82%B7%E3%83%B3%E5%AE%9F%E8%A3%85\" aria-label=\"ツカサ式スタック型ステートマシンの紹介ゲーム向きのステートマシン実装 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ツカサ式スタック型ステートマシンの紹介（ゲーム向きのステートマシン実装）</h3>\n<p><a href=\"https://someiyoshino.info/entry/2022/09/01/200643?utm_source=feed\">#unity ツカサ式スタック型ステートマシンの紹介（ゲーム向きのステートマシン実装） - 土屋つかさの技術ブログは今か無しか</a></p>\n<p>ブログ著者が利用している独自のスタック型ステートマシン「<a href=\"https://github.com/t-tutiya/T2sFSM\">T2sFSM</a>」について紹介しています。</p>\n<p>基本的な使い方、ステートの組み方をサンプルコードを交えつつ解説しています。</p>\n<h3 id=\"unityのbuildsettingsウィンドウの表記とスクリプティングapiの対応を纏めましたunity-202130f1\" style=\"position:relative;\"><a href=\"#unity%E3%81%AEbuildsettings%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%81%AE%E8%A1%A8%E8%A8%98%E3%81%A8%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0api%E3%81%AE%E5%AF%BE%E5%BF%9C%E3%82%92%E7%BA%8F%E3%82%81%E3%81%BE%E3%81%97%E3%81%9Funity-202130f1\" aria-label=\"unityのbuildsettingsウィンドウの表記とスクリプティングapiの対応を纏めましたunity 202130f1 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UnityのBuildSettingsウィンドウの表記とスクリプティングAPIの対応を纏めました（Unity 2021.3.0f1）</h3>\n<p><a href=\"https://synamon.hatenablog.com/entry/2022/09/01/171256\">UnityのBuildSettingsウィンドウの表記とスクリプティングAPIの対応を纏めました（Unity 2021.3.0f1） - Synamon’s Engineer blog</a></p>\n<p>Unityの Build Settings ウインドウで設定できる項目を、コードで更新するためのAPIについて纏めています。</p>\n<h3 id=\"unityurp物理カメラカメラについて解説\" style=\"position:relative;\"><a href=\"#unityurp%E7%89%A9%E7%90%86%E3%82%AB%E3%83%A1%E3%83%A9%E3%82%AB%E3%83%A1%E3%83%A9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E8%A7%A3%E8%AA%AC\" aria-label=\"unityurp物理カメラカメラについて解説 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>【Unity】【URP】【物理カメラ】カメラについて解説</h3>\n<p><a href=\"https://ny-program.hatenablog.com/entry/2022/09/01/103130\">【Unity】【URP】【物理カメラ】カメラについて解説 - シェーダーTips</a></p>\n<p>URP（Universal Render Pipeline）を利用すると <code>Camera</code> コンポーネントにアタッチされる <code>UniversalAdditionalCameraData</code> の各種設定項目について解説しています。</p>\n<h3 id=\"ゲームのライブ配信画面上で視聴者がステージを作って配信者に送れるシステムの構築\" style=\"position:relative;\"><a href=\"#%E3%82%B2%E3%83%BC%E3%83%A0%E3%81%AE%E3%83%A9%E3%82%A4%E3%83%96%E9%85%8D%E4%BF%A1%E7%94%BB%E9%9D%A2%E4%B8%8A%E3%81%A7%E8%A6%96%E8%81%B4%E8%80%85%E3%81%8C%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E9%85%8D%E4%BF%A1%E8%80%85%E3%81%AB%E9%80%81%E3%82%8C%E3%82%8B%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E6%A7%8B%E7%AF%89\" aria-label=\"ゲームのライブ配信画面上で視聴者がステージを作って配信者に送れるシステムの構築 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ゲームのライブ配信画面上で視聴者がステージを作って配信者に送れるシステムの構築</h3>\n<p><a href=\"https://qiita.com/Takaaki_Ichijo/items/feb8c4ca902f72c66cc3\">ゲームのライブ配信画面上で視聴者がステージを作って配信者に送れるシステムの構築 - Qiita</a></p>\n<p>Twitch ExtensionsとGenvidを用いて、ライブ配信で視聴者がゲームのステージを構築して配信者にプレイしてもらうようなシステムを構築する方法について紹介しています。</p>\n<p>構築するシステムの全体像から視聴者側の実装（ブラウザ側の実装）、配信者のゲーム側の実装（Unity側の実装）などについてそれぞれ解説しています。</p>\n<h3 id=\"repositories\" style=\"position:relative;\"><a href=\"#repositories\" aria-label=\"repositories permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repositories</h3>\n<h3 id=\"voxtovfx\" style=\"position:relative;\"><a href=\"#voxtovfx\" aria-label=\"voxtovfx permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VoxToVFX</h3>\n<p><a href=\"https://github.com/Zarbuz/VoxToVFX\">Zarbuz/VoxToVFX: Import a MagicaVoxel project to Unity using the new VFX Graph</a></p>\n<p>MagicaVoxelプロジェクトをUnityにVFX Graphとしてインポートするツール。</p>\n<p>メッシュを作らないので巨大な空間のインポートが短時間で完了する、全ボクセルはGPU上でパーティクルとしてレンダリングされるなどの特徴があります。</p>\n<h3 id=\"better-streaming-assets\" style=\"position:relative;\"><a href=\"#better-streaming-assets\" aria-label=\"better streaming assets permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Better Streaming Assets</h3>\n<p><a href=\"https://github.com/gwiazdorrr/BetterStreamingAssets\">gwiazdorrr/BetterStreamingAssets: A plugin for Unity that lets you access Streaming Assets directly on Android.</a></p>\n<p>Androidデバイズ上でStreaming Assetsに直接アクセスするためのより便利で、オーバーヘッドの少ないAPIを提供します。</p>\n<p>AndroidでStreaming Assetsにアクセスするには、WWWクラスを介してアクセスするなどの実装が必要ですがこのライブラリではそれらの実装を隠蔽しています。また <code>System.IO.File</code> や <code>System.IO.Directory</code> クラスをベースに、よりC#ライクなAPIを提供しています。</p>\n<h3 id=\"unity-behaviour-tree-visualizer\" style=\"position:relative;\"><a href=\"#unity-behaviour-tree-visualizer\" aria-label=\"unity behaviour tree visualizer permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Behaviour Tree Visualizer</h3>\n<p><a href=\"https://github.com/Yecats/UnityBehaviorTreeVisualizer\">Yecats/UnityBehaviorTreeVisualizer: A tool built in Unity that draws a graph representation of behavior trees running in the scene</a></p>\n<p>Behaviour Treeの実装と、そのビジュアライザー。ビジュアライザーは、Behaviour Treeの各ノードの可視化だけでなく、現在実行中のハイライトやノードの変数などの情報などについても可視化しています。</p>\n<h3 id=\"bakeshader\" style=\"position:relative;\"><a href=\"#bakeshader\" aria-label=\"bakeshader permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BakeShader</h3>\n<p><a href=\"https://github.com/Cyanilux/BakeShader\">Cyanilux/BakeShader: Unity editor tool for baking shaders to textures. Blit2D, Blit3D, or MeshRenderer (uses model UV). Adds options to Material &#x26; MeshRenderer context menus and Editor Window (under Window/Cyanilux/BakeShader)</a></p>\n<p>シェーダーの描画情報をテクスチャにベイクするためのUnityエディターツール。</p>\n<h3 id=\"unityplayablegraphmonitortool\" style=\"position:relative;\"><a href=\"#unityplayablegraphmonitortool\" aria-label=\"unityplayablegraphmonitortool permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UnityPlayableGraphMonitorTool</h3>\n<p><a href=\"https://github.com/SolarianZ/UnityPlayableGraphMonitorTool\">SolarianZ/UnityPlayableGraphMonitorTool: PlayableGraph monitor tool inspired by PlayableGraph Visualizer and implemented in UIElements.</a></p>\n<p><a href=\"https://github.com/Unity-Technologies/graph-visualizer\">PlayableGraph Visualizer</a>のような PlayableGraphのモニタリングツール。UIElements製。</p>\n<p>本家のPlayableGraph Visualizerにない機能として、グラフビューのズーム・ドラッグなどがあります。</p>\n<h3 id=\"build-report-inspector-for-unity\" style=\"position:relative;\"><a href=\"#build-report-inspector-for-unity\" aria-label=\"build report inspector for unity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build Report Inspector for Unity</h3>\n<p><a href=\"https://github.com/Unity-Technologies/BuildReportInspector\">Unity-Technologies/BuildReportInspector: Editor script which implements an inspector for the BuildReport class</a></p>\n<p>Unityのビルド時に出力する <code>BuildReport</code> クラスをわかりやすく可視化するインスペクター実装。</p>","excerpt":"Unity Officials Pixyz 2022.1：3D データ処理ワークフロー全体の改善 Pixyz 2022.1：3D データ処理ワークフロー全体の改善 | Unity Blog Pixyzの2022.1のアップデートについてまとめています。 Autodesk Navisworks形式インポートのサポート、PVZ形式のファイルのサポート、Pixyzで処理されたモデルをエディターに取り込む際に3DモデルをUnity…","fields":{"slug":"/project/unity-weekly/084/"},"frontmatter":{"date":"September 05, 2022","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"デノイズフィルター、RendererMesh API、Pixyz 2022.1 Update - Unity Weekly #084","description":"2022/09/05週のUnity Weeklyです。デノイズフィルター、RendererMesh API、Pixyz 2022.1 Updateなどについてまとめています。","eyecatch":null}}},"pageContext":{"id":"4917d163-263f-55d8-b10a-f26486605f9a"}},"staticQueryHashes":["1480509143","3159585216"]}