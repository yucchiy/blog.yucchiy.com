{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/193/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"unity-officials\" style=\"position:relative;\"><a href=\"#unity-officials\" aria-label=\"unity officials permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Officials</h2>\n<h3 id=\"unified-rendering---unity-engine---unity-discussions\" style=\"position:relative;\"><a href=\"#unified-rendering---unity-engine---unity-discussions\" aria-label=\"unified rendering   unity engine   unity discussions permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unified Rendering - Unity Engine - Unity Discussions</h3>\n<p><a href=\"https://discussions.unity.com/t/unified-rendering/1519264\">Unified Rendering - Unity Engine - Unity Discussions</a></p>\n<p>Unite2024のUnityEngineロードマップで発表された「Unified Rendering」についてのスレッドがUnity Disscussionsに立てられました。</p>\n<p>「Unified Rendering」が立ち上がった背景や課題感、Unity6以降での移行計画などのついて紹介しています。</p>\n<h3 id=\"urp-alphabypass\" style=\"position:relative;\"><a href=\"#urp-alphabypass\" aria-label=\"urp alphabypass permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URP-AlphaBypass</h3>\n<p><a href=\"https://github.com/keijiro/URP-AlphaBypass\">keijiro/URP-AlphaBypass: Alpha preserving feature for Unity URP</a></p>\n<p>カラーターゲットのアルファチャンネルをポストプロセスパスにより上書きされるのを防ぐためのURPサンプルプロジェクト</p>\n<h2 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h2>\n<h3 id=\"崩壊スターレイルのキャラクターレンダリング再現\" style=\"position:relative;\"><a href=\"#%E5%B4%A9%E5%A3%8A%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%AC%E3%82%A4%E3%83%AB%E3%81%AE%E3%82%AD%E3%83%A3%E3%83%A9%E3%82%AF%E3%82%BF%E3%83%BC%E3%83%AC%E3%83%B3%E3%83%80%E3%83%AA%E3%83%B3%E3%82%B0%E5%86%8D%E7%8F%BE\" aria-label=\"崩壊スターレイルのキャラクターレンダリング再現 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>崩壊スターレイルのキャラクターレンダリング再現</h3>\n<p><a href=\"https://qiita.com/metaaa/items/c8968257e40dcfb7d0d8\">[Unity]崩壊スターレイルのキャラクターレンダリング再現 #Shader - Qiita</a></p>\n<p>lilToolShaderをベースに、「崩壊スターレイル」のグラフィックを再現するための顔の影の制御やセルフシャドウ、眉やアウトラインの描画の制御について解説しています。</p>\n<h3 id=\"オブジェクト大量描画のスタート地点に立とう\" style=\"position:relative;\"><a href=\"#%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E5%A4%A7%E9%87%8F%E6%8F%8F%E7%94%BB%E3%81%AE%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%88%E5%9C%B0%E7%82%B9%E3%81%AB%E7%AB%8B%E3%81%A8%E3%81%86\" aria-label=\"オブジェクト大量描画のスタート地点に立とう permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>オブジェクト大量描画のスタート地点に立とう</h3>\n<p><a href=\"https://zenn.dev/nigiri/articles/a94a92a3f50a2f\">【Unity】オブジェクト大量描画のスタート地点に立とう</a></p>\n<p>Unityで大量のオブジェクトを描画するテクニックを、<code>Graphics.DrawXXX</code>と<code>Grahics.RenderXXX</code>APIの違いから<code>Grahics.DrawMeshInstanced</code>の基本的な使い方、ComputeShaderの組み合わせ方まで解説しています。</p>\n<h3 id=\"enumを簡単にstringとしてシリアライズできるパッケージ作りました\" style=\"position:relative;\"><a href=\"#enum%E3%82%92%E7%B0%A1%E5%8D%98%E3%81%ABstring%E3%81%A8%E3%81%97%E3%81%A6%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%A9%E3%82%A4%E3%82%BA%E3%81%A7%E3%81%8D%E3%82%8B%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E4%BD%9C%E3%82%8A%E3%81%BE%E3%81%97%E3%81%9F\" aria-label=\"enumを簡単にstringとしてシリアライズできるパッケージ作りました permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enumを簡単にStringとしてシリアライズできるパッケージ作りました</h3>\n<p><a href=\"https://blog.kyubuns.dev/entry/2024/10/06/115505\">Enumを簡単にStringとしてシリアライズできるパッケージ作りました - きゅぶろぐ</a></p>\n<p>ブログ著者が開発しているEnumをStringとしてシリアライズできる「<a href=\"https://github.com/kyubuns/StringSerializableEnum\">StringSerializableEnum</a>」について紹介しています。</p>\n<h3 id=\"yetanotherhttphandlerを用いてhttp2を扱えるhttpclientを作成する\" style=\"position:relative;\"><a href=\"#yetanotherhttphandler%E3%82%92%E7%94%A8%E3%81%84%E3%81%A6http2%E3%82%92%E6%89%B1%E3%81%88%E3%82%8Bhttpclient%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\" aria-label=\"yetanotherhttphandlerを用いてhttp2を扱えるhttpclientを作成する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>YetAnotherHttpHandlerを用いてHTTP/2を扱えるHttpClientを作成する</h3>\n<p><a href=\"https://www.hanachiru-blog.com/entry/2024/10/03/120000\">【Unity】YetAnotherHttpHandlerを用いてHTTP/2を扱えるHttpClientを作成する - はなちるのマイノート</a></p>\n<p>YetAnotherHttpHandlerを用いてUnityでHTTP/2通信を行う方法について紹介しています。</p>\n<h3 id=\"ちょっとだけコードをきれいにする簡単なtips\" style=\"position:relative;\"><a href=\"#%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E3%81%A0%E3%81%91%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E3%81%8D%E3%82%8C%E3%81%84%E3%81%AB%E3%81%99%E3%82%8B%E7%B0%A1%E5%8D%98%E3%81%AAtips\" aria-label=\"ちょっとだけコードをきれいにする簡単なtips permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ちょっとだけコードをきれいにする簡単なTips</h3>\n<p><a href=\"https://zenn.dev/qemel/articles/70eb6255cab5d9\">ちょっとだけコードをきれいにする簡単なTips in Unity C#</a></p>\n<p>コードの可読性や保守性を高めるためのTipsをいくつか紹介しています。</p>\n<h3 id=\"record-classrecord-structreadonly-record-structがどういう実装になるのかsharplabでデコンパイルして覗いてみる\" style=\"position:relative;\"><a href=\"#record-classrecord-structreadonly-record-struct%E3%81%8C%E3%81%A9%E3%81%86%E3%81%84%E3%81%86%E5%AE%9F%E8%A3%85%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%AE%E3%81%8Bsharplab%E3%81%A7%E3%83%87%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E3%81%97%E3%81%A6%E8%A6%97%E3%81%84%E3%81%A6%E3%81%BF%E3%82%8B\" aria-label=\"record classrecord structreadonly record structがどういう実装になるのかsharplabでデコンパイルして覗いてみる permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>record (class)・record struct・readonly record structがどういう実装になるのかSharpLabでデコンパイルして覗いてみる</h3>\n<p><a href=\"https://www.hanachiru-blog.com/entry/2024/09/30/120000\">【C#】record (class)・record struct・readonly record structがどういう実装になるのかSharpLabでデコンパイルして覗いてみる - はなちるのマイノート</a></p>\n<p>C#の<code>record</code>や<code>record struct</code>などが、どのようなコードとして展開されるのかを、SharpLabのデコンパイル結果を確認しながら解説しています。</p>","excerpt":"Unity Officials Unified Rendering - Unity Engine - Unity Discussions Unified Rendering - Unity Engine - Unity Discussions Unite2024のUnityEngineロードマップで発表された「Unified Rendering」についてのスレッドがUnity Disscussionsに立てられました。 「Unified Rendering」が立ち上がった背景や課題感、Unity…","fields":{"slug":"/project/unity-weekly/193/"},"frontmatter":{"date":"October 07, 2024","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"Unity Weekly 193","description":"2024/10/07週のUnity Weeklyです。Unified Rendering、URP-AlphaBypassなどについて取り上げています。","eyecatch":null}}},"pageContext":{"id":"52855b66-75bb-5649-a295-43cce9ca18fe"}},"staticQueryHashes":["1480509143","3159585216"]}