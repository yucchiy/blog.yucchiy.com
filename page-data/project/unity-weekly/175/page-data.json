{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/175/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"unity-officials\" style=\"position:relative;\"><a href=\"#unity-officials\" aria-label=\"unity officials permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Officials</h2>\n<h3 id=\"unity-shader-variants-optimization-and-troubleshooting\" style=\"position:relative;\"><a href=\"#unity-shader-variants-optimization-and-troubleshooting\" aria-label=\"unity shader variants optimization and troubleshooting permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity shader variants optimization and troubleshooting</h3>\n<p><a href=\"https://blog.unity.com/engine-platform/shader-variants-optimization-troubleshooting-tips\">Unity shader variants optimization and troubleshooting | Unity Blog</a></p>\n<p>シェーダーバリアントの最適化とトラブルシューティングとして、生成・利用されているシェーダーバリアントの確認方法や設定やグラフィックスAPI、スクリプト経由でバリアントをストリッピングする方法などのについてそれぞれ紹介しています。</p>\n<h3 id=\"understanding-dots-advanced-developer-e-book-and-guide\" style=\"position:relative;\"><a href=\"#understanding-dots-advanced-developer-e-book-and-guide\" aria-label=\"understanding dots advanced developer e book and guide permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Understanding DOTS: Advanced developer e-book and Guide</h3>\n<p><a href=\"https://blog.unity.com/engine-platform/new-ebook-understanding-unity-dots\">Understanding DOTS: Advanced developer e-book and Guide | Unity Blog</a></p>\n<p>Unity公式が、DOTSについての電子書籍「<a href=\"https://unity.com/ja/resources/introduction-to-dots-ebook\">Introduction to the Data-Oriented Technology Stack</a>」を公開しました。</p>\n<p>この記事では、この電子書籍の概要とDOTSのパフォーマンスについて紹介しています。</p>\n<h3 id=\"students-get-odin-inspector-and-validator-for-free-with-unity\" style=\"position:relative;\"><a href=\"#students-get-odin-inspector-and-validator-for-free-with-unity\" aria-label=\"students get odin inspector and validator for free with unity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Students Get Odin Inspector and Validator for Free with Unity</h3>\n<p><a href=\"https://blog.unity.com/games/odin-inspector-validator-free-unity-student-plan\">Students Get Odin Inspector and Validator for Free with Unity | Unity Blog</a></p>\n<p>Unity Student Planの一環として、Odin InspectorとOdin Validatorが無料で提供されることが発表されました。</p>\n<h2 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h2>\n<h3 id=\"ビルドログから理解するシェーダーストリッピング\" style=\"position:relative;\"><a href=\"#%E3%83%93%E3%83%AB%E3%83%89%E3%83%AD%E3%82%B0%E3%81%8B%E3%82%89%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B%E3%82%B7%E3%82%A7%E3%83%BC%E3%83%80%E3%83%BC%E3%82%B9%E3%83%88%E3%83%AA%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0\" aria-label=\"ビルドログから理解するシェーダーストリッピング permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ビルドログから理解するシェーダーストリッピング</h3>\n<p><a href=\"https://zenn.dev/r_ngtm/articles/unity-shaderstripping\">【Unity / URP14】ビルドログから理解するシェーダーストリッピング【シェーダーバリアント】</a></p>\n<p>URP14環境で、シェーダーバリアントをビルド時のログから確認する方法から<code>shader_feature</code>と<code>multi_compile</code>の違いやこれらが混在する場合の挙動の検証、シェーダーバリアントのストリッピングの確認方法、<code>IPreprocessShaders</code> によるスクリプト経由でのストリッピング方法、URP14から使えるストリッピング挙動をカスタマイズする <code>IShaderVariantStripper</code> などについてそれぞれ解説しています。</p>\n<h3 id=\"boost-unity-game-performance-with-il2cpp_use_sparsehash\" style=\"position:relative;\"><a href=\"#boost-unity-game-performance-with-il2cpp_use_sparsehash\" aria-label=\"boost unity game performance with il2cpp_use_sparsehash permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boost Unity Game Performance With IL2CPP_USE_SPARSEHASH</h3>\n<p><a href=\"https://gamedev.center/instantly-boost-unity-game-performance-with-il2cpp_use_sparsehash/\">Boost Unity Game Performance With IL2CPP_USE_SPARSEHASH</a></p>\n<p>il2cppのメタデータのメモリ上での保存方法と、その保存に使われるデータ構造を <code>IL2CPP_USE_SPARSEHASH</code> に <code>0</code> を設定することで密なハッシュマップを用いてパフォーマンス向上を見込めること、デフォルトで利用される疎なハッシュマップとのパフォーマンスの比較について紹介しています。</p>\n<h3 id=\"ホロライブアプリでのaddressable-assetsystem活用事例\" style=\"position:relative;\"><a href=\"#%E3%83%9B%E3%83%AD%E3%83%A9%E3%82%A4%E3%83%96%E3%82%A2%E3%83%97%E3%83%AA%E3%81%A7%E3%81%AEaddressable-assetsystem%E6%B4%BB%E7%94%A8%E4%BA%8B%E4%BE%8B\" aria-label=\"ホロライブアプリでのaddressable assetsystem活用事例 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ホロライブアプリでのAddressable AssetSystem活用事例</h3>\n<p><a href=\"https://note.cover-corp.com/n/nba3cbd32f74f\">ホロライブアプリでのAddressable AssetSystem活用事例｜カバー株式会社　公式note</a></p>\n<p>ホロライブアプリでのAddressablesとScriptable Build Pipelineの導入事例について紹介しています。</p>\n<h3 id=\"unityのdi超ざっくり入門\" style=\"position:relative;\"><a href=\"#unity%E3%81%AEdi%E8%B6%85%E3%81%96%E3%81%A3%E3%81%8F%E3%82%8A%E5%85%A5%E9%96%80\" aria-label=\"unityのdi超ざっくり入門 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UnityのDI超ざっくり入門</h3>\n<ul>\n<li><a href=\"https://zenn.dev/qemel/articles/ad6cf484d8280a\">UnityのDI超ざっくり入門 1 - そもそもUnityのDIって何？</a></li>\n<li><a href=\"https://zenn.dev/qemel/articles/4a032e10b3629c\">UnityのDI超ざっくり入門 2 - [SerializeField]とコンストラクタでPureC#込みのゲーム設計をする</a></li>\n<li><a href=\"https://zenn.dev/qemel/articles/14d247b9945527\">UnityのDI超ざっくり入門 3 - VContainerを使ってみる</a></li>\n</ul>\n<p>Unity上でのDI（Dependency Injection）の基本的な概念やメリットの説明から、簡単なDIのスクラッチ実装、実装した仕組みをVContainerで置き換える方法についてそれぞれ紹介しています。</p>\n<h3 id=\"unity-shader-graph-basics-part-9---scene-intersections-2\" style=\"position:relative;\"><a href=\"#unity-shader-graph-basics-part-9---scene-intersections-2\" aria-label=\"unity shader graph basics part 9   scene intersections 2 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Shader Graph Basics (Part 9 - Scene Intersections 2)</h3>\n<p><a href=\"https://danielilett.com/2024-05-28-tut7-13-intro-to-shader-graph-part-9/\">Unity Shader Graph Basics (Part 9 - Scene Intersections 2)</a></p>\n<p><a href=\"https://danielilett.com/2024-05-21-tut7-12-intro-to-shader-graph-part-8/\">Unity Shader Graph Basics (Part 8 - Scene Intersections 1)</a>の続きで、シーン上の他オブジェクトとの交差を用いたウェーブフォームとエッジグローエフェクトを実装する方法について紹介しています。</p>\n<h3 id=\"observablecollectionsobservabledictionaryをreadonlyにしたい\" style=\"position:relative;\"><a href=\"#observablecollectionsobservabledictionary%E3%82%92readonly%E3%81%AB%E3%81%97%E3%81%9F%E3%81%84\" aria-label=\"observablecollectionsobservabledictionaryをreadonlyにしたい permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ObservableCollections.ObservableDictionaryをReadonlyにしたい</h3>\n<p><a href=\"https://qiita.com/toRisouP/items/c8d5e2cbe9a4dae4bbb8\">ObservableCollections.ObservableDictionaryをReadonlyにしたい #C# - Qiita</a></p>\n<p>Cysharpの提供する<a href=\"https://github.com/Cysharp/ObservableCollections\">ObservableCollections</a>の <code>ObservableDictionary</code> をReadOnlyとして提供するラッパークラスの実装を紹介しています。</p>\n<h3 id=\"ui-toolkitスクロール位置などビューに関わるデータを保存するview-dataの使い方\" style=\"position:relative;\"><a href=\"#ui-toolkit%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E4%BD%8D%E7%BD%AE%E3%81%AA%E3%81%A9%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AB%E9%96%A2%E3%82%8F%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E4%BF%9D%E5%AD%98%E3%81%99%E3%82%8Bview-data%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\" aria-label=\"ui toolkitスクロール位置などビューに関わるデータを保存するview dataの使い方 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>【UI Toolkit】スクロール位置などビューに関わるデータを保存するView Dataの使い方</h3>\n<p><a href=\"https://light11.hatenadiary.com/entry/2024/05/22/193751\">【Unity】【UI Toolkit】スクロール位置などビューに関わるデータを保存するView Dataの使い方 - LIGHT11</a></p>\n<p>UI ToolkitのView Dataの使い方と、これを用いて <code>ScrollView</code> のスクロール位置を永続化する方法について紹介しています。</p>\n<h3 id=\"unity-tutorial-fake-cloud-shadows\" style=\"position:relative;\"><a href=\"#unity-tutorial-fake-cloud-shadows\" aria-label=\"unity tutorial fake cloud shadows permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Tutorial: Fake Cloud Shadows</h3>\n<p><a href=\"https://mirzabeig.substack.com/p/unity-tutorial-fake-cloud-shadows\">Unity Tutorial: Fake Cloud Shadows</a></p>\n<p>簡単なフェイククラウドシャドウを実現する方法について紹介しています。</p>","excerpt":"Unity Officials Unity shader variants optimization and troubleshooting Unity shader variants optimization and troubleshooting | Unity Blog シェーダーバリアントの最適化とトラブルシューティングとして、生成・利用されているシェーダーバリアントの確認方法や設定やグラフィックスAPI…","fields":{"slug":"/project/unity-weekly/175/"},"frontmatter":{"date":"June 03, 2024","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"Unity Weekly 175","description":"2024/06/03週のUnity Weeklyです。Shader variants optimization and troubleshooting、DOTS e-book、Odin Inspector & Validator Student planなどについて取り上げています。","eyecatch":null}}},"pageContext":{"id":"a67f885a-29dd-5eb0-a7d6-c59eaf7d89e0"}},"staticQueryHashes":["1480509143","3159585216"]}