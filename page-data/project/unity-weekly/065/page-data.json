{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/065/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"unity-official\" style=\"position:relative;\"><a href=\"#unity-official\" aria-label=\"unity official permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Official</h1>\n<h2 id=\"luaと自作ビューアで作り込んだヘブンバーンズレッドの裏側unityの拡張性を活かすwright-flyer-studiosの開発メソッド\" style=\"position:relative;\"><a href=\"#lua%E3%81%A8%E8%87%AA%E4%BD%9C%E3%83%93%E3%83%A5%E3%83%BC%E3%82%A2%E3%81%A7%E4%BD%9C%E3%82%8A%E8%BE%BC%E3%82%93%E3%81%A0%E3%83%98%E3%83%96%E3%83%B3%E3%83%90%E3%83%BC%E3%83%B3%E3%82%BA%E3%83%AC%E3%83%83%E3%83%89%E3%81%AE%E8%A3%8F%E5%81%B4unity%E3%81%AE%E6%8B%A1%E5%BC%B5%E6%80%A7%E3%82%92%E6%B4%BB%E3%81%8B%E3%81%99wright-flyer-studios%E3%81%AE%E9%96%8B%E7%99%BA%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\" aria-label=\"luaと自作ビューアで作り込んだヘブンバーンズレッドの裏側unityの拡張性を活かすwright flyer studiosの開発メソッド permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Luaと自作ビューアで作り込んだ『ヘブンバーンズレッド』の裏側──Unityの拡張性を活かすWright Flyer Studiosの開発メソッド</h2>\n<p><a href=\"https://forpro.unity3d.jp/case_study/wright-flyer-studios/\">Luaと自作ビューアで作り込んだ『ヘブンバーンズレッド』の裏側──Unityの拡張性を活かすWright Flyer Studiosの開発メソッド – Unity for Pro</a></p>\n<p>Wright Flyer Studioが提供する「<a href=\"https://heaven-burns-red.com/\">ヘブンバーンズレッド</a>」についての開発者インタビュー記事です。</p>\n<p>本ゲームのプロトタイプ開発とUnity採用した理由としての拡張性の高さ、少ないデータ量でバリエーションを出すためのマルチシーン利用とフィールド編集ツール、ゲームシステム構築を支えるLuaとイテレーション高速化のための自作ビューワーなどについてそれぞれ解説しています。</p>\n<h2 id=\"ui-toolkitを導入して効率よくuiを構築する\" style=\"position:relative;\"><a href=\"#ui-toolkit%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%97%E3%81%A6%E5%8A%B9%E7%8E%87%E3%82%88%E3%81%8Fui%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%99%E3%82%8B\" aria-label=\"ui toolkitを導入して効率よくuiを構築する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UI ToolKitを導入して効率よくUIを構築する</h2>\n<p><a href=\"https://forpro.unity3d.jp/unity_pro_tips/2022/04/21/3629/\">UI ToolKitを導入して効率よくUIを構築する – Unity for Pro</a></p>\n<p>UI Toolkitを用いたUI構築についてuGUIでのUI実装と比較しつつ紹介しています。</p>\n<p>UI ToolkitがuGUIと比べてどのように違うのか、ウェブ（HTMLとCSS）でのUI構築を参照しつつ説明し、またUI Toolkitを導入するメリットとデメリットをuGUIによる構築と比較しつつ紹介しています。</p>\n<p>また、UI Toolkitを用いてどのようにUIを構築するのかを実装を踏まえながら紹介しつつ、uGUIの構築フローと比較しています。</p>\n<p>UI ToolkitとuGUIを共存させる方法についても言及しています。</p>\n<h2 id=\"unityとシェーダーグラフで簡単なポストエフェクトを作ってみよう\" style=\"position:relative;\"><a href=\"#unity%E3%81%A8%E3%82%B7%E3%82%A7%E3%83%BC%E3%83%80%E3%83%BC%E3%82%B0%E3%83%A9%E3%83%95%E3%81%A7%E7%B0%A1%E5%8D%98%E3%81%AA%E3%83%9D%E3%82%B9%E3%83%88%E3%82%A8%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86\" aria-label=\"unityとシェーダーグラフで簡単なポストエフェクトを作ってみよう permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unityとシェーダーグラフで簡単なポストエフェクトを作ってみよう！</h2>\n<p><a href=\"https://www.youtube.com/watch?v=AQGgwgo51lo\">Unityとシェーダーグラフで簡単なポストエフェクトを作ってみよう！（チュートリアル動画 #1） - YouTube</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=Ylq2y6Qez3s\">Unityとシェーダーグラフで凝ったポストエフェクトを作る！（チュートリアル動画 #2） - YouTube</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=E_oDKQU3e94&#x26;t=758s\">Unityとビジュアルスクリプトを使ってポストエフェクトを組み込んでみる！（チュートリアル動画 #3） - YouTube</a></p>\n<p>簡単なポストエフェクトをシェーダーグラフで実装する方法を紹介するチュートリアル動画シリーズです。</p>\n<p>簡単なポストエフェクト実装としてネガ（入力画像を反転させる）と二値化（入力画像を白黒にする）、もう少し凝った例としてアナログテレビにあるような走査線・歪みエフェクトの実装、ポストプロセスをビジュアルスクリプティング経由で呼び出す方法についてそれぞれ解説しています。</p>\n<h2 id=\"unity上で素材をサクッと作成metatexmetameshの紹介\" style=\"position:relative;\"><a href=\"#unity%E4%B8%8A%E3%81%A7%E7%B4%A0%E6%9D%90%E3%82%92%E3%82%B5%E3%82%AF%E3%83%83%E3%81%A8%E4%BD%9C%E6%88%90metatexmetamesh%E3%81%AE%E7%B4%B9%E4%BB%8B\" aria-label=\"unity上で素材をサクッと作成metatexmetameshの紹介 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity上で素材をサクッと作成！Metatex/Metameshの紹介</h2>\n<p><a href=\"https://www.youtube.com/watch?v=lemFm63bwSc\">Unity上で素材をサクッと作成！Metatex/Metameshの紹介 - YouTube</a></p>\n<p>UVCheckerやグラデーションテクスチャなどのテクスチャや、調整可能なプリミティブ形状などのメッシュをunity上で生成する<a href=\"https://github.com/keijiro/Metatex\">Metatex</a>と<a href=\"https://github.com/keijiro/Metamesh\">Metamesh</a>について紹介しています。</p>\n<p>MetatexとMetameshを使って、エフェクト素材などを作るアイデアやパラメーターなどにも言及しています。</p>\n<h1 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h1>\n<h2 id=\"unityの機能をawait可能にしてasync--awaitについて学ぶ\" style=\"position:relative;\"><a href=\"#unity%E3%81%AE%E6%A9%9F%E8%83%BD%E3%82%92await%E5%8F%AF%E8%83%BD%E3%81%AB%E3%81%97%E3%81%A6async--await%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E5%AD%A6%E3%81%B6\" aria-label=\"unityの機能をawait可能にしてasync  awaitについて学ぶ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unityの機能をawait可能にしてasync / awaitについて学ぶ</h2>\n<p><a href=\"https://zenn.dev/meson/articles/implement-awaiter-for-unity\">Unityの機能をawait可能にしてasync / awaitについて学ぶ</a></p>\n<p>C#のasync/awaitの処理メカニズムを、Unityの <code>UnityWebRequest</code> や <code>AsyncReadManager</code> をAwaitableしつつ解説しています。</p>\n<p>async/awaitのコンパイル後のコードを見ながら、非同期処理を実現するためのステートマシン <code>AsyncVoidMethodBuilder</code> 、 <code>Awaiter</code> の仕組みや <code>Awaiter</code> を自作するために必要な実装について解説しています。</p>\n<p>また、Unityの <code>UnityWebRequest</code> （具体的には <code>UnityWebRequestAsyncOperation</code> ）や <code>AsyncReadManager</code> を Awaitableにしつつ、自作のAwaitableを実装する方法についても紹介しています。</p>\n<h2 id=\"mirrativでのビジュアルスクリプティングbolt活用事例とテクニック\" style=\"position:relative;\"><a href=\"#mirrativ%E3%81%A7%E3%81%AE%E3%83%93%E3%82%B8%E3%83%A5%E3%82%A2%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0bolt%E6%B4%BB%E7%94%A8%E4%BA%8B%E4%BE%8B%E3%81%A8%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF\" aria-label=\"mirrativでのビジュアルスクリプティングbolt活用事例とテクニック permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mirrativでのビジュアルスクリプティング（Bolt）活用事例とテクニック</h2>\n<p><a href=\"https://tech.mirrativ.stream/entry/2022/04/18/180029\">Mirrativでのビジュアルスクリプティング（Bolt）活用事例とテクニック - Mirrativ Tech Blog</a></p>\n<p>ミラティブアプリ内で遊べるランゲームのBolt活用事例について紹介しています。</p>\n<p>Boltの特徴とゲーム開発に採用した経由、Boltを用いたゲーム開発の流れとC#・Bolt間の連携、トラブルシューティング（AOTプレビルドやUnitOption.dbの肥大化問題など）についてそれぞれ解説しています。</p>\n<h2 id=\"urpでカメラを分けずに任意のオブジェクトにポストプロセッシングをかける\" style=\"position:relative;\"><a href=\"#urp%E3%81%A7%E3%82%AB%E3%83%A1%E3%83%A9%E3%82%92%E5%88%86%E3%81%91%E3%81%9A%E3%81%AB%E4%BB%BB%E6%84%8F%E3%81%AE%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AB%E3%83%9D%E3%82%B9%E3%83%88%E3%83%97%E3%83%AD%E3%82%BB%E3%83%83%E3%82%B7%E3%83%B3%E3%82%B0%E3%82%92%E3%81%8B%E3%81%91%E3%82%8B\" aria-label=\"urpでカメラを分けずに任意のオブジェクトにポストプロセッシングをかける permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URPでカメラを分けずに任意のオブジェクトにポストプロセッシングをかける</h2>\n<p><a href=\"https://logicalbeat.jp/blog/10653/\">【Unity】URPでカメラを分けずに任意のオブジェクトにポストプロセッシングをかける – 株式会社ロジカルビート</a></p>\n<p>Universal Render Pipeline（URP）で追加のカメラを用意せずに、ステンシルバッファを用いて特定のオブジェクトのみにポストプロセッシングをかける方法を紹介しています。</p>\n<p>ステンシルバッファを用いて特定のオブジェクトのみにポストプロセッシングをかける仕組みと、 <code>ScriptableRenderPass</code> を用いてステンシルバッファ描画用のパスの追加、シェーダー内でのステンシルリファレンスの記述、カスタムエフェクトの描画処理分けの方法ついてそれぞれ解説しています。</p>\n<h2 id=\"realityの配信中に視聴者にメッセージを常に表示できる機能を支える技術\" style=\"position:relative;\"><a href=\"#reality%E3%81%AE%E9%85%8D%E4%BF%A1%E4%B8%AD%E3%81%AB%E8%A6%96%E8%81%B4%E8%80%85%E3%81%AB%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%82%92%E5%B8%B8%E3%81%AB%E8%A1%A8%E7%A4%BA%E3%81%A7%E3%81%8D%E3%82%8B%E6%A9%9F%E8%83%BD%E3%82%92%E6%94%AF%E3%81%88%E3%82%8B%E6%8A%80%E8%A1%93\" aria-label=\"realityの配信中に視聴者にメッセージを常に表示できる機能を支える技術 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REALITYの配信中に視聴者にメッセージを常に表示できる機能を支える技術</h2>\n<p><a href=\"https://note.com/reality_eng/n/n050393e31cc8\">REALITYの配信中に視聴者にメッセージを常に表示できる機能を支える技術｜REALITY｜note</a></p>\n<p>REALITYの配信ボードを開発する際の開発環境やUXを向上させる上での実装の工夫について紹介しています。</p>\n<p>マルチプレイテストをUnityEditor上で行うのに便利な、<a href=\"https://github.com/VeriorPies/ParrelSync\">ParrelSync</a>というアセットとこのアセットが複数のエディターを立ち上げるのデータの保存方法（特にユーザー認証情報など）やサーバー接続（同一IPからの接続になるため）の注意点の紹介、UX改善のためのドラッグ可能なuGUIコンポーネントの実装・InputFieldタップ時にOSキーボードを表示させる方法、可変サイズのInputFieldの実装方法などについて解説しています。</p>\n<h2 id=\"use-style-transitions-to-animate-a-menu-with-ui-toolkit\" style=\"position:relative;\"><a href=\"#use-style-transitions-to-animate-a-menu-with-ui-toolkit\" aria-label=\"use style transitions to animate a menu with ui toolkit permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use style transitions to animate a menu with UI Toolkit</h2>\n<p><a href=\"https://gamedev-resources.com/use-style-transitions-to-animate-a-menu/\">Use style transitions to animate a menu with UI Toolkit - GameDev Resources</a></p>\n<p>メニューUIのトランジションアニメーションをUI Toolkitで実装する方法について紹介しています。</p>\n<p>USSのtransitionプロパティを用いて、メニューのホバーアニメーションやメニューコンテンツのフェードインアニメーションを実装する方法を紹介しています。</p>\n<p>また、C#スクリプトでプロパティを操作して、メニューの各コンテンツのフェードイン時間をずらす実装についても言及しています。</p>\n<h2 id=\"urpでレンズフレアlens-flareを実装するunity20212以降利用可\" style=\"position:relative;\"><a href=\"#urp%E3%81%A7%E3%83%AC%E3%83%B3%E3%82%BA%E3%83%95%E3%83%AC%E3%82%A2lens-flare%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8Bunity20212%E4%BB%A5%E9%99%8D%E5%88%A9%E7%94%A8%E5%8F%AF\" aria-label=\"urpでレンズフレアlens flareを実装するunity20212以降利用可 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URPでレンズフレア(Lens Flare)を実装する(Unity2021.2以降利用可)</h2>\n<p><a href=\"https://www.hanachiru-blog.com/entry/2022/04/07/120000\">【Unity】URPでレンズフレア(Lens Flare)を実装する(Unity2021.2以降利用可) - はなちるのマイノート</a></p>\n<p>Unity 2021.2以降で利用できるURPのレンズフレアについて紹介しています。</p>\n<p>レンズフレアのコンポーネントと各種パラメーターの説明と、サンプルプロジェクトのレンズフレアアセットを活用してゲーム中にレンズフレアを描画する方法を解説しています。</p>\n<h2 id=\"textやtextmeshproのフォントに指定した文字が含まれているか表示できるか\" style=\"position:relative;\"><a href=\"#text%E3%82%84textmeshpro%E3%81%AE%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%AB%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9F%E6%96%87%E5%AD%97%E3%81%8C%E5%90%AB%E3%81%BE%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8B%E8%A1%A8%E7%A4%BA%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B\" aria-label=\"textやtextmeshproのフォントに指定した文字が含まれているか表示できるか permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TextやTextMeshProのフォントに指定した文字が含まれているか(表示できるか)</h2>\n<p><a href=\"https://kan-kikuchi.hatenablog.com/entry/Font_HasCharacter?utm_source=feed\">TextやTextMeshProのフォントに指定した文字が含まれているか(表示できるか)【Unity】【uGUI】【TextMesh Pro】 - (:3[kanのメモ帳]</a></p>\n<p>uGUIでテキストを扱うText や TextMeshPro で、そのクラスが利用しているフォントに、指定した文字が含まれているかを判定する方法について紹介しています。</p>\n<p>また、TextMeshProの場合にフォールバックを考慮して判定する方法ともし文字がない場合に追加するオプションについても言及しています。</p>\n<h1 id=\"other\" style=\"position:relative;\"><a href=\"#other\" aria-label=\"other permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other</h1>\n<h2 id=\"rider-20221-is-here\" style=\"position:relative;\"><a href=\"#rider-20221-is-here\" aria-label=\"rider 20221 is here permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rider 2022.1 is here!</h2>\n<p><a href=\"https://twitter.com/jetbrainsrider/status/1516399754850312193\">https://twitter.com/jetbrainsrider/status/1516399754850312193</a></p>\n<p>Rider 2022.1がリリースされました。</p>\n<p>Unity開発に関連する機能として、「Full-text Search in Search Everywhere」（ソリューション内のテキスト検索）や「別プロジェクトの型を自動で.asmdefに参照追加とインポート」、「.asmref編集時の補完機能」などが追加されています。</p>\n<p>2022.1のCHANGELOGは<a href=\"https://github.com/JetBrains/resharper-unity/blob/net221/CHANGELOG.md\">こちら</a>から確認できます。</p>","excerpt":"Unity Official Luaと自作ビューアで作り込んだ『ヘブンバーンズレッド』の裏側──Unityの拡張性を活かすWright Flyer Studiosの開発メソッド Luaと自作ビューアで作り込んだ『ヘブンバーンズレッド』の裏側──Unityの拡張性を活かすWright Flyer Studiosの開発メソッド – Unity for Pro Wright Flyer Studio…","fields":{"slug":"/project/unity-weekly/065/"},"frontmatter":{"date":"April 24, 2022","type":"unity-weekly","tags":["Unity","Unity Weekly"],"title":"Lua、UI Toolkit、Shader Graphでポストエフェクト、Metatex/Metamesh、async/await、Rider 2022.1 - Unity Weekly #065","description":null,"eyecatch":null}}},"pageContext":{"id":"2fa2e4ad-583b-5116-b7d1-76c40e04e8a7"}},"staticQueryHashes":["1480509143","3159585216"]}