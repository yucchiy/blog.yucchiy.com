{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/154/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"unity-officials\" style=\"position:relative;\"><a href=\"#unity-officials\" aria-label=\"unity officials permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Officials</h2>\n<h3 id=\"why-folder-structures-matter\" style=\"position:relative;\"><a href=\"#why-folder-structures-matter\" aria-label=\"why folder structures matter permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why folder structures matter</h3>\n<p><a href=\"https://blog.unity.com/engine-platform/why-folder-structures-matter\">Why folder structures matter | Unity Blog</a></p>\n<p>プロジェクト内のフォルダー構造の重要性についての解説と、よくあるフォルダー構成のパターンを4種類紹介し、その中でアセットの目的に基づいたフォルダー構成のメリットについて紹介しています。</p>\n<h3 id=\"cedec-2023\" style=\"position:relative;\"><a href=\"#cedec-2023\" aria-label=\"cedec 2023 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CEDEC 2023</h3>\n<p>CEDEC 2023の講演のうち、Unity Technologies Japanが発表した講演の動画が、YouTubeおよびUnity Learning Materialsに公開されています。</p>\n<ul>\n<li><a href=\"https://learning.unity3d.jp/10007/\">C++で作ったゲームを Unity Gaming Service でホストする方法 | Unity Learning Materials</a></li>\n<li><a href=\"https://learning.unity3d.jp/10002/\">昼夜の変化のある「ビッグワールド」の町の実現のための実用的な技術の紹介／Practical technologies to create Big World city with time-of-day | Unity Learning Materials</a></li>\n<li><a href=\"https://learning.unity3d.jp/9990/\">推論ライブラリを実装する | Unity Learning Materials</a></li>\n<li><a href=\"https://learning.unity3d.jp/9995/\">アプリマネタイズ入門解説とUnity LevelPlay実装チュートリアル／ゲーム開発におけるAddressablesとDevOpsサービスの活用法 | Unity Learning Materials</a></li>\n</ul>\n<h2 id=\"events\" style=\"position:relative;\"><a href=\"#events\" aria-label=\"events permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Events</h2>\n<h3 id=\"unity-urp-完全に理解した勉強会\" style=\"position:relative;\"><a href=\"#unity-urp-%E5%AE%8C%E5%85%A8%E3%81%AB%E7%90%86%E8%A7%A3%E3%81%97%E3%81%9F%E5%8B%89%E5%BC%B7%E4%BC%9A\" aria-label=\"unity urp 完全に理解した勉強会 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity URP 完全に理解した勉強会</h3>\n<p><a href=\"https://meetup.unity3d.jp/jp/events/1416\">Unity URP 完全に理解した勉強会 - Unity Meetup</a></p>\n<p>Unityユーザコミュニティ主導で開催される勉強会「Unity 〇〇完全に理解した勉強会」のURP回が2024/02/02に開催されます。</p>\n<h2 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h2>\n<h3 id=\"数式を読み解きながら頂点シェーダーで波の動きを作ってみるgerstner-waves\" style=\"position:relative;\"><a href=\"#%E6%95%B0%E5%BC%8F%E3%82%92%E8%AA%AD%E3%81%BF%E8%A7%A3%E3%81%8D%E3%81%AA%E3%81%8C%E3%82%89%E9%A0%82%E7%82%B9%E3%82%B7%E3%82%A7%E3%83%BC%E3%83%80%E3%83%BC%E3%81%A7%E6%B3%A2%E3%81%AE%E5%8B%95%E3%81%8D%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8Bgerstner-waves\" aria-label=\"数式を読み解きながら頂点シェーダーで波の動きを作ってみるgerstner waves permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>数式を読み解きながら頂点シェーダーで波の動きを作ってみる(Gerstner Waves)</h3>\n<p><a href=\"https://zenn.dev/nrdev/articles/a1a350e5d7e725\">[Unity] 数式を読み解きながら頂点シェーダーで波の動きを作ってみる(Gerstner Waves)</a></p>\n<p>波を表現する「Gerstner Waves」について、手法の解説からUnity実装までを紹介しています。</p>\n<h3 id=\"magiconion--messagepack--yetanotherhttphandler-でリアルタイム通信を行う\" style=\"position:relative;\"><a href=\"#magiconion--messagepack--yetanotherhttphandler-%E3%81%A7%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%A0%E9%80%9A%E4%BF%A1%E3%82%92%E8%A1%8C%E3%81%86\" aria-label=\"magiconion  messagepack  yetanotherhttphandler でリアルタイム通信を行う permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MagicOnion + MessagePack + YetAnotherHttpHandler でリアルタイム通信を行う</h3>\n<p><a href=\"https://zenn.dev/toutou/articles/7918da3d1a9e1d\">MagicOnion + MessagePack + YetAnotherHttpHandler でリアルタイム通信を行う</a></p>\n<p>MagicOnion・MessagePack・YetAnotherHttpHandlerを用いて、Unityでリアルタイム通信を行う環境を構築する方法について解説しています。</p>\n<h3 id=\"visitorパターンで型によるswitchやif判定を消す\" style=\"position:relative;\"><a href=\"#visitor%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%81%A7%E5%9E%8B%E3%81%AB%E3%82%88%E3%82%8Bswitch%E3%82%84if%E5%88%A4%E5%AE%9A%E3%82%92%E6%B6%88%E3%81%99\" aria-label=\"visitorパターンで型によるswitchやif判定を消す permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Visitorパターンで型によるswitchやif判定を消す</h3>\n<p><a href=\"https://qiita.com/toRisouP/items/d96a09fab827af17fb37?utm_campaign=post_article&#x26;utm_medium=twitter&#x26;utm_source=twitter_share\">Visitorパターンで型によるswitchやif判定を消す #C# - Qiita</a></p>\n<p>型によるswitchやif判定を用いることによる問題点と、これをVisitorパターンを用いて解決する方法について紹介しています。</p>\n<h3 id=\"ulipsync-の-webgl-対応をしてみた\" style=\"position:relative;\"><a href=\"#ulipsync-%E3%81%AE-webgl-%E5%AF%BE%E5%BF%9C%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F\" aria-label=\"ulipsync の webgl 対応をしてみた permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>uLipSync の WebGL 対応をしてみた</h3>\n<p><a href=\"https://tips.hecomi.com/entry/2023/12/30/003934\">uLipSync の WebGL 対応をしてみた - 凹みTips</a></p>\n<p>ブログの著者が開発する「<a href=\"https://github.com/hecomi/uLipSync\">uLipSync</a>」のWebGL対応について、WebGLビルドにおける音声解析（<code>OnAudioFilterRead</code>）の課題と解決方法、音ズレの原因と対策についてそれぞれ解説しています。</p>\n<h3 id=\"unity--urp1081よく使うシェーダーのテクニックについてメモ-座標まわり\" style=\"position:relative;\"><a href=\"#unity--urp1081%E3%82%88%E3%81%8F%E4%BD%BF%E3%81%86%E3%82%B7%E3%82%A7%E3%83%BC%E3%83%80%E3%83%BC%E3%81%AE%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E3%83%A1%E3%83%A2-%E5%BA%A7%E6%A8%99%E3%81%BE%E3%82%8F%E3%82%8A\" aria-label=\"unity  urp1081よく使うシェーダーのテクニックについてメモ 座標まわり permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>【Unity / URP10.8.1】よく使うシェーダーのテクニックについてメモ (座標まわり)</h3>\n<p><a href=\"https://zenn.dev/r_ngtm/articles/unity-urp10-shader-memo\">【Unity / URP10.8.1】よく使うシェーダーのテクニックについてメモ (座標まわり)</a></p>\n<p>ブログの著者がシェーダー実装の際によく使う座標に関するテクニックを9つ紹介しています。</p>\n<h3 id=\"ugui上でスパイク形状を簡単に作成するためのコンポーネント\" style=\"position:relative;\"><a href=\"#ugui%E4%B8%8A%E3%81%A7%E3%82%B9%E3%83%91%E3%82%A4%E3%82%AF%E5%BD%A2%E7%8A%B6%E3%82%92%E7%B0%A1%E5%8D%98%E3%81%AB%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88\" aria-label=\"ugui上でスパイク形状を簡単に作成するためのコンポーネント permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ugui上でスパイク形状を簡単に作成するためのコンポーネント</h3>\n<p><a href=\"https://qiita.com/ScreenPocket/items/536fef55326a2bd8f783\">Ugui上でスパイク形状を簡単に作成するためのコンポーネント #Unity - Qiita</a></p>\n<p>uGUIで、多角形やスパイク形状を表現する独自の <code>MaskableGraphic</code> 実装について、その原理と実装方法を解説しています。</p>\n<h3 id=\"input-systemでクリックタップされた座標を取得する\" style=\"position:relative;\"><a href=\"#input-system%E3%81%A7%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF%E3%82%BF%E3%83%83%E3%83%97%E3%81%95%E3%82%8C%E3%81%9F%E5%BA%A7%E6%A8%99%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B\" aria-label=\"input systemでクリックタップされた座標を取得する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Input Systemでクリック／タップされた座標を取得する</h3>\n<p><a href=\"https://nekojara.city/unity-input-system-press-position\">【Unity】Input Systemでクリック／タップされた座標を取得する | ねこじゃらシティ</a></p>\n<p>Input Systemでクリック・タップされた座標を取得する方法を、InputActionを用意してそのコールバックから取得する方法と、カスタムComposite Bindingを用いて取得する方法の2つの方法を紹介しています。</p>\n<h3 id=\"非同期コールバック関数パターン\" style=\"position:relative;\"><a href=\"#%E9%9D%9E%E5%90%8C%E6%9C%9F%E3%82%B3%E3%83%BC%E3%83%AB%E3%83%90%E3%83%83%E3%82%AF%E9%96%A2%E6%95%B0%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\" aria-label=\"非同期コールバック関数パターン permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>非同期コールバック関数パターン</h3>\n<p><a href=\"https://developer.aiming-inc.com/csharp/unity-csharp-async-callback-patterns/\">[Unity][C#] 非同期コールバック関数パターン │ Aiming 開発者ブログ</a></p>\n<p>非同期なメソッドをコールバックとして呼び出すときのパターンや注意点をまとめています。</p>\n<h3 id=\"3dアニメーションのための躍度最小軌道メモ\" style=\"position:relative;\"><a href=\"#3d%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E8%BA%8D%E5%BA%A6%E6%9C%80%E5%B0%8F%E8%BB%8C%E9%81%93%E3%83%A1%E3%83%A2\" aria-label=\"3dアニメーションのための躍度最小軌道メモ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3Dアニメーションのための躍度最小軌道メモ</h3>\n<p><a href=\"https://zenn.dev/mogesystem/articles/9edbc38fd328d5\">3Dアニメーションのための躍度最小軌道メモ</a></p>\n<p>躍度最小軌道を用いたアニメーション制御について、3Dキャラクターの手の位置の移動を題材に、アルゴリズムの原理からUnity上での実装までを解説しています。</p>\n<h3 id=\"ussで変数を使う方法まとめ\" style=\"position:relative;\"><a href=\"#uss%E3%81%A7%E5%A4%89%E6%95%B0%E3%82%92%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"ussで変数を使う方法まとめ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>USSで変数を使う方法まとめ</h3>\n<p><a href=\"https://light11.hatenadiary.com/entry/2024/01/04/195725\">【Unity】【UI Toolkit】USSで変数を使う方法まとめ - LIGHT11</a></p>\n<p>UI ToolkitのUSSで扱える変数についてまとめています。</p>\n<h3 id=\"transformインスペクタの拡張\" style=\"position:relative;\"><a href=\"#transform%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%9A%E3%82%AF%E3%82%BF%E3%81%AE%E6%8B%A1%E5%BC%B5\" aria-label=\"transformインスペクタの拡張 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transformインスペクタの拡張</h3>\n<p><a href=\"https://zenn.dev/emptybraces/articles/6840c98af1c544\">Transformインスペクタの拡張</a></p>\n<p>Unity標準のTransformインスペクターを拡張する方法を紹介しています。</p>\n<h3 id=\"textmeshproのアウトラインの太さをランタイムで変更する\" style=\"position:relative;\"><a href=\"#textmeshpro%E3%81%AE%E3%82%A2%E3%82%A6%E3%83%88%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%AE%E5%A4%AA%E3%81%95%E3%82%92%E3%83%A9%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%81%A7%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B\" aria-label=\"textmeshproのアウトラインの太さをランタイムで変更する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TextMeshProのアウトラインの太さをランタイムで変更する</h3>\n<p><a href=\"https://myudon.hatenablog.com/entry/2024/01/03/155225\">【Unity】TextMeshProのアウトラインの太さをランタイムで変更する - うどんてっくメモ</a></p>\n<p>TextMeshProの描画に利用されるマテリアルのプロパティを変更することで、アウトラインの太さをランタイムで変更する方法を紹介しています。</p>\n<h3 id=\"scenesystemを試してみた\" style=\"position:relative;\"><a href=\"#scenesystem%E3%82%92%E8%A9%A6%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F\" aria-label=\"scenesystemを試してみた permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SceneSystemを試してみた</h3>\n<p><a href=\"https://zenn.dev/ail/articles/1a6d64d34b43dc\">【Unity】SceneSystemを試してみた【AnnulusGames】</a></p>\n<p>シーン管理システム「<a href=\"https://github.com/AnnulusGames/SceneSystem\">SceneSystem</a>」の導入から基本的な利用方法を紹介しています。</p>\n<h3 id=\"ローカルupmパッケージをunitypackage化する\" style=\"position:relative;\"><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%ABupm%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%82%92unitypackage%E5%8C%96%E3%81%99%E3%82%8B\" aria-label=\"ローカルupmパッケージをunitypackage化する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ローカルUPMパッケージをunitypackage化する</h3>\n<p><a href=\"https://zenn.dev/ruccho/articles/b91d424cd3d005\">ローカルUPMパッケージをunitypackage化する</a></p>\n<p>「<a href=\"https://assetstore.unity.com/packages/tools/utilities/asset-store-publishing-tools-115?locale=ja-JP\">Asset Store Publishing Tools</a>」を用いてローカル上のUPMパッケージをunitypackage化する方法を紹介しています。</p>\n<h3 id=\"spriterendererで3d空間上に影を投影する\" style=\"position:relative;\"><a href=\"#spriterenderer%E3%81%A73d%E7%A9%BA%E9%96%93%E4%B8%8A%E3%81%AB%E5%BD%B1%E3%82%92%E6%8A%95%E5%BD%B1%E3%81%99%E3%82%8B\" aria-label=\"spriterendererで3d空間上に影を投影する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SpriteRendererで3D空間上に影を投影する</h3>\n<p><a href=\"https://zenn.dev/gameshalico/articles/fa5d4b9c532039\">【Unity】SpriteRendererで3D空間上に影を投影する【URP】</a></p>\n<p>URP環境で、SpriteRendererが生成する影を3D空間上に投影する方法を紹介しています。</p>\n<h3 id=\"unityからのビルド時にxcode上の設定を自動で行う\" style=\"position:relative;\"><a href=\"#unity%E3%81%8B%E3%82%89%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%ABxcode%E4%B8%8A%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92%E8%87%AA%E5%8B%95%E3%81%A7%E8%A1%8C%E3%81%86\" aria-label=\"unityからのビルド時にxcode上の設定を自動で行う permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unityからのビルド時に、XCode上の設定を自動で行う</h3>\n<p><a href=\"https://zenn.dev/dara/articles/0d8c931f750fcb\">【Unity/iOS】Unityからのビルド時に、XCode上の設定を自動で行う</a></p>\n<p>Xcode15対応やUaaLを利用するために必要なXcode上の設定を、<code>OnPostProcessBuild</code> を用いて、UnityがXcodeプロジェクトを作成時に自動で行う方法を紹介しています。</p>\n<h2 id=\"repositories\" style=\"position:relative;\"><a href=\"#repositories\" aria-label=\"repositories permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repositories</h2>\n<h3 id=\"r3\" style=\"position:relative;\"><a href=\"#r3\" aria-label=\"r3 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>R3</h3>\n<p><a href=\"https://github.com/Cysharp/R3\">Cysharp/R3: The new future of dotnet/reactive and UniRx.</a></p>\n<p>dotnet/reactiveやUniRxの進化系を見据えたAPIの見直しや、モダンな技術による再実装によるパフォーマンス向上、プラットフォーム抽象化によってWPF・Unity・Godot・Avaloniaに対応したC#のReactive Extensions実装。</p>\n<h3 id=\"litmotion\" style=\"position:relative;\"><a href=\"#litmotion\" aria-label=\"litmotion permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LitMotion</h3>\n<p><a href=\"https://github.com/AnnulusGames/LitMotion?\">AnnulusGames/LitMotion: Lightning-fast and Zero Allocation Tween Library for Unity.</a></p>\n<p>Unity向けの高速かつゼロアロケーションなTweenライブラリ。</p>\n<h3 id=\"vitalrouter\" style=\"position:relative;\"><a href=\"#vitalrouter\" aria-label=\"vitalrouter permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VitalRouter</h3>\n<p><a href=\"https://github.com/hadashiA/VitalRouter\">hadashiA/VitalRouter: The zero-allocation message passing tool for Unity (Game Engine). And the very thin layer that encourages MVP (or whatever)-like design.</a></p>\n<p>Unity向けのゼロアロケーションなメッセージパッシングツール。</p>\n<h3 id=\"chainingassertion-for-unity\" style=\"position:relative;\"><a href=\"#chainingassertion-for-unity\" aria-label=\"chainingassertion for unity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ChainingAssertion for Unity</h3>\n<p><a href=\"https://github.com/AnnulusGames/ChainingAssertion-Unity\">AnnulusGames/ChainingAssertion-Unity: Chaining Assertion for Unity Test Framework</a></p>\n<p>Unity Test Framework向けに実装されたメソッドチェーンベースのAssertionライブラリ。</p>\n<h3 id=\"fang-auto-tile\" style=\"position:relative;\"><a href=\"#fang-auto-tile\" aria-label=\"fang auto tile permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fang Auto Tile</h3>\n<p><a href=\"https://github.com/ruccho/FangAutoTile\">ruccho/FangAutoTile: Fang Auto Tile is an easy and fully featured auto-tiling system for Unity.</a></p>\n<p>Unity向け高機能なオートタイルシステム。</p>","excerpt":"Unity Officials Why folder structures matter Why folder structures matter | Unity Blog プロジェクト内のフォルダー構造の重要性についての解説と、よくあるフォルダー構成のパターンを4種類紹介し、その中でアセットの目的に基づいたフォルダー構成のメリットについて紹介しています。 CEDEC 2023 CEDEC 2023の講演のうち、Unity Technologies Japan…","fields":{"slug":"/project/unity-weekly/154/"},"frontmatter":{"date":"January 09, 2024","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"Unity Weekly 154","description":"2024/01/08週のUnity Weeklyです。Unityフォルダー構造、CEDEC2023講演動画公開、Unity URP 完全に理解した勉強会、R3などについて取り上げています。","eyecatch":null}}},"pageContext":{"id":"3083b078-7fad-5eab-882e-a33cc5092240"}},"staticQueryHashes":["1480509143","3159585216"]}