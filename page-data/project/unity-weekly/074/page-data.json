{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/074/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"unity-officials\" style=\"position:relative;\"><a href=\"#unity-officials\" aria-label=\"unity officials permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Officials</h2>\n<h3 id=\"unity-フレームタイミングマネージャーによるパフォーマンスボトルネックの検出\" style=\"position:relative;\"><a href=\"#unity-%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%82%BF%E3%82%A4%E3%83%9F%E3%83%B3%E3%82%B0%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3%E3%83%BC%E3%81%AB%E3%82%88%E3%82%8B%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9%E3%83%9C%E3%83%88%E3%83%AB%E3%83%8D%E3%83%83%E3%82%AF%E3%81%AE%E6%A4%9C%E5%87%BA\" aria-label=\"unity フレームタイミングマネージャーによるパフォーマンスボトルネックの検出 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity フレームタイミングマネージャーによるパフォーマンスボトルネックの検出</h3>\n<p><a href=\"https://blog.unity.com/ja/technology/detecting-performance-bottlenecks-with-unity-frame-timing-manager\">Unity Frame Timing Managerによるパフォーマンスボトルネックの検出 | Unity Blog</a></p>\n<p>フレーム内のCPU・GPU時間を計測するための <a href=\"https://docs.unity3d.com/2022.2/Documentation/Manual/frame-timing-manager.html\">Frame Timing Manager</a> というAPIについて、このAPIを用いてどのような値を計測できるのか、実際にこのAPIを用いてCPU・GPU時間をHUDで表示したり、フレーム内のボトルネックを検出する方法について紹介しています。</p>\n<p>また、Frame Timing Managerの対応プラットフォームや制限事項、高度なトピックスとしてフレームタイムラインの可視化や他のマーカーとの差分計算に使用できるタイムスタンプ情報の取得する方法などについても言及しています。</p>\n<h3 id=\"unity-ゲーミングサービスを使って-1-つのモジュール式プラットフォームでライブゲームを構築しよう\" style=\"position:relative;\"><a href=\"#unity-%E3%82%B2%E3%83%BC%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-1-%E3%81%A4%E3%81%AE%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E5%BC%8F%E3%83%97%E3%83%A9%E3%83%83%E3%83%88%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%81%A7%E3%83%A9%E3%82%A4%E3%83%96%E3%82%B2%E3%83%BC%E3%83%A0%E3%82%92%E6%A7%8B%E7%AF%89%E3%81%97%E3%82%88%E3%81%86\" aria-label=\"unity ゲーミングサービスを使って 1 つのモジュール式プラットフォームでライブゲームを構築しよう permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity ゲーミングサービスを使って 1 つのモジュール式プラットフォームでライブゲームを構築しよう</h3>\n<p><a href=\"https://blog.unity.com/ja/games/build-your-live-game-in-a-single-modular-platform-with-unity-gaming-services\">Unity ゲーミングサービスを使って 1 つのモジュール式プラットフォームでライブゲームを構築しよう | Unity Blog</a></p>\n<p>Unity Gaming Service（UGS）の正式版リリースがアナウンスされました。</p>\n<p>UGSを用いてライブゲーム構築を構築するために、どのような要件をUGSのどの機能を用いると実現できるかについて紹介しています。</p>\n<ul>\n<li>アカウント管理\n<ul>\n<li><a href=\"https://unity.com/ja/products/authentication\">Authentication</a>: ゲームのアカウント管理</li>\n<li><a href=\"https://unity.com/ja/products/cloud-save\">Cloud Save</a>: プレイヤーのアビリティや統計情報などのプレイヤーデータを保存し、デバイスを跨いだアカウントを提供できる。</li>\n</ul>\n</li>\n<li>マルチプレイヤー\n<ul>\n<li><a href=\"https://unity.com/ja/products/lobby\">Lobby</a>: ゲームセッションに参加する前のプレイヤーを公開・非公開ロビーに集めることができる</li>\n<li><a href=\"https://unity.com/ja/products/relay\">Relay</a>: P2Pセッションを構築できる。IPを共有をせず、またゲームトラフィックはDTLSによって暗号化されている。<a href=\"https://unity.com/ja/products/netcode\">Netcode for GameObjects</a> を組み合わせると小規模な協力プレイゲームのプロジェクトを立ち上げることができる</li>\n<li><a href=\"https://unity.com/ja/products/multiplay\">Multiplay</a> と <a href=\"https://unity.com/ja/products/matchmaker\">Matchmaker</a> を組み合わせて協力型ゲームおよび対戦型ゲームを構築できる</li>\n</ul>\n</li>\n<li>コンテンツの設定と管理\n<ul>\n<li><a href=\"https://unity.com/ja/products/cloud-code\">Cloud Code</a>: ステートレスなサーバーレスサービス</li>\n<li><a href=\"https://unity.com/ja/products/economy\">Economy</a>: ゲーム内経済システムを構築できるバックエンドサービス</li>\n</ul>\n</li>\n<li>プレイヤーを理解する\n<ul>\n<li><a href=\"https://unity.com/ja/products/unity-analytics\">Analytics</a>: ゲーム内のプレイヤーの行動やゲームのパフォーマンスを解析できる。また、ExcelやTableau、OpenOfficeなどへのデータエクスポートも可能。</li>\n</ul>\n</li>\n<li>プレイヤーを引き込む\n<ul>\n<li><a href=\"https://unity.com/ja/solutions/games-operate/engage\">Game Overrides</a>: ゲームアップデートを行わずに、管理画面上でプレイヤーごとの設定変更ができるサービス。これを用いてゲーム難易度の変更のスケジュール、ターゲット指定、A/Bテストを行える。<a href=\"https://docs.unity.com/ccd/UnityCCDGameOverrides.html\">Cloud Content Delivery</a>と組み合わせると、プレイヤーグループごとに特定のアセット配信をスケジュールすることもできる</li>\n<li><a href=\"https://docs.unity.com/push-notifications/WhatArePushNotifications.html\">Push Notifications</a>: リモートプッシュ配信サービス</li>\n</ul>\n</li>\n<li>コミュニティーを構築する\n<ul>\n<li><a href=\"https://unity.com/ja/products/vivox\">Vivox</a>: テキストチャットとボイスチャットを構築できるエンジン非依存なサービス</li>\n</ul>\n</li>\n<li>パフォーマンスの監視\n<ul>\n<li><a href=\"https://unity.com/ja/products/cloud-diagnostics?_ga=2.183389666.532293565.1641834336-1524759146.1613488747\">Cloud Diagnostics</a>: リアルタイムのエラーモニタリングを提供するサービス。クラッシュや例外のレポートを行ってくれる。</li>\n</ul>\n</li>\n<li>ユーザーを獲得する\n<ul>\n<li><a href=\"https://unity.com/ja/solutions/mobile-business/get-users/audience-pinpointer\">Audience Pinpointer</a>: ユーザー獲得のための広告ソリューション</li>\n</ul>\n</li>\n<li>ゲームを収益化する\n<ul>\n<li><a href=\"https://unity.com/ja/products/mediation\">Unity Mediation</a>: ゲーム内広告による収益化ソリューション</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"memory-profiler-100-pre2-released\" style=\"position:relative;\"><a href=\"#memory-profiler-100-pre2-released\" aria-label=\"memory profiler 100 pre2 released permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Memory Profiler 1.0.0-pre.2 Released</h3>\n<p><a href=\"https://forum.unity.com/threads/memory-profiler-1-0-0-pre-2-released.1298490/\">Official - Memory Profiler 1.0.0-pre.2 Released - Unity Forum</a></p>\n<p>Memory Profilerの 1.0.0-pre.2 がリリースされました。</p>\n<ul>\n<li>タブの再構築により機能の整理が行われました</li>\n<li>トータルメモリレポート＆サマリービューの再構築\n<ul>\n<li>Memory Usage On Device: ターゲットデバイスでの利用可能な総物理メモリに対して、アプリケーションが使用している常駐メモリ量の割合を表示します。このビューは、 Unity 2022でのメモリキャプチャのみで利用可能です。</li>\n<li>Total Committed Memory: アプリケーションのコミットメモリサイズと、その内訳（Native、Managed、Graphicsなど）の上位表示。コミットされたメモリは、物理メモリ上かディスクにスワップしているかなどに関わらず、アプリケーションのすべてのメモリを表示しています。</li>\n<li>Managed Memory</li>\n<li>Top Unity Object Categories: 新しいビューでは、アプリケーション中のメモリ使用量の多いカテゴリと、そのカテゴリの詳細を調べるためのリンクをあわせて表示しています。s</li>\n</ul>\n</li>\n<li>2メモリキャプチャ間のオブジェクト差分\n<ul>\n<li>今までの単純なオブジェクトのDiffだけではなく、カテゴリごと（Texture2DやMaterialなど）のグループ化、メモリ使用量の差分なども表示され、より視覚的に理解しやすいビューが実装されています。</li>\n</ul>\n</li>\n</ul>\n<p>また今回のリリースは、検証済みバージョンである 1.0 に向けての最初のステップとなるリリースという位置づけとなります。また Memory Profiler 1.0は、Unity 2022以降を必要とするパッケージとなる予定とのことです。</p>\n<p>それ以前のUnityバージョンのプロジェクトで Memory Profiler 1.0を利用したい場合は、メモリキャプチャ自体はそのバージョンで行い、Unity 2022のエディターでMemory Profilerを開いてスナップショットをインポートすることで利用できます。</p>\n<h3 id=\"experimental-entities-051-is-available\" style=\"position:relative;\"><a href=\"#experimental-entities-051-is-available\" aria-label=\"experimental entities 051 is available permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Experimental Entities 0.51 is Available</h3>\n<p><a href=\"https://forum.unity.com/threads/experimental-entities-0-51-is-available.1281233/\">Official - Experimental Entities 0.51 is Available - Unity Forum</a></p>\n<p>Entities 0.51がリリースされました。このリリースでの主なアップデートは、Unity 2020 LTS と 2021  LTS両方の互換性をサポートしたことです。また、下記リンクに示すEntities 0.50以降のいくつかの問題が修正されています。</p>\n<ul>\n<li><a href=\"https://docs.unity3d.com/Packages/com.unity.entities@0.51/changelog/CHANGELOG.html\">com.unity.entities</a></li>\n<li><a href=\"https://docs.unity3d.com/Packages/com.unity.rendering.hybrid@0.51/changelog/CHANGELOG.html\">com.unity.rendering.hybrid</a></li>\n<li><a href=\"https://docs.unity3d.com/Packages/com.unity.netcode@0.51/changelog/CHANGELOG.html\">com.unity.netcode</a></li>\n<li><a href=\"https://docs.unity3d.com/Packages/com.unity.physics@0.51/changelog/CHANGELOG.html\">com.unity.physics</a></li>\n<li><a href=\"https://docs.unity3d.com/Packages/com.havok.physics@0.51/changelog/CHANGELOG.html\">com.havok.physics</a></li>\n</ul>\n<h3 id=\"gpuの力を解き放てunity-compute-shader入門\" style=\"position:relative;\"><a href=\"#gpu%E3%81%AE%E5%8A%9B%E3%82%92%E8%A7%A3%E3%81%8D%E6%94%BE%E3%81%A6unity-compute-shader%E5%85%A5%E9%96%80\" aria-label=\"gpuの力を解き放てunity compute shader入門 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GPUの力を解き放て！Unity Compute Shader入門！</h3>\n<p><a href=\"https://www.youtube.com/watch?v=yiPVxGO-Yg0\">GPUの力を解き放て！Unity Compute Shader入門！ - YouTube</a></p>\n<p>UnityでCompute Shaderを使う入門動画です。</p>\n<p>Compute Shaderの特徴とUnityでの利用事例、Compute Shaderの基本要素のおさらい、群衆シミュレーションのアルゴリズムのBoidの実装解説とパフォーマンス比較、BoidアルゴリズムのCompute Shader実装の最適化について解説しています。</p>\n<h2 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h2>\n<h3 id=\"point-to-click-movement-with-the-new-input-system--cinemachine\" style=\"position:relative;\"><a href=\"#point-to-click-movement-with-the-new-input-system--cinemachine\" aria-label=\"point to click movement with the new input system  cinemachine permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Point to click movement with the new Input System &#x26; Cinemachine</h3>\n<p><a href=\"https://gamedev-resources.com/point-to-click-movement-with-the-new-input-system-cinemachine/\">Point to click movement with the new Input System &#x26; Cinemachine - GameDev Resources</a></p>\n<p>フィールドをクリックすると、その地点へキャラクターが移動するようなシステムとカメラの追従機能を、新しいInput SystemおよびCinemachineで実装する方法について紹介しています。</p>\n<p>キャラクターの移動は、マウスの入力を新しいInput Systemでスクリーン座標として読み取り、 <code>Camera.ScreenPointToRay</code> でワールド座標に変換し、事前に用意したNavMeshに対して <code>NavMesh.SamplePosition</code> でNavMesh上の座標を算出、その座標に対して <code>NavMeshAgent</code> で移動するような実装を行っています。</p>\n<h3 id=\"assetbundleの互換性を壊さずにasmdefを適用するには\" style=\"position:relative;\"><a href=\"#assetbundle%E3%81%AE%E4%BA%92%E6%8F%9B%E6%80%A7%E3%82%92%E5%A3%8A%E3%81%95%E3%81%9A%E3%81%ABasmdef%E3%82%92%E9%81%A9%E7%94%A8%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF\" aria-label=\"assetbundleの互換性を壊さずにasmdefを適用するには permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AssetBundleの互換性を壊さずにasmdefを適用するには？</h3>\n<p><a href=\"https://qiita.com/mhama/items/13db54ceb5978805fd2f\">【Unity】AssetBundleの互換性を壊さずにasmdefを適用するには？ - Qiita</a></p>\n<p>asmdefを適用していないコンポーネントを含んだAssetBundleを、そのコンポーネントにasmdefを適用すると（アセンブリ名が変わるために）AssetBundleを復元できなくなる問題と、内部のロジックをテスト可能にするためにコンポーネント中の一部ロジックを別クラス化するなどでasmdef化する方法などについて紹介しています。</p>\n<p>キャラクター追従カメラは、VirtualCameraのBodyを <code>Framing Transposer</code> に設定して実装しています。</p>\n<h3 id=\"unityのvisualeffectgraphとshadergraphを使って剣の軌跡エフェクトを作成する\" style=\"position:relative;\"><a href=\"#unity%E3%81%AEvisualeffectgraph%E3%81%A8shadergraph%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%89%A3%E3%81%AE%E8%BB%8C%E8%B7%A1%E3%82%A8%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\" aria-label=\"unityのvisualeffectgraphとshadergraphを使って剣の軌跡エフェクトを作成する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UnityのVisualEffectGraphとShaderGraphを使って剣の軌跡エフェクトを作成する</h3>\n<p><a href=\"https://gametukurikata.com/effect/visualeffectgraphswordtraileffect\">UnityのVisualEffectGraphとShaderGraphを使って剣の軌跡エフェクトを作成する | Unityを使った３Dゲームの作り方（かめくめ）</a></p>\n<p>剣を振った時の軌跡（トレイル）エフェクトの実装方法について紹介しています。</p>\n<p>トレイルエフェクトに使うためのメッシュのBlenderでの作成方法から、Visual Effect Graphを用いて作成したメッシュを剣を振った軌道に合わせて表示する方法、剣を振るアニメーションにアニメーションイベントを仕込み、仕込んだイベントをVisual Effect Graphで受け取ってエフェクトを表示する方法、エフェクトの見た目をShaderGraphを用いて調整する方法についてそれぞれ解説しています。</p>\n<h3 id=\"animationcontrollerで制御しているキャラクタにanimationclipのアニメーションを割り込ませる\" style=\"position:relative;\"><a href=\"#animationcontroller%E3%81%A7%E5%88%B6%E5%BE%A1%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%82%AD%E3%83%A3%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%ABanimationclip%E3%81%AE%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E5%89%B2%E3%82%8A%E8%BE%BC%E3%81%BE%E3%81%9B%E3%82%8B\" aria-label=\"animationcontrollerで制御しているキャラクタにanimationclipのアニメーションを割り込ませる permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AnimationControllerで制御しているキャラクタにAnimationClipのアニメーションを割り込ませる</h3>\n<p><a href=\"https://zenn.dev/tyto/articles/1c26d44b516850\">AnimationControllerで制御しているキャラクタにAnimationClipのアニメーションを割り込ませる</a></p>\n<p>AnimationControllerで制御しているキャラクターに対して別のAnimationClipの再生を割り込ませる方法について紹介しています。</p>\n<p>AnimationControllerのアニメーション出力を <code>AnimatorControllerPlayable</code> で、追加のAnimationClipの再生を<code>AnimationClipPlayable</code> で行い、 <code>AnimationLayerMixerPlayable</code> で２アニメーション出力を合成することでこれを実装する方法について解説しています。</p>\n<h3 id=\"lightmapをベイクしたシーンをマルチシーンで追加で読み込んだ時の見た目の差異を解消する\" style=\"position:relative;\"><a href=\"#lightmap%E3%82%92%E3%83%99%E3%82%A4%E3%82%AF%E3%81%97%E3%81%9F%E3%82%B7%E3%83%BC%E3%83%B3%E3%82%92%E3%83%9E%E3%83%AB%E3%83%81%E3%82%B7%E3%83%BC%E3%83%B3%E3%81%A7%E8%BF%BD%E5%8A%A0%E3%81%A7%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%93%E3%81%A0%E6%99%82%E3%81%AE%E8%A6%8B%E3%81%9F%E7%9B%AE%E3%81%AE%E5%B7%AE%E7%95%B0%E3%82%92%E8%A7%A3%E6%B6%88%E3%81%99%E3%82%8B\" aria-label=\"lightmapをベイクしたシーンをマルチシーンで追加で読み込んだ時の見た目の差異を解消する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LightMapをベイクしたシーンをマルチシーンで追加で読み込んだ時の見た目の差異を解消する</h3>\n<p><a href=\"https://qiita.com/nattuhan/items/d21351a5003281cbf0ce\">[Unity]LightMapをベイクしたシーンをマルチシーンで追加で読み込んだ時の見た目の差異を解消する - Qiita</a></p>\n<p>LightMapをベイクしたシーンをマルチシーンとして読み込む時と単体シーンとして読み込む時とで見た目が異なる問題を解消する方法として、マルチシーンをアクティブにする方法と、FogやSkybox、Environment Reflectionなどのシーン依存な情報を合わせる方法についてそれぞれ紹介しています。</p>\n<h3 id=\"single-pass-instancedでgrabpass取得できない時の対処\" style=\"position:relative;\"><a href=\"#single-pass-instanced%E3%81%A7grabpass%E5%8F%96%E5%BE%97%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6\" aria-label=\"single pass instancedでgrabpass取得できない時の対処 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Single Pass InstancedでGrabPass取得できない時の対処</h3>\n<p><a href=\"https://zenn.dev/panda_nakami/articles/20220620-unity-grabpass-singlepassinstanced\">Single Pass InstancedでGrabPass取得できない時の対処</a></p>\n<p>VRプラットフォームでシングルパスインスタンシングレンダリングを行う際、 <code>GrabPass</code> を利用するようなシェーダーで <code>tex2D</code> によるテクスチャのサンプリングを行うと描画が崩れる（マルチパスレンダリングの場合は壊れない）問題と、<code>UNITY_DECLARE_SCREENSPACE_TEXTURE</code> と <code>UNITY_SAMPLE_SCREENSPACE_TEXTURE</code> を用いて <code>GrabPass</code> の生成するテクスチャをサンプリングすることでこの問題を解決する方法について紹介しています。</p>\n<h3 id=\"networkedpropertyに相当する機能のすゝめ\" style=\"position:relative;\"><a href=\"#networkedproperty%E3%81%AB%E7%9B%B8%E5%BD%93%E3%81%99%E3%82%8B%E6%A9%9F%E8%83%BD%E3%81%AE%E3%81%99%E3%82%9D%E3%82%81\" aria-label=\"networkedpropertyに相当する機能のすゝめ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NetworkedProperty（に相当する機能）のすゝめ</h3>\n<p><a href=\"https://synamon.hatenablog.com/entry/2022/06/24/173324\">NetworkedProperty（に相当する機能）のすゝめ - Synamon’s Engineer blog</a></p>\n<p>Unityでネットワークマルチプレイを実装する際に、（Photonなどにあるような）Unityのゲームオブジェクト単位で状態の同期を行う NetworkedProperty と、（ネットワークライブラリでよくある）RPC（Remote Procedure Call）との機能的な使い分けの１考察を紹介しています。</p>\n<h3 id=\"視聴者が次のステージを投票できるゲーム動画配信システムを作る\" style=\"position:relative;\"><a href=\"#%E8%A6%96%E8%81%B4%E8%80%85%E3%81%8C%E6%AC%A1%E3%81%AE%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%82%92%E6%8A%95%E7%A5%A8%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%B2%E3%83%BC%E3%83%A0%E5%8B%95%E7%94%BB%E9%85%8D%E4%BF%A1%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%92%E4%BD%9C%E3%82%8B\" aria-label=\"視聴者が次のステージを投票できるゲーム動画配信システムを作る permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>視聴者が「次のステージを投票」できるゲーム動画配信システムを作る</h3>\n<p><a href=\"https://qiita.com/Takaaki_Ichijo/items/91520ada5a1e247e2ff7\">視聴者が「次のステージを投票」できるゲーム動画配信システムを作る - Qiita</a></p>\n<p><a href=\"https://www.genvidtech.com/ja/\">Genvid</a> SDKを用いた、対戦ゲームなどで「動画の視聴者が投票によって次のステージを選択できる」ようなシステムの試作について紹介しています。</p>\n<p>JavaScrip側での投票機能と、投票機能の結果をUnityで受け取る実装についてそれぞれ解説しています。</p>\n<h3 id=\"qif-unity_editor-な-scriptableobject-のフィールドはビルド時にどうなる\" style=\"position:relative;\"><a href=\"#qif-unity_editor-%E3%81%AA-scriptableobject-%E3%81%AE%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89%E3%81%AF%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%AB%E3%81%A9%E3%81%86%E3%81%AA%E3%82%8B\" aria-label=\"qif unity_editor な scriptableobject のフィールドはビルド時にどうなる permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q:#if UNITY_EDITOR な ScriptableObject のフィールドはビルド時にどうなる？</h3>\n<p><a href=\"https://zenn.dev/gok/articles/eac077b628ad4a\">Q:#if UNITY_EDITOR な ScriptableObject のフィールドはビルド時にどうなる？</a></p>\n<p>Resources内のアセットの、<code>#if UNITY_EDITOR</code> 囲ったシリアライズ可能なプロパティを持つが、ビルド後にどのように扱われるのかについて実験的に説明しています。</p>\n<h3 id=\"新input-systemでナビゲーション機能を実装する\" style=\"position:relative;\"><a href=\"#%E6%96%B0input-system%E3%81%A7%E3%83%8A%E3%83%93%E3%82%B2%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E6%A9%9F%E8%83%BD%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B\" aria-label=\"新input systemでナビゲーション機能を実装する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新Input Systemでナビゲーション機能を実装する</h3>\n<p><a href=\"https://zenn.dev/brainvader/articles/c50dfe5ba990ff\">新Input Systemでナビゲーション機能を実装する</a></p>\n<p>新しいInput Systemを用いて、マウスホイールによるズームイン・アウト、カスタムコンポジットを用いたドラッグ、Orbit Camera（ターゲットを原点とする球を軌道とするカメラワーク）の実装方法について紹介しています。</p>\n<h3 id=\"arcore-geospatial-apiの緯度経度の情報を持つarearthmanagerについて調べてみた\" style=\"position:relative;\"><a href=\"#arcore-geospatial-api%E3%81%AE%E7%B7%AF%E5%BA%A6%E7%B5%8C%E5%BA%A6%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E6%8C%81%E3%81%A4arearthmanager%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E8%AA%BF%E3%81%B9%E3%81%A6%E3%81%BF%E3%81%9F\" aria-label=\"arcore geospatial apiの緯度経度の情報を持つarearthmanagerについて調べてみた permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ARCore Geospatial APIの緯度経度の情報を持つAREarthManagerについて調べてみた</h3>\n<p><a href=\"https://qiita.com/iwaken71/items/c6b403b39929dac5bd4b\">ARCore Geospatial APIの緯度経度の情報を持つAREarthManagerについて調べてみた - Qiita</a></p>\n<p>Googleの発表したVPS（Visual Positioning Service/System）であるARCore Geospatial APIの中で緯度と経度などを計測できる AREarthManager を用いて取得できる <code>GeospatialPose</code> のそれぞれのプロパティについて解説しています。</p>\n<h2 id=\"repositories\" style=\"position:relative;\"><a href=\"#repositories\" aria-label=\"repositories permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repositories</h2>\n<h3 id=\"runtime-monitoring\" style=\"position:relative;\"><a href=\"#runtime-monitoring\" aria-label=\"runtime monitoring permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Runtime Monitoring</h3>\n<p><a href=\"https://github.com/JohnBaracuda/Runtime-Monitoring\">JohnBaracuda/Runtime-Monitoring: Runtime Monitoring is an easy way for you to monitor the value or state of custom C# members during runtime. Just add the 'Monitor' attribute to a field, property, event, method or even class and get its value or state displayed automatically in a customizable and extendable debug UI.</a></p>\n<p>フィールドやプロパティ、イベントに <code>Monitor</code> 属性をつけておくだけで、ランタイムで値の変化などを監視するUIを提供するツール。</p>\n<h3 id=\"reeseunitydemos\" style=\"position:relative;\"><a href=\"#reeseunitydemos\" aria-label=\"reeseunitydemos permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ReeseUnityDemos</h3>\n<p><a href=\"https://github.com/reeseschultz/ReeseUnityDemos\">reeseschultz/ReeseUnityDemos: Unity packages and demos—emphasizing ECS, jobs and the Burst compiler—by Reese and others.</a></p>\n<p>DOTSベースのナビゲーションシステム・パスファインディングなどのパッケージと、それらを用いたデモプロジェクト。</p>\n<h3 id=\"sorangon-level-up-sketch-open-project\" style=\"position:relative;\"><a href=\"#sorangon-level-up-sketch-open-project\" aria-label=\"sorangon level up sketch open project permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sorangon Level Up Sketch Open Project</h3>\n<p><a href=\"https://github.com/Sorangon/Level-Up-Sketch-Open-Project\">Sorangon/Level-Up-Sketch-Open-Project</a></p>\n<p>レポジトリの作者が「Real Time VFX monthly sketch challenge #52」に応募した作品の公開プロジェクト。メッシュのボクセル化、ビュー空間でのグリッチエフェクト、データパターントレイルの３つのエフェクトや実際の作品が入ったシーンなどが用意されています。</p>\n<p>また、この作品を作る際に使用した下記ツールも合わせて提供されています。</p>\n<ul>\n<li>Gradient and curve Textures generator</li>\n<li>Gradient mapping shaders</li>\n<li>Height Fog custom render pass</li>\n</ul>","excerpt":"Unity Officials Unity フレームタイミングマネージャーによるパフォーマンスボトルネックの検出 Unity Frame Timing Managerによるパフォーマンスボトルネックの検出 | Unity Blog フレーム内のCPU・GPU時間を計測するための Frame Timing Manager というAPIについて、このAPIを用いてどのような値を計測できるのか、実際にこのAPIを用いてCPU・GPU時間をHUD…","fields":{"slug":"/project/unity-weekly/074/"},"frontmatter":{"date":"June 26, 2022","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"Frame Timing Manager、Unity Gaming Services、Memory Profiler v1.0.0-pre.2 - Unity Weekly #074","description":"2022/06/27週のUnity Weeklyです。Frame Timing Manager、Unity Gaming Services、Memory Profiler v1.0.0-pre.2、Experimental Entities 0.51、Compute Shader などについて取り上げました。","eyecatch":null}}},"pageContext":{"id":"bdd500b9-7049-53de-8fcc-73705bb23573"}},"staticQueryHashes":["1480509143","3159585216"]}