{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/110/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"unity-officials\" style=\"position:relative;\"><a href=\"#unity-officials\" aria-label=\"unity officials permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Officials</h2>\n<h3 id=\"meshfilterのfilterって何unityの名前に関するトリビア集\" style=\"position:relative;\"><a href=\"#meshfilter%E3%81%AEfilter%E3%81%A3%E3%81%A6%E4%BD%95unity%E3%81%AE%E5%90%8D%E5%89%8D%E3%81%AB%E9%96%A2%E3%81%99%E3%82%8B%E3%83%88%E3%83%AA%E3%83%93%E3%82%A2%E9%9B%86\" aria-label=\"meshfilterのfilterって何unityの名前に関するトリビア集 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MeshFilterの\"Filter\"って何！？Unityの名前に関するトリビア集</h3>\n<p><a href=\"https://www.youtube.com/watch?v=Z3ew_WUa5C0\">MeshFilterの\"Filter\"って何！？Unityの名前に関するトリビア集 - YouTube</a></p>\n<p>Unityで使われているAPI名のスペルの由来や過去のドキュメントのちょっとしたユーモア、英語綴り間違い、MeshFilterなど、Unityの名前に関するトリビアが紹介されています。</p>\n<h2 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h2>\n<h3 id=\"文章サイズの取得と自動レイアウト機能を使用してみた\" style=\"position:relative;\"><a href=\"#%E6%96%87%E7%AB%A0%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AE%E5%8F%96%E5%BE%97%E3%81%A8%E8%87%AA%E5%8B%95%E3%83%AC%E3%82%A4%E3%82%A2%E3%82%A6%E3%83%88%E6%A9%9F%E8%83%BD%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F\" aria-label=\"文章サイズの取得と自動レイアウト機能を使用してみた permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>文章サイズの取得と自動レイアウト機能を使用してみた</h3>\n<p><a href=\"https://logicalbeat.jp/blog/11059/\">【Unity】文章サイズの取得と自動レイアウト機能を使用してみた – 株式会社ロジカルビート</a></p>\n<p>TextMeshProのテキストで、文章の長さからテキストボックスのサイズを決める方法と、それを自動でやるための自動レイアウト機能と調整のためのパラメーターについて解説しています。。</p>\n<h3 id=\"shadergraphで作るセル調爆発エフェクト\" style=\"position:relative;\"><a href=\"#shadergraph%E3%81%A7%E4%BD%9C%E3%82%8B%E3%82%BB%E3%83%AB%E8%AA%BF%E7%88%86%E7%99%BA%E3%82%A8%E3%83%95%E3%82%A7%E3%82%AF%E3%83%88\" aria-label=\"shadergraphで作るセル調爆発エフェクト permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ShaderGraphで作るセル調爆発エフェクト</h3>\n<p><a href=\"https://note.g2-studios.net/n/nb55403db9c4a\">ShaderGraphで作るセル調爆発エフェクト｜G2 Studios株式会社</a></p>\n<p>セルルック調の爆発エフェクトを制作をBlendarとShaderGraphを用いて実装する方法について紹介しています。\nBlendarで制作した炎と煙メッシュでの制作方法と、ShaderGraphでのセルルック調な見た目やリムライト、ディゾルブの実現方法とその調整方法についてそれぞれ解説しています。</p>\n<h3 id=\"unitywebrequestのdownloadhandlernativedataを用いたコピーの回避による最適化について\" style=\"position:relative;\"><a href=\"#unitywebrequest%E3%81%AEdownloadhandlernativedata%E3%82%92%E7%94%A8%E3%81%84%E3%81%9F%E3%82%B3%E3%83%94%E3%83%BC%E3%81%AE%E5%9B%9E%E9%81%BF%E3%81%AB%E3%82%88%E3%82%8B%E6%9C%80%E9%81%A9%E5%8C%96%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\" aria-label=\"unitywebrequestのdownloadhandlernativedataを用いたコピーの回避による最適化について permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UnityWebRequestのDownloadHandler.nativeDataを用いたコピーの回避による最適化について</h3>\n<p><a href=\"https://blog.yucchiy.com/2023/02/unitywebrequest-nativearray-optimization/\">UnityWebRequestのDownloadHandler.nativeDataを用いたコピーの回避による最適化について | Yucchiy's Note</a></p>\n<p>UnityWebRequestの<code>DownloadHandler.nativeData</code>と<code>Span&#x3C;T></code>を用いて、シリアライザーなどへ渡すデータのコピーを回避する最適化手法について紹介しています。</p>\n<h3 id=\"コルーチンからunitaskに乗り換えるときに気をつけるべきところ\" style=\"position:relative;\"><a href=\"#%E3%82%B3%E3%83%AB%E3%83%BC%E3%83%81%E3%83%B3%E3%81%8B%E3%82%89unitask%E3%81%AB%E4%B9%97%E3%82%8A%E6%8F%9B%E3%81%88%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AB%E6%B0%97%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B%E3%81%B9%E3%81%8D%E3%81%A8%E3%81%93%E3%82%8D\" aria-label=\"コルーチンからunitaskに乗り換えるときに気をつけるべきところ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>コルーチンからUniTaskに乗り換えるときに気をつけるべきところ</h3>\n<p><a href=\"https://qiita.com/toRisouP/items/14bae006f7604a118df6\">【Unity】コルーチンからUniTaskに乗り換えるときに気をつけるべきところ - Qiita</a></p>\n<p>コルーチンの実装をUniTaskへ置き換える際に気をつけておいたほうが良い、処理の寿命の管理と処理を合わせるためのCancellationTokenの扱いとキャンセル処理の書き方について解説しています。</p>\n<h3 id=\"接空間を用いたinteriormapを幾何的に理解する\" style=\"position:relative;\"><a href=\"#%E6%8E%A5%E7%A9%BA%E9%96%93%E3%82%92%E7%94%A8%E3%81%84%E3%81%9Finteriormap%E3%82%92%E5%B9%BE%E4%BD%95%E7%9A%84%E3%81%AB%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B\" aria-label=\"接空間を用いたinteriormapを幾何的に理解する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>接空間を用いたInteriorMapを幾何的に理解する</h3>\n<p><a href=\"https://zenn.dev/norainu/articles/00f6be924feee1\">接空間を用いたInteriorMapを幾何的に理解する(Unity)</a></p>\n<p>接空間を用いたinterior mappingについて、<a href=\"https://note.g2-studios.net/n/n4d8035653aa5\">G2 studio さんの元記事</a>のShaderGraphの実装を解説する形で紹介しています。</p>\n<h2 id=\"hot-reload-for-unity\" style=\"position:relative;\"><a href=\"#hot-reload-for-unity\" aria-label=\"hot reload for unity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hot Reload For Unity</h2>\n<p><a href=\"https://immersivevrtools.com/Blog/how-to-build-hot-reload-functionality-for-unity\">How to build Hot Reload For Unity - Immersive VR Tools</a>\n<a href=\"https://immersivevrtools.com/Blog/how-to-build-unity-hot-reload-on-device\">How to build Hot Reload For Unity and run it on device - Immersive VR Tools</a></p>\n<p>UnityでC#コードのホットリロードを実現する手法と、実機上で動くUnityアプリケーションに対してホットリロードを実現する方法についてそれぞれ紹介しています。</p>\n<p>実装は<a href=\"https://github.com/handzlikchris/BuildingHotReloadForUnity\">handzlikchris/BuildingHotReloadForUnity</a>にて公開しています。</p>\n<h3 id=\"ログのスタックトレースから関数を除外できるようになった\" style=\"position:relative;\"><a href=\"#%E3%83%AD%E3%82%B0%E3%81%AE%E3%82%B9%E3%82%BF%E3%83%83%E3%82%AF%E3%83%88%E3%83%AC%E3%83%BC%E3%82%B9%E3%81%8B%E3%82%89%E9%96%A2%E6%95%B0%E3%82%92%E9%99%A4%E5%A4%96%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F\" aria-label=\"ログのスタックトレースから関数を除外できるようになった permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ログのスタックトレースから関数を除外できるようになった</h3>\n<p><a href=\"https://baba-s.hatenablog.com/entry/2023/02/24/090000\">【Unity】2022.2 新機能 - ログのスタックトレースから関数を除外できるようになった - コガネブログ</a></p>\n<p>Unity2022.2に入った、コンソール表示のスタックトレースの非表示オプションについて紹介しています。</p>\n<h3 id=\"wind-waker-style-stencil-buffer-lights-urp--birp\" style=\"position:relative;\"><a href=\"#wind-waker-style-stencil-buffer-lights-urp--birp\" aria-label=\"wind waker style stencil buffer lights urp  birp permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wind Waker Style Stencil Buffer Lights (URP &#x26; BIRP)</h3>\n<p><a href=\"https://www.patreon.com/posts/wind-waker-style-78831006\">Wind Waker Style Stencil Buffer Lights (URP &#x26; BIRP) | Minions Art</a></p>\n<p>風のタクトのようなライト（たいまつの光が壁を照らすようなライティング）をステンシルバッファーを用いてどのように実現するかについて紹介しています。</p>\n<h3 id=\"regexmatchはインスタンスメソッドを使うとgcallocと処理速度の面で有利\" style=\"position:relative;\"><a href=\"#regexmatch%E3%81%AF%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8gcalloc%E3%81%A8%E5%87%A6%E7%90%86%E9%80%9F%E5%BA%A6%E3%81%AE%E9%9D%A2%E3%81%A7%E6%9C%89%E5%88%A9\" aria-label=\"regexmatchはインスタンスメソッドを使うとgcallocと処理速度の面で有利 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Regex.Matchはインスタンスメソッドを使うとGC.Allocと処理速度の面で有利</h3>\n<p><a href=\"https://www.hanachiru-blog.com/entry/2023/02/20/120000\">【C#, Unity】Regex.Matchはインスタンスメソッドを使うとGC.Allocと処理速度の面で有利 - はなちるのマイノート</a></p>\n<p>Regex.Matchの静的メソッド呼び出しとインスタンスメソッド呼び出しの違いと、インスタンスを使い回すことによるGC.Alloc削減の最適化について紹介しています。</p>\n<h3 id=\"procedural-stylized-sky--clouds-set-up-in-unity\" style=\"position:relative;\"><a href=\"#procedural-stylized-sky--clouds-set-up-in-unity\" aria-label=\"procedural stylized sky  clouds set up in unity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Procedural Stylized Sky &#x26; Clouds Set Up in Unity</h3>\n<p><a href=\"https://80.lv/articles/procedural-stylized-sky-clouds-set-up-in-unity/\">Procedural Stylized Sky &#x26; Clouds Set Up in Unity</a></p>\n<p>Amplify Shader Editorを用いて、プロシージャルに空と雲を描画する方法を紹介しています。</p>\n<h3 id=\"c-listtcontainsの罠間抜けなだけです\" style=\"position:relative;\"><a href=\"#c-listtcontains%E3%81%AE%E7%BD%A0%E9%96%93%E6%8A%9C%E3%81%91%E3%81%AA%E3%81%A0%E3%81%91%E3%81%A7%E3%81%99\" aria-label=\"c listtcontainsの罠間抜けなだけです permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>C# List<T>.Contains()の罠（間抜けなだけです）</h3>\n<p><a href=\"https://qiita.com/Narinii/items/9e8db766fc6f88069afe\">C# List<T>.Contains()の罠（間抜けなだけです） - Qiita</a></p>\n<p>Containsに参照型を渡す際の挙動の注意点とrecord利用による<code>IEquatable&#x3C;T></code>の自動実装についてそれぞれ紹介しています。</p>\n<h3 id=\"refactoring-bloated-code-in-c\" style=\"position:relative;\"><a href=\"#refactoring-bloated-code-in-c\" aria-label=\"refactoring bloated code in c permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Refactoring Bloated Code in C#</h3>\n<p><a href=\"https://code-maze.com/csharp-refactoring-bloated-code/?\">Refactoring Bloated Code in C# - Code Maze</a></p>\n<p>いくつかのBloatedなコード（ここでは不必要にコードベースが大きくなってしまうようなコードを指す）を、可読性・保守性を高めるためのリファクタリング手法について紹介しています。</p>\n<h3 id=\"モバイルゲームを全画面で全機種対応させる\" style=\"position:relative;\"><a href=\"#%E3%83%A2%E3%83%90%E3%82%A4%E3%83%AB%E3%82%B2%E3%83%BC%E3%83%A0%E3%82%92%E5%85%A8%E7%94%BB%E9%9D%A2%E3%81%A7%E5%85%A8%E6%A9%9F%E7%A8%AE%E5%AF%BE%E5%BF%9C%E3%81%95%E3%81%9B%E3%82%8B\" aria-label=\"モバイルゲームを全画面で全機種対応させる permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>モバイルゲームを全画面で全機種対応させる</h3>\n<p><a href=\"https://qiita.com/kiku09020/items/7c4a66d6c8ea7c500a09\">【Unity】モバイルゲームを全画面で全機種対応させる - Qiita</a></p>\n<p>アプリを複数解像度およびSafeAreaに対応する一手法とDevice Simulatorによるデバック方法についてそれぞれ紹介しています。</p>\n<h3 id=\"fake-3d-parallax-effect-using-shader--pre-generated-depth-map\" style=\"position:relative;\"><a href=\"#fake-3d-parallax-effect-using-shader--pre-generated-depth-map\" aria-label=\"fake 3d parallax effect using shader  pre generated depth map permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fake 3D Parallax Effect using Shader &#x26; (Pre-generated) Depth Map</h3>\n<p><a href=\"https://unitycoder.com/blog/2023/02/22/fake-3d-parallax-effect-using-shader-pre-generated-depth-map/\">Fake 3D Parallax Effect using Shader &#x26; (Pre-generated) Depth Map</a></p>\n<p>事前に生成してあるデプスマップを利用して、視差効果を実装する方法についてその実装を動画付きで紹介しています。</p>\n<h3 id=\"particlesystem-の再生位置を簡単に変えられる拡張メソッド\" style=\"position:relative;\"><a href=\"#particlesystem-%E3%81%AE%E5%86%8D%E7%94%9F%E4%BD%8D%E7%BD%AE%E3%82%92%E7%B0%A1%E5%8D%98%E3%81%AB%E5%A4%89%E3%81%88%E3%82%89%E3%82%8C%E3%82%8B%E6%8B%A1%E5%BC%B5%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89\" aria-label=\"particlesystem の再生位置を簡単に変えられる拡張メソッド permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ParticleSystem の再生位置を簡単に変えられる拡張メソッド</h3>\n<p><a href=\"https://qiita.com/Yamara/items/221868b0decc6364b56f\">【Unity】ParticleSystem の再生位置を簡単に変えられる拡張メソッド - Qiita</a></p>\n<p>ParticleSystemの再生を任意秒進めるSkipメソッドの実装について、ParticleSystemのSimulateメソッドの挙動と合わせて紹介しています。</p>\n<h3 id=\"パスに沿った円柱cylinder状のメッシュ生成\" style=\"position:relative;\"><a href=\"#%E3%83%91%E3%82%B9%E3%81%AB%E6%B2%BF%E3%81%A3%E3%81%9F%E5%86%86%E6%9F%B1cylinder%E7%8A%B6%E3%81%AE%E3%83%A1%E3%83%83%E3%82%B7%E3%83%A5%E7%94%9F%E6%88%90\" aria-label=\"パスに沿った円柱cylinder状のメッシュ生成 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>パスに沿った円柱(Cylinder)状のメッシュ生成</h3>\n<p><a href=\"https://qiita.com/okome184/items/1c790f0924dcb824b888\">[Unity] パスに沿った円柱(Cylinder)状のメッシュ生成 - Qiita</a>\n<a href=\"https://qiita.com/okome184/items/6da40073f033d6fb6e8c\">[Unity] ドローイングでキューブ状のメッシュ生成 - Qiita</a></p>\n<p>パスに沿って円柱の形をしたメッシュを生成する方法について紹介しています。またこの実装を利用して、ドローイングアプリのように、マウスの軌跡に沿ってメッシュを生成する方法についても合わせて触れています。</p>\n<h3 id=\"depth-of-field\" style=\"position:relative;\"><a href=\"#depth-of-field\" aria-label=\"depth of field permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Depth of field</h3>\n<p><a href=\"https://echoesofsomewhere.com/2023/02/23/depth-of-field/\">Depth of field</a></p>\n<p>標準のSSAOがPostProcessVolumeのDoFで利用するデプステクスチャを上書きすることで、DoFの効果が効かない不具合の共有と、DoFの距離をマウス入力を元にレイキャストを発行し、その衝突した距離から計算する方法について触れています。</p>\n<h3 id=\"ランタイムで指定したフォルダをファイラーで開くmacwindows\" style=\"position:relative;\"><a href=\"#%E3%83%A9%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%81%A7%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9F%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E3%82%92%E3%83%95%E3%82%A1%E3%82%A4%E3%83%A9%E3%83%BC%E3%81%A7%E9%96%8B%E3%81%8Fmacwindows\" aria-label=\"ランタイムで指定したフォルダをファイラーで開くmacwindows permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ランタイムで指定したフォルダをファイラーで開く（Mac/Windows）</h3>\n<p><a href=\"https://qiita.com/nkjzm/items/7a3bac223a8ad89fb520\">【Unity】ランタイムで指定したフォルダをファイラーで開く（Mac/Windows） - Qiita</a></p>\n<p>Unityアプリ上で、WindowsおよびmacOSの特定フォルダーをエクスプローラーやFinderで開く方法について紹介しています。</p>\n<h2 id=\"repositories\" style=\"position:relative;\"><a href=\"#repositories\" aria-label=\"repositories permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repositories</h2>\n<h3 id=\"vcontainer\" style=\"position:relative;\"><a href=\"#vcontainer\" aria-label=\"vcontainer permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VContainer</h3>\n<p><a href=\"https://github.com/hadashiA/VContainer\">hadashiA/VContainer: The extra fast, minimum code size, GC-free DI (Dependency Injection) library running on Unity Game Engine.</a></p>\n<p>高速なUnity用DIライブラリ。</p>\n<p>v1.13.0で、事前生成コードをILによるコード生成からSource Generatorへの実装の置き換えが行われ、あわせてIL生成機能はdeprecated扱いになりました。</p>\n<h3 id=\"bodypixsample\" style=\"position:relative;\"><a href=\"#bodypixsample\" aria-label=\"bodypixsample permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BodyPixSample</h3>\n<p><a href=\"https://github.com/keijiro/BodyPixSample\">keijiro/BodyPixSample: Unity BodyPix samples</a></p>\n<p><a href=\"https://github.com/keijiro/BodyPixBarracuda\">BodyPixBarracuda</a>を用いたサンプル実装。<a href=\"https://github.com/keijiro/BodyPixBarracuda\">BodyPixBarracuda</a>は、<a href=\"https://blog.tensorflow.org/2019/11/updated-bodypix-2.html\">BodyPix</a>というリアルタイムな人物領域と姿勢推定アルゴリズムのモデルをBarracuda上で動作させたもの。</p>\n<h3 id=\"kshading\" style=\"position:relative;\"><a href=\"#kshading\" aria-label=\"kshading permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kShading</h3>\n<p><a href=\"https://github.com/Kink3d/kShading?\">Kink3d/kShading: Shading models for Unity’s Universal Render Pipeline.</a></p>\n<p>URPのためのシェーディングモデル。異方性フィルターやクリアコート、サブフェース散乱などを含む物理ベースなLitシェーダーと、Litシェーダー＋近似BSDFを使用するセルスタイルシェーダーToon Litの2つのシェーダー実装を含みます。</p>\n<h3 id=\"unity-texture-packer\" style=\"position:relative;\"><a href=\"#unity-texture-packer\" aria-label=\"unity texture packer permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity-Texture-Packer</h3>\n<p><a href=\"https://github.com/JMargevics/Unity-Texture-Packer?\">JMargevics/Unity-Texture-Packer: Pack any color data into texture channels.</a></p>\n<p>任意の色情報をテクスチャのチャンネルに埋め込めるエディター拡張。</p>\n<h3 id=\"yukatascript\" style=\"position:relative;\"><a href=\"#yukatascript\" aria-label=\"yukatascript permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>YukataScript</h3>\n<p><a href=\"https://github.com/Akeit0/YukataScript\">Akeit0/YukataScript: Very Fast Pure C# Script Language for Unity/C# (IL2CPP is supported)</a></p>\n<p>Unity/C#向けの高速なスクリプト言語。</p>\n<p>このライブラリ著者によるこのスクリプトの解説は、「<a href=\"https://zenn.dev/aakei/articles/006ffaf494c3ae\">Unity/C#のための静的型付けスクリプト言語「YukataScript」</a>」より確認できます。</p>\n<h3 id=\"statemachineunity\" style=\"position:relative;\"><a href=\"#statemachineunity\" aria-label=\"statemachineunity permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StateMachineUnity</h3>\n<p><a href=\"https://github.com/nicholas-maltbie/StateMachineUnity\">nicholas-maltbie/StateMachineUnity: State Machine Utility Package for Unity Projects</a></p>\n<p>Unity向けのStateMachine実装。</p>\n<p><a href=\"https://github.com/nicholas-maltbie/StateMachineUnity/blob/main/Assets/Samples/ExampleFSM/Scripts/ExampleSMAnim.cs#L57\">こちらのように</a>クラスとアトリビュートを用いてステートマシンを構築する。</p>\n<p>それぞれの状態に対するAnimatorControllerの制御も合わせて用意されています。</p>","excerpt":"Unity Officials MeshFilterの\"Filter\"って何！？Unityの名前に関するトリビア集 MeshFilterの\"Filter\"って何！？Unityの名前に関するトリビア集 - YouTube Unityで使われているAPI名のスペルの由来や過去のドキュメントのちょっとしたユーモア、英語綴り間違い、MeshFilterなど、Unityの名前に関するトリビアが紹介されています。 Articles 文章サイズの取得と自動レイアウト機能を使用してみた 【Unity…","fields":{"slug":"/project/unity-weekly/110/"},"frontmatter":{"date":"February 27, 2023","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"Unity Weekly 110","description":"2023/02/27週のUnity Weeklyです。","eyecatch":null}}},"pageContext":{"id":"6d6543fe-8260-5470-89dd-4ad0222a4444"}},"staticQueryHashes":["1480509143","3159585216"]}