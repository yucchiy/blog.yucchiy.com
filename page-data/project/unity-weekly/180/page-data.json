{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/180/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"slides\" style=\"position:relative;\"><a href=\"#slides\" aria-label=\"slides permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Slides</h2>\n<h3 id=\"caunity-8\" style=\"position:relative;\"><a href=\"#caunity-8\" aria-label=\"caunity 8 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CA.Unity #8</h3>\n<p><a href=\"https://cyberagent.connpass.com/event/315789/\">CA.unity #8</a>の登壇資料および動画が、Unity Learning Materialsにて公開されています。</p>\n<ul>\n<li><a href=\"https://learning.unity3d.jp/10126/\">学園アイドルマスターのアイドルをより輝かせるライティング手法 | Unity Learning Materials</a></li>\n<li><a href=\"https://learning.unity3d.jp/10120/\">SourceGeneratorで始めるコード自動生成 | Unity Learning Materials</a></li>\n<li><a href=\"https://learning.unity3d.jp/10122/\">スマートフォンGPUの特性を解析！ 社内で実施予定のGPUパフォーマンスチューニング研修を紹介します | Unity Learning Materials</a></li>\n<li><a href=\"https://learning.unity3d.jp/10097/\">Addressablesよもやま話 | Unity Learning Materials</a></li>\n<li><a href=\"https://learning.unity3d.jp/10129/\">UI Toolkitで自由にUIを表現できるMeshGenerationContextの説明とContextCircleMenuの実装例 | Unity Learning Materials</a></li>\n<li><a href=\"https://learning.unity3d.jp/10131/\">3D Gaussian Splatting(3DGS)を使って、誰でも簡単にリッチなゲーム空間を作ろう | Unity Learning Materials</a></li>\n</ul>\n<h2 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h2>\n<h3 id=\"input-systemでシングルタップとマルチタップを判別する\" style=\"position:relative;\"><a href=\"#input-system%E3%81%A7%E3%82%B7%E3%83%B3%E3%82%B0%E3%83%AB%E3%82%BF%E3%83%83%E3%83%97%E3%81%A8%E3%83%9E%E3%83%AB%E3%83%81%E3%82%BF%E3%83%83%E3%83%97%E3%82%92%E5%88%A4%E5%88%A5%E3%81%99%E3%82%8B\" aria-label=\"input systemでシングルタップとマルチタップを判別する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Input Systemでシングルタップとマルチタップを判別する</h3>\n<p><a href=\"https://nekojara.city/unity-input-system-tap-and-multi-tap\">【Unity】Input Systemでシングルタップとマルチタップを判別する | ねこじゃらシティ</a></p>\n<p>Input SystemのInteractionを用いて、シングルタップとマルチタップを判別する方法を紹介しています。</p>\n<h3 id=\"anjinを利用したチュートリアル自動テストtips\" style=\"position:relative;\"><a href=\"#anjin%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%9F%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB%E8%87%AA%E5%8B%95%E3%83%86%E3%82%B9%E3%83%88tips\" aria-label=\"anjinを利用したチュートリアル自動テストtips permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Anjinを利用したチュートリアル自動テストTips</h3>\n<p><a href=\"https://technote.qualiarts.jp/article/78/\">Anjinを利用したチュートリアル自動テストTips | QualiArtsエンジニアブログ</a></p>\n<p>チュートリアルを自動テストする目的と、Anjinを利用して自動テストを実現する際のTipsを紹介しています。</p>\n<h3 id=\"半透明effectにdepthoffieldを適用してみた\" style=\"position:relative;\"><a href=\"#%E5%8D%8A%E9%80%8F%E6%98%8Eeffect%E3%81%ABdepthoffield%E3%82%92%E9%81%A9%E7%94%A8%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F\" aria-label=\"半透明effectにdepthoffieldを適用してみた permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>半透明EffectにDepthOfFieldを適用してみた</h3>\n<p><a href=\"https://zenn.dev/happy_elements/articles/82acdf2785d23d\">半透明EffectにDepthOfFieldを適用してみた</a></p>\n<p>Transparent用のDepth情報をTextureに書き込むことで、半透明のエフェクトに独自のDOFをかける方法について紹介しています。</p>\n<h3 id=\"runtimeでcsファイルをroslynで解析してリフレクションで実行する\" style=\"position:relative;\"><a href=\"#runtime%E3%81%A7cs%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92roslyn%E3%81%A7%E8%A7%A3%E6%9E%90%E3%81%97%E3%81%A6%E3%83%AA%E3%83%95%E3%83%AC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B\" aria-label=\"runtimeでcsファイルをroslynで解析してリフレクションで実行する permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RuntimeでcsファイルをRoslynで解析してリフレクションで実行する</h3>\n<p><a href=\"https://www.hanachiru-blog.com/entry/2024/07/01/123000\">【C#】RuntimeでcsファイルをRoslynで解析してリフレクションで実行する - はなちるのマイノート</a></p>\n<p>C#のソースコードを動的にコンパイルして実行する方法について紹介しています。</p>\n<h3 id=\"unityで最新のcc13-previewもを使う方法\" style=\"position:relative;\"><a href=\"#unity%E3%81%A7%E6%9C%80%E6%96%B0%E3%81%AEcc13-preview%E3%82%82%E3%82%92%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95\" aria-label=\"unityで最新のcc13 previewもを使う方法 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unityで最新の\"C#\"(C#13 previewも)を使う方法</h3>\n<p><a href=\"https://zenn.dev/aakei/articles/fa661becc25ba1\">Unityで最新の\"C#\"(C#13 previewも)を使う方法</a></p>\n<p>Unity下で、C#10・11およびC#12以降を利用する方法について紹介しています。</p>\n<h3 id=\"rendermeshindirectとcomputeshaderでまつぼっくり螺旋を描く\" style=\"position:relative;\"><a href=\"#rendermeshindirect%E3%81%A8computeshader%E3%81%A7%E3%81%BE%E3%81%A4%E3%81%BC%E3%81%A3%E3%81%8F%E3%82%8A%E8%9E%BA%E6%97%8B%E3%82%92%E6%8F%8F%E3%81%8F\" aria-label=\"rendermeshindirectとcomputeshaderでまつぼっくり螺旋を描く permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RenderMeshIndirectとComputeShaderでまつぼっくり螺旋を描く</h3>\n<p><a href=\"https://qiita.com/AtsuAtsu0120/items/f92b750f1fa28fd52550\">【Unity】RenderMeshIndirectとComputeShaderでまつぼっくり螺旋を描く with URP【C# / HLSL】 #GPU - Qiita</a></p>\n<p>RenderMesh APIおよびComputeShaderを使用して、まつぼっくり螺旋を描画する方法を紹介しています。</p>\n<h3 id=\"cognitivecomplexityを導入してコードの複雑さの定量的な計測をしてみる\" style=\"position:relative;\"><a href=\"#cognitivecomplexity%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%97%E3%81%A6%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AE%E8%A4%87%E9%9B%91%E3%81%95%E3%81%AE%E5%AE%9A%E9%87%8F%E7%9A%84%E3%81%AA%E8%A8%88%E6%B8%AC%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\" aria-label=\"cognitivecomplexityを導入してコードの複雑さの定量的な計測をしてみる permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CognitiveComplexityを導入してコードの複雑さの定量的な計測をしてみる</h3>\n<p><a href=\"https://myudon.hatenablog.com/entry/2024/07/06/165813\">【Rider】CognitiveComplexityを導入してコードの複雑さの定量的な計測をしてみる - うどんてっくメモ</a></p>\n<p>Rider上でCognitiveComplexityによってコードの複雑さを表示する方法について紹介しています。</p>","excerpt":"Slides CA.Unity #8 CA.unity #8の登壇資料および動画が、Unity Learning Materialsにて公開されています。 学園アイドルマスターのアイドルをより輝かせるライティング手法 | Unity Learning Materials SourceGeneratorで始めるコード自動生成 | Unity Learning Materials スマートフォンGPUの特性を解析！ 社内で実施予定のGPUパフォーマンスチューニング研修を紹介します | Unity…","fields":{"slug":"/project/unity-weekly/180/"},"frontmatter":{"date":"July 08, 2024","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"Unity Weekly 180","description":"2024/07/08週のUnity Weeklyです。CA.Unity #8、Input System、Anjinなどについて取り上げています。","eyecatch":null}}},"pageContext":{"id":"c77f0b97-7710-5cc8-856b-8a444cf43481"}},"staticQueryHashes":["1480509143","3159585216"]}