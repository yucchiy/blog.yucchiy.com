{"componentChunkName":"component---src-templates-post-tsx","path":"/project/unity-weekly/145/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"unity-officials\" style=\"position:relative;\"><a href=\"#unity-officials\" aria-label=\"unity officials permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Officials</h2>\n<h3 id=\"porting-unity-to-coreclr\" style=\"position:relative;\"><a href=\"#porting-unity-to-coreclr\" aria-label=\"porting unity to coreclr permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Porting Unity to CoreCLR</h3>\n<p><a href=\"https://blog.unity.com/engine-platform/porting-unity-to-coreclr\">Porting Unity to CoreCLR | Unity Blog</a></p>\n<p>UnityのCoreCLR移植における、ネイティブコードとの連携のためのガベージコレクションの修正について紹介しています。</p>\n<h3 id=\"introducing-community-solutions-to-manage-toxicity-in-gaming\" style=\"position:relative;\"><a href=\"#introducing-community-solutions-to-manage-toxicity-in-gaming\" aria-label=\"introducing community solutions to manage toxicity in gaming permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introducing Community Solutions to manage toxicity in gaming</h3>\n<p><a href=\"https://blog.unity.com/games/toxicity-gaming-escalating-solutions-for-safe-engaged-communities\">Introducing Community Solutions to manage toxicity in gaming | Unity Blog</a></p>\n<p>ボイスチャットやAIによる毒性検出、モデレーションやフレンド管理、リーダーボード等などを提供するUnity Community Solutionsについて紹介しています。</p>\n<h3 id=\"使ってみようui-toolkit---後半\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86ui-toolkit---%E5%BE%8C%E5%8D%8A\" aria-label=\"使ってみようui toolkit   後半 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使ってみようUI Toolkit - 後半</h3>\n<p><a href=\"https://www.youtube.com/watch?v=RxWqTZDjkRI\">使ってみようUI Toolkit - 後半 - YouTube</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=R4xd7FGNYqs\">前半</a>で作成したカード型のUIにアニメーションを設定する方法や、複数のUIを配置する際の設定、UIをプログラムから配置する方法についてそれぞれ解説しています。</p>\n<p>また、このチュートリアルで扱ったサンプルは、<a href=\"https://github.com/ikewada/UIToolkitExamples\">UIToolkitExamples</a>として公開されています。</p>\n<h2 id=\"articles\" style=\"position:relative;\"><a href=\"#articles\" aria-label=\"articles permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Articles</h2>\n<h3 id=\"unity-test-frameworkで利用できるカスタム属性の実装方法\" style=\"position:relative;\"><a href=\"#unity-test-framework%E3%81%A7%E5%88%A9%E7%94%A8%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E5%B1%9E%E6%80%A7%E3%81%AE%E5%AE%9F%E8%A3%85%E6%96%B9%E6%B3%95\" aria-label=\"unity test frameworkで利用できるカスタム属性の実装方法 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Test Frameworkで利用できるカスタム属性の実装方法</h3>\n<p><a href=\"https://www.nowsprinting.com/entry/2023/10/27/063703\">Unity Test Frameworkで利用できるカスタム属性の実装方法 - やらなイカ？</a></p>\n<p>Unity Test Frameworkでにおけるカスタム属性の実装方法と、いくつかのTipsを紹介しています。</p>\n<h3 id=\"unity-package-managerupmが認識する自作packageを作成しgit経由でインストールできるまで整える\" style=\"position:relative;\"><a href=\"#unity-package-managerupm%E3%81%8C%E8%AA%8D%E8%AD%98%E3%81%99%E3%82%8B%E8%87%AA%E4%BD%9Cpackage%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97git%E7%B5%8C%E7%94%B1%E3%81%A7%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%BE%E3%81%A7%E6%95%B4%E3%81%88%E3%82%8B\" aria-label=\"unity package managerupmが認識する自作packageを作成しgit経由でインストールできるまで整える permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unity Package Manager(UPM)が認識する自作Packageを作成し、git経由でインストールできるまで整える</h3>\n<p><a href=\"https://www.hanachiru-blog.com/entry/2023/10/23/120000\">【Unity】Unity Package Manager(UPM)が認識する自作Packageを作成し、git経由でインストールできるまで整える - はなちるのマイノート</a></p>\n<p>git URL経由で自作したパッケージをUnity Package Managerに配布する方法を紹介しています。</p>\n<h3 id=\"シンプルなdiコンテナを自作してみた\" style=\"position:relative;\"><a href=\"#%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AAdi%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%92%E8%87%AA%E4%BD%9C%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F\" aria-label=\"シンプルなdiコンテナを自作してみた permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>シンプルなDIコンテナを自作してみた</h3>\n<p><a href=\"https://qiita.com/ogix/items/0e6e98a058a608cf712c\">【Unity】シンプルなDIコンテナを自作してみた #C# - Qiita</a></p>\n<p>簡単なDIコンテナのフルスクラッチを題材に、DIコンテナの内部実装について紹介しています。</p>\n<h3 id=\"タグをインスペクターから選択可能にする\" style=\"position:relative;\"><a href=\"#%E3%82%BF%E3%82%B0%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%9A%E3%82%AF%E3%82%BF%E3%83%BC%E3%81%8B%E3%82%89%E9%81%B8%E6%8A%9E%E5%8F%AF%E8%83%BD%E3%81%AB%E3%81%99%E3%82%8B\" aria-label=\"タグをインスペクターから選択可能にする permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>タグをインスペクターから選択可能にする</h3>\n<p><a href=\"https://nekojara.city/unity-tag-inspector\">【Unity】タグをインスペクターから選択可能にする | ねこじゃらシティ</a></p>\n<p>Unity標準のタグをインスペクターから指定するための<code>EditorGUI.TagField</code>の紹介と、シリアライズ可能なフィールドに対して、OdinInspectorのようにカスタム属性を指定することでインスペクター上でタグ選択のGUIを表示するような実装について解説しています。</p>\n<h3 id=\"空のgameobjectを可視化するgizmos\" style=\"position:relative;\"><a href=\"#%E7%A9%BA%E3%81%AEgameobject%E3%82%92%E5%8F%AF%E8%A6%96%E5%8C%96%E3%81%99%E3%82%8Bgizmos\" aria-label=\"空のgameobjectを可視化するgizmos permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>空のGameObjectを可視化する【Gizmos】</h3>\n<p><a href=\"https://raspberly.hateblo.jp/entry/UnitySceneGizmos\">【Unity】空のGameObjectを可視化する【Gizmos】 - Raspberlyのブログ</a></p>\n<p>Gizmosを用いて、空のゲームオブジェクトをプリミティブ（SphereやCubeなど）やテキストで可視化する方法について紹介しています。</p>\n<h3 id=\"ulipsyncで事前録音した音声からtimelineでvrmモデルを口パク\" style=\"position:relative;\"><a href=\"#ulipsync%E3%81%A7%E4%BA%8B%E5%89%8D%E9%8C%B2%E9%9F%B3%E3%81%97%E3%81%9F%E9%9F%B3%E5%A3%B0%E3%81%8B%E3%82%89timeline%E3%81%A7vrm%E3%83%A2%E3%83%87%E3%83%AB%E3%82%92%E5%8F%A3%E3%83%91%E3%82%AF\" aria-label=\"ulipsyncで事前録音した音声からtimelineでvrmモデルを口パク permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>uLipSyncで事前録音した音声からTimelineでVRMモデルを口パク</h3>\n<p><a href=\"https://bibinbaleo.hatenablog.com/entry/2023/10/23/173210\">uLipSyncで事前録音した音声からTimelineでVRMモデルを口パク - トマシープが学ぶ</a></p>\n<p>uLipSyncを用いて、事前に録音した音声からVRMモデルを口パクする方法を紹介しています。</p>\n<h3 id=\"mrtk3-x-meta-quest3-でパススルー\" style=\"position:relative;\"><a href=\"#mrtk3-x-meta-quest3-%E3%81%A7%E3%83%91%E3%82%B9%E3%82%B9%E3%83%AB%E3%83%BC\" aria-label=\"mrtk3 x meta quest3 でパススルー permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MRTK3 x Meta Quest3 でパススルー</h3>\n<p><a href=\"https://zenn.dev/pinboke/articles/mrtk3-quest3-passthrough\">MRTK3 x Meta Quest3 でパススルー</a></p>\n<p>Meta Quest3でパススルーを実現するためのMKTR3の導入から設定を紹介しています。</p>\n<h3 id=\"ci-で-reshaper-command-line-tools-での-unity-の静的コード検査\" style=\"position:relative;\"><a href=\"#ci-%E3%81%A7-reshaper-command-line-tools-%E3%81%A7%E3%81%AE-unity-%E3%81%AE%E9%9D%99%E7%9A%84%E3%82%B3%E3%83%BC%E3%83%89%E6%A4%9C%E6%9F%BB\" aria-label=\"ci で reshaper command line tools での unity の静的コード検査 permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI で ReShaper command line tools での Unity の静的コード検査</h3>\n<p><a href=\"https://zenn.dev/masakura/articles/60e502a275e9c3\">CI で ReShaper command line tools での Unity の静的コード検査</a></p>\n<p>ReSharperのコマンドラインツールをCI上で実行するための各種導入手順や、GitLab Code Qualityによる静的解析の実行方法について紹介しています。</p>\n<h3 id=\"unityで投影テクスチャマッピングシャドウ\" style=\"position:relative;\"><a href=\"#unity%E3%81%A7%E6%8A%95%E5%BD%B1%E3%83%86%E3%82%AF%E3%82%B9%E3%83%81%E3%83%A3%E3%83%9E%E3%83%83%E3%83%94%E3%83%B3%E3%82%B0%E3%82%B7%E3%83%A3%E3%83%89%E3%82%A6\" aria-label=\"unityで投影テクスチャマッピングシャドウ permalink\" class=\"header-link before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unityで投影テクスチャマッピングシャドウ</h3>\n<p><a href=\"https://daiki-eguchi.hatenablog.com/entry/2023/10/25/192655\">Unityで投影テクスチャマッピングシャドウ - 3Dゲーム開発備忘録</a></p>\n<p>投影テクスチャマッピングシャドウについてその原理からUnity実装を紹介しています。</p>","excerpt":"Unity Officials Porting Unity to CoreCLR Porting Unity to CoreCLR | Unity Blog UnityのCoreCLR移植における、ネイティブコードとの連携のためのガベージコレクションの修正について紹介しています。 Introducing Community Solutions to manage toxicity in gaming Introducing Community Solutions to manage…","fields":{"slug":"/project/unity-weekly/145/"},"frontmatter":{"date":"October 30, 2023","type":"unity-weekly","tags":["Unity Weekly","Unity"],"title":"Unity Weekly 145","description":"2023/10/30週のUnity Weeklyです。UI Toolkit、CoreCLR、Unity Community Solutions、Unity Test Frameworkなどについて取り上げています。","eyecatch":null}}},"pageContext":{"id":"666ccff4-283e-5649-8341-d21083c37377"}},"staticQueryHashes":["1480509143","3159585216"]}